
#user  nobody;
worker_processes  1;

#error_log  logs/error.log;
#error_log  logs/error.log  notice;
#error_log  logs/error.log  info;

#pid        logs/nginx.pid;

# add_header Strict-Transport-Security "max-age=31536000; includeSubDomains;preload" always;

events {
    worker_connections  1024;
}

http {
    include       mime.types;
    default_type  application/octet-stream;

    #log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
    #                  '$status $body_bytes_sent "$http_referer" '
    #                  '"$http_user_agent" "$http_x_forwarded_for"';

    #access_log  logs/access.log  main;

    sendfile        on;
    #tcp_nopush     on;

    #keepalive_timeout  0;
    keepalive_timeout  65;

    gzip  on;

    server {
        listen       80;
        server_name  127.0.0.1;

        #charset koi8-r;

        #access_log  logs/host.access.log  main;

        location / {
            root   html;
            index  index.html index.htm;
        }

        #error_page  404              /404.html;

        # redirect server error pages to the static page /50x.html
        #
        error_page   500 502 503 504  /50x.html;
        location = /50x.html {
            root   html;
        }

        # proxy the PHP scripts to Apache listening on 127.0.0.1:80
        #
        #location ~ \.php$ {
        #    proxy_pass   http://127.0.0.1;
        #}

        # pass the PHP scripts to FastCGI server listening on 127.0.0.1:9000
        #
        #location ~ \.php$ {
        #    root           html;
        #    fastcgi_pass   127.0.0.1:9000;
        #    fastcgi_index  index.php;
        #    fastcgi_param  SCRIPT_FILENAME  /scripts$fastcgi_script_name;
        #    include        fastcgi_params;
        #}

        # deny access to .htaccess files, if Apache's document root
        # concurs with nginx's one
        #
        #location ~ /\.ht {
        #    deny  all;
        #}
    }


    # another virtual host using mix of IP-, name-, and port-based configuration
    #
    server {
        listen       80;
        server_name  www.ss707494.com;

        location / {
             proxy_pass http://127.0.0.1:4464;
             root blog;
       }
        #location ~ *^.+\.*$ {
         #    root E:\huruji\blog\wechat_v1.1\public;
         #    access_log off;
           #  expires 24h;
       #}
    }
    server {
        listen       80;
        server_name  ss707494.com;

        location / {
             proxy_pass http://127.0.0.1:4464;
             root blog;
       }
        #location ~ *^.+\.*$ {
         #    root E:\huruji\blog\wechat_v1.1\public;
         #    access_log off;
           #  expires 24h;
       #}
    }
	server {
		listen       443;
		server_name  www.ss707494.com;
		ssl                  on;
		ssl_certificate      /usr/ss707494/ssl/public.pem; #根据实际的路径和文件名配置
		ssl_certificate_key   /usr/ss707494/ssl/private.key; #根据实际的路径和文件名配置
		ssl_session_timeout  5m;
		ssl_protocols TLSv1 TLSv1.1 TLSv1.2; #按照这个协议配
		ssl_ciphers  ECDHE-RSA-AES128-GCM-SHA256:HIGH:!aNULL:!MD5:!RC4:!DHE; #按照这个套件配
		ssl_prefer_server_ciphers   on;
        location / {
             proxy_pass http://127.0.0.1:4464;
             root blog;
       }
	}
	server {
		listen       443;
		server_name  ss707494.com;
		ssl                  on;
		ssl_certificate      /usr/ss707494/ssl/public.pem;
		ssl_certificate_key   /usr/ss707494/ssl/private.key;
		ssl_session_timeout  5m;
		ssl_protocols TLSv1 TLSv1.1 TLSv1.2;
		ssl_ciphers ECDHE-RSA-AES128-GCM-SHA256:ECDHE:ECDH:AES:HIGH:!NULL:!aNULL:!MD5:!ADH:!RC4;
		ssl_prefer_server_ciphers   on;
        location / {
             proxy_pass http://127.0.0.1:4464;
             root blog;
       }
	}

    # HTTPS server
    #
    #server {
    #    listen       443 ssl;
    #    server_name  localhost;

    #    ssl_certificate      cert.pem;
    #    ssl_certificate_key  cert.key;

    #    ssl_session_cache    shared:SSL:1m;
    #    ssl_session_timeout  5m;

    #    ssl_ciphers  HIGH:!aNULL:!MD5;
    #    ssl_prefer_server_ciphers  on;

    #    location / {
    #        root   html;
    #        index  index.html index.htm;
    #    }
    #}

}
