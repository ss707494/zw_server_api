{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\n\nvar _this = this,\n    _jsxFileName = \"D:\\\\code\\\\zw\\\\zw_client_web\\\\utils\\\\view\\\\me\\\\pickupAddress\\\\list.tsx\",\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\nimport React, { useEffect } from 'react';\nimport { HeaderTitle } from '../../../components/HeaderTitle/HeaderTitle';\nimport { modelFactory } from '../../../ModelAction/modelUtil';\nimport { doc } from '../../../graphqlTypes/doc';\nimport { DictTypeEnum } from '../../../ss_common/enum';\nimport { useStoreModel } from '../../../ModelAction/useStore';\nimport { fpMergePre } from '../../../tools/utils';\nimport styled from 'styled-components';\nimport { ButtonBase } from '@material-ui/core';\nimport { dealImgUrl } from '../../../tools/img';\nvar pickupAddressModel = modelFactory('pickupAddressModel', {\n  list: []\n}, {\n  getList: function () {\n    var _getList = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(value, option) {\n      var _res$getDataConfig$va, _res$getDataConfig, _res$getDataConfig$va2;\n\n      var res;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return option.query(doc.getDataConfig, {\n                data: {\n                  type: DictTypeEnum.SelfAddress\n                }\n              });\n\n            case 2:\n              res = _context.sent;\n              option.setData(fpMergePre({\n                list: (_res$getDataConfig$va = res === null || res === void 0 ? void 0 : (_res$getDataConfig = res.getDataConfig) === null || _res$getDataConfig === void 0 ? void 0 : (_res$getDataConfig$va2 = _res$getDataConfig.value) === null || _res$getDataConfig$va2 === void 0 ? void 0 : _res$getDataConfig$va2.list) !== null && _res$getDataConfig$va !== void 0 ? _res$getDataConfig$va : []\n              }));\n\n            case 4:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    function getList(_x, _x2) {\n      return _getList.apply(this, arguments);\n    }\n\n    return getList;\n  }()\n});\nvar ItemBox = styled(ButtonBase).withConfig({\n  displayName: \"list__ItemBox\",\n  componentId: \"gj9w8w-0\"\n})([\"&&&{display:flex;padding:10px 20px;> img{width:18vw;height:18vw;}> section{margin-left:9px;text-align:left;}}\"]);\n_c = ItemBox;\nexport var PickupAddress = function PickupAddress() {\n  _s();\n\n  var _useStoreModel = useStoreModel(pickupAddressModel),\n      actionsPAM = _useStoreModel.actions,\n      statePAM = _useStoreModel.state;\n\n  useEffect(function () {\n    if (!statePAM.list.length) {\n      actionsPAM.getList();\n    }\n  }, []);\n  console.log(statePAM.list[0]);\n  console.log(dealImgUrl('123'));\n  return __jsx(\"div\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 10\n    }\n  }, __jsx(HeaderTitle, {\n    title: '我的取货点',\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 5\n    }\n  }), statePAM.list.map(function (value) {\n    return __jsx(ItemBox, {\n      key: \"PickupAddress_\".concat(value.id),\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 40\n      }\n    }, __jsx(\"img\", {\n      src: dealImgUrl(value.imgUrl),\n      alt: \"\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 7\n      }\n    }), __jsx(\"section\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 7\n      }\n    }, __jsx(\"header\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }\n    }, value.fullName), __jsx(\"footer\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }\n    }, \"\".concat(value.province, \" \").concat(value.city, \" \").concat(value.streetAddress))));\n  }));\n};\n\n_s(PickupAddress, \"b0Y6TRZ1AuVhP5jqpKnGk1ik1NA=\", false, function () {\n  return [useStoreModel];\n});\n\n_c2 = PickupAddress;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"ItemBox\");\n$RefreshReg$(_c2, \"PickupAddress\");","map":{"version":3,"sources":["D:/code/zw/zw_client_web/utils/view/me/pickupAddress/list.tsx"],"names":["React","useEffect","HeaderTitle","modelFactory","doc","DictTypeEnum","useStoreModel","fpMergePre","styled","ButtonBase","dealImgUrl","pickupAddressModel","list","getList","value","option","query","getDataConfig","data","type","SelfAddress","res","setData","ItemBox","PickupAddress","actionsPAM","actions","statePAM","state","length","console","log","map","id","imgUrl","fullName","province","city","streetAddress"],"mappings":"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","sourcesContent":["import React, {useEffect} from 'react'\r\nimport {HeaderTitle} from '../../../components/HeaderTitle/HeaderTitle'\r\nimport {modelFactory} from '../../../ModelAction/modelUtil'\r\nimport {doc} from '../../../graphqlTypes/doc'\r\nimport {DictTypeEnum} from '../../../ss_common/enum'\r\nimport {DataConfigItemInput} from '../../../graphqlTypes/types'\r\nimport {useStoreModel} from '../../../ModelAction/useStore'\r\nimport {fpMergePre} from '../../../tools/utils'\r\nimport styled from 'styled-components'\r\nimport {ButtonBase} from '@material-ui/core'\r\nimport {dealImgUrl} from '../../../tools/img'\r\n\r\nconst pickupAddressModel = modelFactory('pickupAddressModel', {\r\n  list: [],\r\n}, {\r\n  getList: async (value, option) => {\r\n    const res = await option.query(doc.getDataConfig, {\r\n      data: {\r\n        type: DictTypeEnum.SelfAddress,\r\n      } as DataConfigItemInput,\r\n    })\r\n    option.setData(fpMergePre({\r\n      list: res?.getDataConfig?.value?.list ?? [],\r\n    }))\r\n  },\r\n\r\n})\r\n\r\nconst ItemBox = styled(ButtonBase)`\r\n  &&& {\r\n    display: flex;\r\n    padding: 10px 20px;\r\n    > img {\r\n      width: 18vw;\r\n      height: 18vw;\r\n    }\r\n    > section {\r\n      margin-left: 9px;\r\n      text-align: left;\r\n    }\r\n  }\r\n`\r\n\r\nexport const PickupAddress = () => {\r\n  const {actions: actionsPAM, state: statePAM} = useStoreModel(pickupAddressModel)\r\n  useEffect(() => {\r\n    if (!statePAM.list.length) {\r\n      actionsPAM.getList()\r\n    }\r\n  }, [])\r\n\r\n  console.log(statePAM.list[0])\r\n\r\n  console.log(dealImgUrl('123'))\r\n  return <div>\r\n    <HeaderTitle\r\n        title={'我的取货点'}\r\n    />\r\n    {statePAM.list.map((value: any) => <ItemBox key={`PickupAddress_${value.id}`}>\r\n      <img src={dealImgUrl(value.imgUrl)}\r\n           alt=\"\"/>\r\n      <section>\r\n        <header>{value.fullName}</header>\r\n        <footer>\r\n          {`${value.province} ${value.city} ${value.streetAddress}`}\r\n        </footer>\r\n      </section>\r\n    </ItemBox>)}\r\n  </div>\r\n}\r\n"]},"metadata":{},"sourceType":"module"}