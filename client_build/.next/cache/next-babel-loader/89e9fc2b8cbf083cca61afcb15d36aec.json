{"ast":null,"code":"var __jsx = React.createElement;\nimport styled from 'styled-components';\nimport React from 'react';\nimport { dealImgUrl } from '../../../../tools/img';\nimport { dealMoney } from '../../../../tools/utils';\nimport { mpStyle } from '../../../../style/common';\nimport { Space } from '../../../../components/Box/Box';\nimport { Button, Card } from '@material-ui/core';\nimport { ShoppingCart } from '@material-ui/icons';\nimport { useStoreModel } from '../../../../ModelAction/useStore';\nimport { updateShopCartModel } from '../../../../components/ProductItem/UpdateShopCart';\nimport { showMessage } from '../../../../components/Message/Message';\nimport { productModel } from '../../../../components/ProductItem/ProductItem';\nimport { ShopCartModel } from '../../../m/cart';\nimport { HomeType } from '../../../m/home/appModule';\nimport AddCircleOutlineIcon from '@material-ui/icons/AddCircleOutline';\nimport { useRouter } from 'next/router';\nimport { jssStyled } from '../../../../tools/jssStyled';\nimport StarBorderRoundedIcon from '@material-ui/icons/StarBorderRounded';\nimport { grey } from '@material-ui/core/colors';\nimport StarRoundedIcon from '@material-ui/icons/StarRounded';\nconst Box = styled(Card).withConfig({\n  displayName: \"productItemBox__Box\",\n  componentId: \"sc-1i837b0-0\"\n})([\"display:flex;flex-direction:column;width:\", \";padding:14px 20px 16px;&&&{box-shadow:none;}\"], props => {\n  var _props$width;\n\n  return `${(_props$width = props.width) !== null && _props$width !== void 0 ? _props$width : 322}px`;\n});\nconst ImgBox = styled.div.withConfig({\n  displayName: \"productItemBox__ImgBox\",\n  componentId: \"sc-1i837b0-1\"\n})([\"align-self:center;> img{width:\", \";height:\", \";}\"], props => {\n  var _props$width2;\n\n  return `${((_props$width2 = props.width) !== null && _props$width2 !== void 0 ? _props$width2 : 260) - 40}px`;\n}, props => {\n  var _props$width3;\n\n  return `${(((_props$width3 = props.width) !== null && _props$width3 !== void 0 ? _props$width3 : 260) - 40) * 4 / 3}px`;\n});\nconst Price = styled.div.withConfig({\n  displayName: \"productItemBox__Price\",\n  componentId: \"sc-1i837b0-2\"\n})([\"display:flex;align-items:center;> aside{\", \";font-size:\", \";color:\", \";}> main{font-size:\", \";font-weight:400;text-decoration:line-through;color:\", \";}\"], mpStyle.fontType.xl, props => {\n  var _props$width4;\n\n  return `${((_props$width4 = props.width) !== null && _props$width4 !== void 0 ? _props$width4 : 260) / 10 - 2}px`;\n}, mpStyle.red, props => {\n  var _props$width5;\n\n  return `${((_props$width5 = props.width) !== null && _props$width5 !== void 0 ? _props$width5 : 260) / 10 - 8}px`;\n}, mpStyle.grey);\nconst Footer = styled.div.withConfig({\n  displayName: \"productItemBox__Footer\",\n  componentId: \"sc-1i837b0-3\"\n})([\"display:flex;&&&{.MuiButton-root{width:\", \";min-width:\", \";height:\", \";padding:0;}.MuiSvgIcon-root{font-size:\", \";}}\"], props => {\n  var _props$width6;\n\n  return `${((_props$width6 = props.width) !== null && _props$width6 !== void 0 ? _props$width6 : 260) * .17}px`;\n}, props => {\n  var _props$width7;\n\n  return `${((_props$width7 = props.width) !== null && _props$width7 !== void 0 ? _props$width7 : 260) * .17}px`;\n}, props => {\n  var _props$width8;\n\n  return `${((_props$width8 = props.width) !== null && _props$width8 !== void 0 ? _props$width8 : 260) * .17}px`;\n}, props => {\n  var _props$width9;\n\n  return `${((_props$width9 = props.width) !== null && _props$width9 !== void 0 ? _props$width9 : 260) * .1}px`;\n});\nconst Name = styled.div.withConfig({\n  displayName: \"productItemBox__Name\",\n  componentId: \"sc-1i837b0-4\"\n})([\"flex-grow:1;\", \";font-size:\", \";\"], mpStyle.fontType.n, props => {\n  var _props$width10;\n\n  return `${((_props$width10 = props.width) !== null && _props$width10 !== void 0 ? _props$width10 : 260) / 10 - 10}px`;\n});\nconst Star = jssStyled('div')({});\nexport const ProductItemBox = ({\n  hideShopCartButton = false,\n  hidePrice = false,\n  groupQueue,\n  product,\n  width = 300,\n  type = HomeType.home\n}) => {\n  var _product$img, _product$img$;\n\n  const router = useRouter();\n  const {\n    actions: actionsUpdateShopCartModel\n  } = useStoreModel(updateShopCartModel);\n  const {\n    actions: actionsProductModel\n  } = useStoreModel(productModel);\n  const {\n    actions: actionsShopCartModel\n  } = useStoreModel(ShopCartModel);\n\n  const _width = width - 40;\n\n  return __jsx(Box, {\n    width: _width\n  }, __jsx(ImgBox, {\n    width: _width\n  }, __jsx(\"img\", {\n    src: dealImgUrl(product === null || product === void 0 ? void 0 : (_product$img = product.img) === null || _product$img === void 0 ? void 0 : (_product$img$ = _product$img[0]) === null || _product$img$ === void 0 ? void 0 : _product$img$.url),\n    alt: ''\n  })), __jsx(Space, {\n    h: 8\n  }), !hidePrice && __jsx(React.Fragment, null, __jsx(Price, {\n    width: _width\n  }, __jsx(\"aside\", null, dealMoney(product === null || product === void 0 ? void 0 : product.priceOut)), __jsx(Space, {\n    w: 16\n  }), __jsx(\"main\", null, dealMoney(product === null || product === void 0 ? void 0 : product.priceMarket))), __jsx(Space, {\n    h: 5\n  })), __jsx(Footer, {\n    width: _width\n  }, __jsx(Name, {\n    width: _width\n  }, product.name), !hideShopCartButton && __jsx(Button, {\n    variant: 'contained',\n    color: 'secondary',\n    size: 'small',\n    onClick: async () => {\n      if (type === HomeType.home) {\n        const res = await actionsUpdateShopCartModel.openClick();\n\n        if ((res === null || res === void 0 ? void 0 : res.num) > 0) {\n          var _await$actionsProduct, _await$actionsProduct2;\n\n          if ((_await$actionsProduct = await actionsProductModel.updateNumShopCart({\n            product,\n            number: ~~(res === null || res === void 0 ? void 0 : res.num)\n          })) === null || _await$actionsProduct === void 0 ? void 0 : (_await$actionsProduct2 = _await$actionsProduct.updateNumShopCart) === null || _await$actionsProduct2 === void 0 ? void 0 : _await$actionsProduct2.id) {\n            showMessage('操作成功');\n            actionsShopCartModel.getList();\n          }\n        }\n      } else if (type === HomeType.group) {\n        await router.push({\n          pathname: '/pc/groupProduct/[id]',\n          query: {\n            id: product.id\n          }\n        });\n      }\n    }\n  }, type === HomeType.home && __jsx(ShoppingCart, null), type === HomeType.group && __jsx(AddCircleOutlineIcon, null))), (groupQueue === null || groupQueue === void 0 ? void 0 : groupQueue.id) && __jsx(Star, null, [...Array(product.groupPrecision)].map((v, i) => i).map(value => {\n    var _groupQueue$sumFillAm;\n\n    return value + 1 > ((_groupQueue$sumFillAm = groupQueue.sumFillAmount) !== null && _groupQueue$sumFillAm !== void 0 ? _groupQueue$sumFillAm : 0) ? __jsx(StarBorderRoundedIcon, {\n      key: `clickStar${value}`,\n      fontSize: 'small',\n      style: {\n        color: grey[700]\n      }\n    }) : __jsx(StarRoundedIcon, {\n      key: `clickStar${value}`,\n      style: {\n        color: '#FDD334'\n      },\n      fontSize: 'small'\n    });\n  })));\n};","map":null,"metadata":{},"sourceType":"module"}