{"ast":null,"code":"var _jsxFileName = \"D:\\\\code\\\\zw\\\\zw_client_web\\\\utils\\\\view\\\\groupProduct\\\\[id].tsx\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { useEffect } from 'react';\nimport { useRouter } from 'next/router';\nimport { modelFactory } from '../../ModelAction/modelUtil';\nimport { doc } from '../../graphqlTypes/doc';\nimport { useStoreModel } from '../../ModelAction/useStore';\nimport { dealMoney, fpMergePre } from '../../tools/utils';\nimport CusCarousel from '../../components/Swipe/Swipe';\nimport { HeaderTitle } from '../../components/HeaderTitle/HeaderTitle';\nimport styled from 'styled-components';\nimport { ls } from '../../tools/dealKey';\nimport { mpStyle } from '../../style/common';\nexport const groupProductModel = modelFactory('groupProductModel', {\n  product: {},\n  groupQueneList: []\n}, {\n  getData: async (value, option) => {\n    var _res$productListByIds, _res$productListByIds2, _groupQueneList$group;\n\n    const res = await option.query(doc.productListByIds, {\n      ids: [value]\n    });\n    const groupQueneList = await option.query(doc.groupQueueList, {\n      groupQueueItemInput: {\n        product: {\n          id: value\n        }\n      }\n    });\n    option.setData(fpMergePre({\n      product: (_res$productListByIds = res === null || res === void 0 ? void 0 : (_res$productListByIds2 = res.productListByIds) === null || _res$productListByIds2 === void 0 ? void 0 : _res$productListByIds2.list[0]) !== null && _res$productListByIds !== void 0 ? _res$productListByIds : {},\n      groupQueneList: (_groupQueneList$group = groupQueneList === null || groupQueneList === void 0 ? void 0 : groupQueneList.groupQueueList) !== null && _groupQueneList$group !== void 0 ? _groupQueneList$group : []\n    }));\n  }\n});\nconst PriceRed = styled.div.withConfig({\n  displayName: \"id__PriceRed\",\n  componentId: \"sc-1c5vpsf-0\"\n})([\"background:\", \";color:white;display:grid;grid-template-columns:1fr 120px;grid-template-rows:repeat(2,30px);align-items:center;> main{grid-area:1/1/3/2;padding-left:20px;}\"], mpStyle.red);\nexport const GroupProduct = () => {\n  var _ref, _router$query, _product$img;\n\n  const router = useRouter();\n  const id = (_ref = (_router$query = router.query) === null || _router$query === void 0 ? void 0 : _router$query.id) !== null && _ref !== void 0 ? _ref : '';\n  const {\n    actions: actionsGroupProduct,\n    state: stateGroupProduct\n  } = useStoreModel(groupProductModel);\n  useEffect(() => {\n    actionsGroupProduct.getData(id);\n  }, [id]);\n  const product = stateGroupProduct.product;\n  return __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 10\n    }\n  }, __jsx(HeaderTitle, {\n    title: '产品详情',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 5\n    }\n  }), __jsx(CusCarousel, {\n    height: '240px',\n    dataList: product === null || product === void 0 ? void 0 : (_product$img = product.img) === null || _product$img === void 0 ? void 0 : _product$img.map(v => _objectSpread(_objectSpread({}, v), {}, {\n      imgUrl: v === null || v === void 0 ? void 0 : v.url\n    })),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 5\n    }\n  }), __jsx(PriceRed, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 5\n    }\n  }, __jsx(\"main\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }\n  }, ls('基准价格'), dealMoney(product.priceOut), \"/\", product.packingUnitString), __jsx(\"aside\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }\n  }, ls('已成团'), 23, ls('单')), __jsx(\"aside\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 7\n    }\n  }, ls('评团中'), 2, ls('单'))), id, \"groupProduct\");\n};","map":{"version":3,"sources":["D:/code/zw/zw_client_web/utils/view/groupProduct/[id].tsx"],"names":["React","useEffect","useRouter","modelFactory","doc","useStoreModel","dealMoney","fpMergePre","CusCarousel","HeaderTitle","styled","ls","mpStyle","groupProductModel","product","groupQueneList","getData","value","option","res","query","productListByIds","ids","groupQueueList","groupQueueItemInput","id","setData","list","PriceRed","div","red","GroupProduct","router","actions","actionsGroupProduct","state","stateGroupProduct","img","map","v","imgUrl","url","priceOut","packingUnitString"],"mappings":"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","sourcesContent":["import React, {useEffect} from 'react'\r\nimport {useRouter} from 'next/router'\r\nimport {modelFactory} from '../../ModelAction/modelUtil'\r\nimport {GroupQueue, GroupQueueItemInput, Product} from '../../graphqlTypes/types'\r\nimport {doc} from '../../graphqlTypes/doc'\r\nimport {useStoreModel} from '../../ModelAction/useStore'\r\nimport {dealMoney, fpMergePre} from '../../tools/utils'\r\nimport CusCarousel from '../../components/Swipe/Swipe'\r\nimport {HeaderTitle} from '../../components/HeaderTitle/HeaderTitle'\r\nimport styled from 'styled-components'\r\nimport { ls } from '../../tools/dealKey'\r\nimport {mpStyle} from '../../style/common'\r\n\r\nexport const groupProductModel = modelFactory('groupProductModel', {\r\n  product: {} as Product,\r\n  groupQueneList: [] as GroupQueue[],\r\n}, {\r\n  getData: async (value: string, option) => {\r\n    const res = await option.query(doc.productListByIds, {\r\n      ids: [value],\r\n    })\r\n    const groupQueneList = await option.query(doc.groupQueueList, {\r\n      groupQueueItemInput: {\r\n        product: {\r\n          id: value,\r\n        },\r\n      } as GroupQueueItemInput,\r\n    })\r\n    option.setData(fpMergePre({\r\n      product: res?.productListByIds?.list[0] ?? {},\r\n      groupQueneList: groupQueneList?.groupQueueList ?? [],\r\n    }))\r\n  },\r\n\r\n})\r\n\r\nconst PriceRed = styled.div`\r\n  background: ${mpStyle.red};\r\n  color: white;\r\n  display: grid;\r\n  grid-template-columns: 1fr 120px;\r\n  grid-template-rows: repeat(2, 30px);\r\n  align-items: center;\r\n  > main {\r\n    grid-area: 1/1/3/2;\r\n    padding-left: 20px;\r\n  }\r\n`\r\n\r\nexport const GroupProduct = () => {\r\n  const router = useRouter()\r\n  const id = (router.query?.id as string) ?? ''\r\n  const {actions: actionsGroupProduct, state: stateGroupProduct} = useStoreModel(groupProductModel)\r\n  useEffect(() => {\r\n    actionsGroupProduct.getData(id)\r\n  }, [id])\r\n\r\n  const product = stateGroupProduct.product\r\n\r\n  return <div>\r\n    <HeaderTitle\r\n        title={'产品详情'}\r\n    />\r\n    <CusCarousel\r\n        height={'240px'}\r\n        dataList={product?.img?.map(v => ({\r\n          ...v,\r\n          imgUrl: v?.url,\r\n        })) as []}\r\n    />\r\n    <PriceRed>\r\n      <main>{ls('基准价格')}{dealMoney(product.priceOut)}/{product.packingUnitString}</main>\r\n      <aside>{ls('已成团')}{23}{ls('单')}</aside>\r\n      <aside>{ls('评团中')}{2}{ls('单')}</aside>\r\n    </PriceRed>\r\n    {id}\r\n    groupProduct\r\n  </div>\r\n}\r\n"]},"metadata":{},"sourceType":"module"}