{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\n\nvar _this = this,\n    _jsxFileName = \"D:\\\\code\\\\zw\\\\zw_client_web\\\\utils\\\\view\\\\cart\\\\index.tsx\",\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport { modelFactory } from '../../ModelAction/modelUtil';\nimport { PickUpTypeEnum } from '../../ss_common/enum';\nimport { fpMergePre } from '../../tools/utils';\nimport { setForm } from '../../tools/commonAction';\nimport { doc } from '../../graphqlTypes/doc';\nimport { ShopCartPage } from './shopCart';\nimport React from 'react';\nimport { useStoreModel } from '../../ModelAction/useStore';\nimport { OrderPage } from './orderPage';\nexport var pageTypeEnum = {\n  shopCart: 'shopCart',\n  order: 'order'\n};\nvar initForm = {\n  pickUpType: PickUpTypeEnum.Self,\n  addressId: ''\n};\n\nvar _addressList = function _addressList(option) {\n  return option.data.form.pickUpType === PickUpTypeEnum.Delivery && option.data.userAddressList || option.data.selfAddress;\n};\n\nexport var shopCartModel = modelFactory('shopCartModel', {\n  user: {},\n  payCardList: [],\n  userAddressList: [],\n  selfAddress: [],\n  pageType: pageTypeEnum.shopCart,\n  shopCartList: [],\n  shopCartListNext: [],\n  form: _objectSpread({}, initForm)\n}, {\n  dealAddressList: function dealAddressList(value, option) {\n    return _addressList(option);\n  },\n  dealAddressData: function dealAddressData(value, option) {\n    return _addressList(option).find(function (v) {\n      return v.id === option.data.form.addressId;\n    }) || {};\n  },\n  clearForm: function clearForm(value, option) {\n    return option.setData(fpMergePre({\n      form: _objectSpread({}, initForm)\n    }));\n  },\n  setForm: setForm,\n  getList: function () {\n    var _getList = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(value, option) {\n      var _res$shopCartList$fil, _res$shopCartList$fil2;\n\n      var res;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return option.query(doc.userShopCartList);\n\n            case 2:\n              res = _context.sent;\n              option.setData(fpMergePre({\n                shopCartList: (_res$shopCartList$fil = res === null || res === void 0 ? void 0 : res.shopCartList.filter(function (v) {\n                  return !v.isNext;\n                })) !== null && _res$shopCartList$fil !== void 0 ? _res$shopCartList$fil : [],\n                shopCartListNext: (_res$shopCartList$fil2 = res === null || res === void 0 ? void 0 : res.shopCartList.filter(function (v) {\n                  return !!v.isNext;\n                })) !== null && _res$shopCartList$fil2 !== void 0 ? _res$shopCartList$fil2 : []\n              }));\n\n            case 4:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    function getList(_x, _x2) {\n      return _getList.apply(this, arguments);\n    }\n\n    return getList;\n  }(),\n  updatePageType: function updatePageType(value, option) {\n    return option.setData(fpMergePre({\n      pageType: value\n    }));\n  },\n  getOrderInfo: function () {\n    var _getOrderInfo = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2(value, option) {\n      var _res$getDataConfig$va, _res$getDataConfig, _res$getDataConfig$va2, _res$userAddressListO, _res$userAddressListO2, _res$getDataConfig2, _res$getDataConfig2$v, _res$getDataConfig2$v2, _res$getDataConfig2$v3;\n\n      var res;\n      return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              _context2.next = 2;\n              return option.query(doc.orderConfirmInfo);\n\n            case 2:\n              res = _context2.sent;\n              option.setData(fpMergePre({\n                user: res === null || res === void 0 ? void 0 : res.oneUser,\n                payCardList: res === null || res === void 0 ? void 0 : res.payCardListOneUser,\n                userAddressList: res === null || res === void 0 ? void 0 : res.userAddressListOneUser,\n                selfAddress: (_res$getDataConfig$va = res === null || res === void 0 ? void 0 : (_res$getDataConfig = res.getDataConfig) === null || _res$getDataConfig === void 0 ? void 0 : (_res$getDataConfig$va2 = _res$getDataConfig.value) === null || _res$getDataConfig$va2 === void 0 ? void 0 : _res$getDataConfig$va2.list) !== null && _res$getDataConfig$va !== void 0 ? _res$getDataConfig$va : []\n              }));\n              option.setData(fpMergePre({\n                form: {\n                  addressId: option.data.form.pickUpType === PickUpTypeEnum.Delivery && (res === null || res === void 0 ? void 0 : (_res$userAddressListO = res.userAddressListOneUser) === null || _res$userAddressListO === void 0 ? void 0 : (_res$userAddressListO2 = _res$userAddressListO.find(function (v) {\n                    return v.isDefault;\n                  })) === null || _res$userAddressListO2 === void 0 ? void 0 : _res$userAddressListO2.id) || (res === null || res === void 0 ? void 0 : (_res$getDataConfig2 = res.getDataConfig) === null || _res$getDataConfig2 === void 0 ? void 0 : (_res$getDataConfig2$v = _res$getDataConfig2.value) === null || _res$getDataConfig2$v === void 0 ? void 0 : (_res$getDataConfig2$v2 = _res$getDataConfig2$v.list) === null || _res$getDataConfig2$v2 === void 0 ? void 0 : (_res$getDataConfig2$v3 = _res$getDataConfig2$v2[0]) === null || _res$getDataConfig2$v3 === void 0 ? void 0 : _res$getDataConfig2$v3.id)\n                }\n              }));\n\n            case 5:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2);\n    }));\n\n    function getOrderInfo(_x3, _x4) {\n      return _getOrderInfo.apply(this, arguments);\n    }\n\n    return getOrderInfo;\n  }()\n});\nexport var CartPage = function CartPage() {\n  _s();\n\n  var _useStoreModel = useStoreModel(shopCartModel),\n      stateSCM = _useStoreModel.state;\n\n  return stateSCM.pageType === pageTypeEnum.order && __jsx(OrderPage, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 55\n    }\n  }) || __jsx(ShopCartPage, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 72\n    }\n  });\n};\n\n_s(CartPage, \"pOqooWr/VkijetUMvlQsd1xnlBA=\", false, function () {\n  return [useStoreModel];\n});\n\n_c = CartPage;\n\nvar _c;\n\n$RefreshReg$(_c, \"CartPage\");","map":{"version":3,"sources":["D:/code/zw/zw_client_web/utils/view/cart/index.tsx"],"names":["modelFactory","PickUpTypeEnum","fpMergePre","setForm","doc","ShopCartPage","React","useStoreModel","OrderPage","pageTypeEnum","shopCart","order","initForm","pickUpType","Self","addressId","_addressList","option","data","form","Delivery","userAddressList","selfAddress","shopCartModel","user","payCardList","pageType","shopCartList","shopCartListNext","dealAddressList","value","dealAddressData","find","v","id","clearForm","setData","getList","query","userShopCartList","res","filter","isNext","updatePageType","getOrderInfo","orderConfirmInfo","oneUser","payCardListOneUser","userAddressListOneUser","getDataConfig","list","isDefault","CartPage","stateSCM","state"],"mappings":"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","sourcesContent":["import {modelFactory} from '../../ModelAction/modelUtil'\r\nimport {OrderInfoItemInput, ShopCart, User, UserAddress, UserPayCard} from '../../graphqlTypes/types'\r\nimport {PickUpTypeEnum} from '../../ss_common/enum'\r\nimport {fpMergePre} from '../../tools/utils'\r\nimport {setForm} from '../../tools/commonAction'\r\nimport {doc} from '../../graphqlTypes/doc'\r\nimport {ShopCartPage} from './shopCart'\r\nimport React from 'react'\r\nimport {useStoreModel} from '../../ModelAction/useStore'\r\nimport {OrderPage} from './orderPage'\r\n\r\nexport const pageTypeEnum = {\r\n  shopCart: 'shopCart',\r\n  order: 'order',\r\n}\r\n\r\nconst initForm: OrderInfoItemInput = {\r\n  pickUpType: PickUpTypeEnum.Self,\r\n  addressId: '',\r\n}\r\nconst _addressList = (option: BaseModelActionOption) => {\r\n  return (option.data.form.pickUpType === PickUpTypeEnum.Delivery && option.data.userAddressList) || option.data.selfAddress\r\n}\r\nexport const shopCartModel = modelFactory('shopCartModel', {\r\n  user: {} as User,\r\n  payCardList: [] as UserPayCard[],\r\n  userAddressList: [] as UserAddress[],\r\n  selfAddress: [] as any[],\r\n  pageType: pageTypeEnum.shopCart,\r\n  shopCartList: [] as ShopCart[],\r\n  shopCartListNext: [] as ShopCart[],\r\n  form: {\r\n    ...initForm,\r\n  } as OrderInfoItemInput,\r\n}, {\r\n  dealAddressList: (value, option) => _addressList(option),\r\n  dealAddressData: (value, option) => {\r\n    return _addressList(option).find((v: UserAddress) => v.id === option.data.form.addressId) || {}\r\n  },\r\n  clearForm: (value, option) => option.setData(fpMergePre({\r\n    form: {\r\n      ...initForm,\r\n    },\r\n  })),\r\n  setForm: setForm,\r\n  getList: async (value, option) => {\r\n    const res = await option.query(doc.userShopCartList)\r\n    option.setData(fpMergePre({\r\n      shopCartList: res?.shopCartList.filter((v: ShopCart) => !v.isNext) ?? [],\r\n      shopCartListNext: res?.shopCartList.filter((v: ShopCart) => !!v.isNext) ?? [],\r\n    }))\r\n  },\r\n  updatePageType: (value: string, option) => option.setData(fpMergePre({\r\n    pageType: value,\r\n  })),\r\n  getOrderInfo: async (value, option) => {\r\n    const res = await option.query(doc.orderConfirmInfo)\r\n    option.setData(fpMergePre({\r\n      user: res?.oneUser,\r\n      payCardList: res?.payCardListOneUser,\r\n      userAddressList: res?.userAddressListOneUser,\r\n      selfAddress: res?.getDataConfig?.value?.list ?? [],\r\n    }))\r\n    option.setData(fpMergePre({\r\n      form: {\r\n        addressId: (option.data.form.pickUpType === PickUpTypeEnum.Delivery && res?.userAddressListOneUser?.find((v: UserAddress)=> v.isDefault)?.id) || res?.getDataConfig?.value?.list?.[0]?.id,\r\n      },\r\n    }))\r\n  },\r\n})\r\n\r\nexport const CartPage = () => {\r\n  const {state: stateSCM} = useStoreModel(shopCartModel)\r\n  return (stateSCM.pageType === pageTypeEnum.order && <OrderPage/>) || <ShopCartPage/>\r\n}\r\n"]},"metadata":{},"sourceType":"module"}