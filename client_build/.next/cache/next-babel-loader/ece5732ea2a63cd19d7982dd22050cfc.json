{"ast":null,"code":"var __jsx = React.createElement;\nimport React, { useEffect } from 'react';\nimport { MeLayoutBox } from '../components/meLayoutBox';\nimport { styled } from '@material-ui/styles';\nimport { ll } from '../../../../tools/dealKey';\nimport { Space } from '../../../../components/Box/Box';\nimport { useStoreModel } from '../../../../ModelAction/useStore';\nimport { PickupAddressModel } from '../../../m/me/pickupAddress/list';\nimport { dealImgUrl } from '../../../../tools/img';\nimport { Button, Divider } from '@material-ui/core';\nconst Header = styled('div')({});\nconst ListBox = styled('div')({\n  display: 'grid',\n  gridTemplateColumns: '370px 370px',\n  gridGap: 40\n});\nconst Box = styled('div')({\n  width: '370px',\n  background: '#FFFFFF',\n  boxShadow: '0px 2px 8px 0px #EBEBEB',\n  borderRadius: '10px',\n  border: '1px solid #E1E1E1',\n  padding: '22px',\n  '&>img': {\n    width: '325px',\n    height: '130px'\n  },\n  '&>main': {\n    display: 'grid',\n    gridTemplateColumns: '36px 1fr',\n    gridColumnGap: 15,\n    alignItems: 'center',\n    '&>img': {\n      width: 36,\n      height: 36\n    },\n    '&>section': {\n      wordBreak: 'break-word',\n      display: 'grid',\n      gridTemplateColumns: '1fr max-content',\n      '&>aside': {\n        '& .MuiButtonBase-root': {\n          height: 26,\n          borderRadius: 6\n        }\n      }\n    }\n  }\n});\nexport const PCPickupAddress = () => {\n  const {\n    actions: actionsPickupAddressModel,\n    state: statePickupAddressModel\n  } = useStoreModel(PickupAddressModel);\n  useEffect(() => {\n    if (!statePickupAddressModel.list.length) {\n      actionsPickupAddressModel.getList();\n    }\n  }, [actionsPickupAddressModel, statePickupAddressModel.list]);\n  return __jsx(MeLayoutBox, null, __jsx(Header, null, ll('我的自取点')), __jsx(Space, {\n    h: 39\n  }), __jsx(ListBox, null, statePickupAddressModel.list.sort((a, b) => {\n    var _statePickupAddressMo;\n\n    return ((_statePickupAddressMo = statePickupAddressModel.user.userInfo) === null || _statePickupAddressMo === void 0 ? void 0 : _statePickupAddressMo.pickupAddressId) === (b === null || b === void 0 ? void 0 : b.id) ? 1 : (b === null || b === void 0 ? void 0 : b.updateTime) - (a === null || a === void 0 ? void 0 : a.updateTime);\n  }).map(value => {\n    var _statePickupAddressMo2;\n\n    return __jsx(Box, {\n      key: `statePickupAddressModel${value.id}`\n    }, __jsx(\"img\", {\n      src: dealImgUrl(value.imgUrl),\n      alt: \"\"\n    }), __jsx(Space, {\n      h: 16\n    }), __jsx(\"header\", null, value.fullName), __jsx(Space, {\n      h: 15\n    }), __jsx(Divider, null), __jsx(Space, {\n      h: 24\n    }), __jsx(\"main\", null, __jsx(\"img\", {\n      alt: '',\n      src: '/img/address/address.png'\n    }), __jsx(\"section\", null, value === null || value === void 0 ? void 0 : value.apartment, \" \", value === null || value === void 0 ? void 0 : value.streetAddress, value === null || value === void 0 ? void 0 : value.city, \" \", value === null || value === void 0 ? void 0 : value.province, \" \", value === null || value === void 0 ? void 0 : value.zip)), __jsx(Space, {\n      h: 20\n    }), __jsx(\"main\", null, __jsx(\"img\", {\n      alt: '',\n      src: '/img/address/clock.png'\n    }), __jsx(\"section\", null, value.openTime)), __jsx(Space, {\n      h: 20\n    }), __jsx(\"main\", null, __jsx(\"img\", {\n      alt: '',\n      src: '/img/address/phone.png'\n    }), __jsx(\"section\", null, value.phone, __jsx(\"aside\", null, ((_statePickupAddressMo2 = statePickupAddressModel.user.userInfo) === null || _statePickupAddressMo2 === void 0 ? void 0 : _statePickupAddressMo2.pickupAddressId) === value.id && __jsx(\"span\", null, ll('默认地址')) || __jsx(Button, {\n      color: 'secondary',\n      variant: 'outlined',\n      onClick: async () => {\n        var _await$actionsPickupA, _await$actionsPickupA2;\n\n        if ((_await$actionsPickupA = await actionsPickupAddressModel.setDefault(value)) === null || _await$actionsPickupA === void 0 ? void 0 : (_await$actionsPickupA2 = _await$actionsPickupA.updateUserInfo) === null || _await$actionsPickupA2 === void 0 ? void 0 : _await$actionsPickupA2.id) {\n          actionsPickupAddressModel.getList();\n        }\n      }\n    }, ll('设为默认'))))));\n  })));\n};","map":null,"metadata":{},"sourceType":"module"}