{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nvar __jsx = React.createElement;\nimport React, { useEffect } from 'react';\nimport { grey } from '@material-ui/core/colors';\nimport { KeyboardArrowRight } from '@material-ui/icons';\nimport { ButtonBase } from '@material-ui/core';\nimport { useStoreModel } from '../../../../../ModelAction/useStore';\nimport { dealUrlQuery, fpMergePre } from '../../../../../tools/utils';\nimport { Loading } from '../../../../../components/Loading/Loading';\nimport { categoryList } from '../../../../../graphqlTypes/doc';\nimport { dealImgUrl } from '../../../../../tools/img';\nimport { CategoryRootName } from '../../../../../ss_common/enum';\nimport { modelFactory } from '../../../../../ModelAction/modelUtil';\nimport { useRouter } from 'next/router';\nimport { HomeTabsModel } from '../Tabs/Tabs';\nimport styled from 'styled-components';\nexport var homeCategorySelectionModel = modelFactory('HomeCategorySelection', {\n  listData: [],\n  total: 0,\n  actId: ''\n}, {\n  getList: function () {\n    var _getList = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(value, option) {\n      var _res$categoryList;\n\n      var res;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return option.query(categoryList, {\n                data: {\n                  category: {\n                    parentCategory: {\n                      id: CategoryRootName\n                    }\n                  }\n                }\n              });\n\n            case 2:\n              res = _context.sent;\n              option.setData(fpMergePre({\n                listData: res === null || res === void 0 ? void 0 : (_res$categoryList = res.categoryList) === null || _res$categoryList === void 0 ? void 0 : _res$categoryList.list\n              }));\n\n            case 4:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    function getList(_x, _x2) {\n      return _getList.apply(this, arguments);\n    }\n\n    return getList;\n  }(),\n  changeActId: function () {\n    var _changeActId = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2(value, option) {\n      return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              option.setData(fpMergePre({\n                actId: value !== null && value !== void 0 ? value : ''\n              }));\n\n            case 1:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2);\n    }));\n\n    function changeActId(_x3, _x4) {\n      return _changeActId.apply(this, arguments);\n    }\n\n    return changeActId;\n  }()\n});\nvar ButtonBaseBox = styled(ButtonBase).withConfig({\n  displayName: \"CategorySelection__ButtonBaseBox\",\n  componentId: \"iuqsl-0\"\n})([\"&&&{width:100%;height:60px;display:flex;border-radius:8px;overflow:hidden;margin-bottom:10px;background:\", \";> img{height:100%;width:70%;}> span{flex:1;color:#fff;display:flex;align-items:center;justify-content:center;}}\"], grey[700]);\nexport var CategorySelection = function CategorySelection() {\n  var _homeCategorySelectio;\n\n  var router = useRouter();\n\n  var _useStoreModel = useStoreModel(homeCategorySelectionModel),\n      homeCategorySelectionState = _useStoreModel.state,\n      homeCategorySelectionActions = _useStoreModel.actions,\n      hsGetLoad = _useStoreModel.getLoad;\n\n  var _useStoreModel2 = useStoreModel(HomeTabsModel),\n      homeTabsState = _useStoreModel2.state;\n\n  useEffect(function () {\n    homeCategorySelectionActions.getList();\n  }, []);\n  return __jsx(\"div\", null, !!hsGetLoad(categoryList) && __jsx(Loading, null), homeCategorySelectionState === null || homeCategorySelectionState === void 0 ? void 0 : (_homeCategorySelectio = homeCategorySelectionState.listData) === null || _homeCategorySelectio === void 0 ? void 0 : _homeCategorySelectio.map(function (value) {\n    return __jsx(ButtonBaseBox, {\n      onClick: function onClick() {\n        router.push(\"/m/category/[id]\".concat(dealUrlQuery({\n          homeType: homeTabsState.homeType\n        })), \"/m/category/\".concat(value.id).concat(dealUrlQuery({\n          homeType: homeTabsState.homeType\n        })));\n      },\n      key: \"homeCategorySelectionState_\".concat(value.id)\n    }, __jsx(\"img\", {\n      src: dealImgUrl(value.imgUrl),\n      alt: \"\"\n    }), __jsx(\"span\", null, value.name, __jsx(KeyboardArrowRight, null)));\n  }));\n};\nexport default CategorySelection;","map":null,"metadata":{},"sourceType":"module"}