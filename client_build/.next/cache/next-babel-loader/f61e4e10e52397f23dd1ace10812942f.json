{"ast":null,"code":"import _JSXStyle from \"styled-jsx/style\";\nvar __jsx = React.createElement;\nimport React, { useEffect } from 'react';\nimport Head from 'next/head';\nimport { HeaderTitle } from '../../../components/HeaderTitle/HeaderTitle';\nimport { useRouter } from 'next/router';\nimport { showMessage } from '../../../components/Message/Message';\nimport { useStoreModel } from '../../../ModelAction/useStore';\nimport { orderDetailModel } from '../me/orderDetail/orderDetail';\nimport { dealMoney } from '../../../tools/utils';\nimport { OrderState } from '../../../ss_common/enum';\nvar applicationId = true ? 'sq0idp-IAEwX77Hdunl5dWByHQjIQ' : 'sandbox-sq0idb-42FQ7wGBwzibToRM9_zdFw'; // const applicationId = 'sq0idp-IAEwX77Hdunl5dWByHQjIQ'\n\nexport var Pay = function Pay() {\n  var _ref, _router$query;\n\n  var router = useRouter();\n  var orderId = (_ref = (_router$query = router.query) === null || _router$query === void 0 ? void 0 : _router$query.orderId) !== null && _ref !== void 0 ? _ref : '';\n\n  var _useStoreModel = useStoreModel(orderDetailModel),\n      stateOD = _useStoreModel.state,\n      actionsOD = _useStoreModel.actions;\n\n  var orderInfo = stateOD.orderInfo || {};\n  useEffect(function () {\n    if (orderId) {\n      actionsOD.getDetail(\"\".concat(orderId));\n    }\n  }, [orderId]);\n  useEffect(function () {\n    // @ts-ignore\n    if (window.SqPaymentForm && orderInfo.actuallyPaid) {\n      var _document$querySelect;\n\n      // @ts-ignore\n      var paymentForm = new SqPaymentForm({\n        // Initialize the payment form elements\n        applicationId: applicationId,\n        inputClass: 'sq-input',\n        autoBuild: false,\n        // Customize the CSS for SqPaymentForm iframe elements\n        inputStyles: [{\n          fontSize: '16px',\n          lineHeight: '24px',\n          padding: '16px',\n          placeholderColor: '#a0a0a0',\n          backgroundColor: 'transparent'\n        }],\n        // Initialize the credit card placeholders\n        cardNumber: {\n          elementId: 'sq-card-number',\n          placeholder: 'Card Number'\n        },\n        cvv: {\n          elementId: 'sq-cvv',\n          placeholder: 'CVV'\n        },\n        expirationDate: {\n          elementId: 'sq-expiration-date',\n          placeholder: 'MM/YY'\n        },\n        postalCode: {\n          elementId: 'sq-postal-code',\n          placeholder: 'Postal'\n        },\n        // SqPaymentForm callback functions\n        callbacks: {\n          /*\r\n          * callback function: cardNonceResponseReceived\r\n          * Triggered when: SqPaymentForm completes a card nonce request\r\n          */\n          cardNonceResponseReceived: function cardNonceResponseReceived(errors, nonce, cardData) {\n            var _orderInfo$actuallyPa;\n\n            if (errors) {\n              // Log errors from nonce generation to the browser developer console.\n              console.error('Encountered errors:');\n              errors.forEach(function (error) {\n                console.error('  ' + error.message);\n              });\n              showMessage('Encountered errors, check browser developer console for more details');\n              return;\n            } // alert(`The generated nonce is:\\n${nonce}`)\n\n\n            fetch(\"/pay/process-payment\", {\n              method: 'POST',\n              headers: {\n                'Accept': 'application/json',\n                'Content-Type': 'application/json'\n              },\n              body: JSON.stringify({\n                nonce: nonce,\n                amount: ~~(((_orderInfo$actuallyPa = orderInfo.actuallyPaid) !== null && _orderInfo$actuallyPa !== void 0 ? _orderInfo$actuallyPa : 0) * 100)\n              })\n            })[\"catch\"](function (err) {\n              showMessage('Network error: ' + err);\n            }).then(function (response) {\n              if (!response.ok) {\n                return response.json().then(function (errorInfo) {\n                  return Promise.reject(errorInfo);\n                }); //UPDATE HERE\n              }\n\n              return response.json(); //UPDATE HERE\n            }).then(function (data) {\n              // console.log(data) //UPDATE HERE\n              // showMessage('Payment complete successfully!\\nCheck browser developer console for more details')\n              return actionsOD.updateOrder({\n                id: orderId,\n                state: OrderState.Paid\n              });\n            }).then(function () {\n              showMessage('支付成功');\n              router.replace('/m/cart/result');\n            })[\"catch\"](function (err) {\n              console.error(err);\n              showMessage('Payment failed to complete!\\nCheck browser developer console for more details');\n            });\n          }\n        }\n      });\n      paymentForm.build();\n\n      var onGetCardNonce = function onGetCardNonce(event) {\n        // Don't submit the form until SqPaymentForm returns with a nonce\n        event.preventDefault(); // Request a nonce from the SqPaymentForm object\n\n        paymentForm.requestCardNonce();\n      };\n\n      (_document$querySelect = document.querySelector('#sq-creditcard')) === null || _document$querySelect === void 0 ? void 0 : _document$querySelect.addEventListener('click', onGetCardNonce);\n    }\n  }, [orderInfo.actuallyPaid]);\n  return __jsx(\"div\", {\n    className: \"jsx-2628901187\"\n  }, __jsx(Head, null, __jsx(\"title\", {\n    className: \"jsx-2628901187\"\n  }, \"pay\"), __jsx(\"script\", {\n    type: \"text/javascript\",\n    src: true ? 'https://js.squareup.com/v2/paymentform' : 'https://js.squareupsandbox.com/v2/paymentform',\n    className: \"jsx-2628901187\"\n  })), __jsx(HeaderTitle, {\n    title: '支付',\n    backCall: function backCall() {\n      router.replace('/m/home');\n      return true;\n    }\n  }), __jsx(\"div\", {\n    id: \"form-container\",\n    className: \"jsx-2628901187\"\n  }, !orderInfo.actuallyPaid && '未找到订单信息', __jsx(\"div\", {\n    id: \"sq-card-number\",\n    className: \"jsx-2628901187\"\n  }), __jsx(\"div\", {\n    id: \"sq-expiration-date\",\n    className: \"jsx-2628901187\" + \" \" + \"third\"\n  }), __jsx(\"div\", {\n    id: \"sq-cvv\",\n    className: \"jsx-2628901187\" + \" \" + \"third\"\n  }), __jsx(\"div\", {\n    id: \"sq-postal-code\",\n    className: \"jsx-2628901187\" + \" \" + \"third\"\n  }), __jsx(\"button\", {\n    id: \"sq-creditcard\",\n    className: \"jsx-2628901187\" + \" \" + \"button-credit-card\"\n  }, \"Pay \", dealMoney(orderInfo.actuallyPaid))), __jsx(_JSXStyle, {\n    id: \"2628901187\"\n  }, [\"*{-webkit-font-smoothing:antialiased;-moz-osx-font-smoothing:grayscale;}\", \"body,html{background-color:#F7F8F9;color:#373F4A;font-family:\\\"Helvetica Neue\\\",Helvetica,Arial,sans-serif;font-weight:normal;height:100%;}\", \"button{border:0;font-weight:500;}\", \"fieldset{margin:0;padding:0;border:0;}\", \"#form-container{padding:6.25vw;}\", \".third{float:left;width:calc((100% - 10vw) / 3);padding:0;margin:0 5vw 5vw 0;}\", \".third:last-of-type{margin-right:0;}\", \".sq-input{height:56PX;box-sizing:border-box;border:1px solid #E0E2E3;background-color:white;border-radius:1.875vw;display:inline-block;-webkit-transition:border-color .2s ease-in-out;transition:border-color .2s ease-in-out;}\", \".sq-input--focus{border:1px solid #4A90E2;}\", \".sq-input--error{border:1px solid #E02F2F;}\", \"#sq-card-number{margin-bottom:5vw;}\", \".button-credit-card{width:100%;height:17.5vw;margin-top:3.125vw;background:#4A90E2;border-radius:1.875vw;cursor:pointer;display:block;color:#FFFFFF;font-size:5vw;line-height:7.5vw;font-weight:700;-webkit-letter-spacing:0;-moz-letter-spacing:0;-ms-letter-spacing:0;letter-spacing:0;text-align:center;-webkit-transition:background .2s ease-in-out;transition:background .2s ease-in-out;}\", \".button-credit-card:hover{background-color:#4281CB;}\"]));\n};","map":null,"metadata":{},"sourceType":"module"}