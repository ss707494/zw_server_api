{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport Router from 'next/router';\nimport { fpSetPre } from '../../tools/utils';\nimport { setToken } from '../../tools/token';\nimport { showMessage } from '../../components/Message/Message';\nimport { doc } from '../../graphqlTypes/doc';\nimport { modelFactory } from '../../ModelAction/modelUtil';\nimport { ls } from '../../tools/dealKey';\nexport var loginModel = modelFactory('loginModel', {\n  form: {\n    name: '',\n    password: ''\n  }\n}, {\n  setForm: function setForm(_ref, option) {\n    var _ref2 = _slicedToArray(_ref, 2),\n        path = _ref2[0],\n        value = _ref2[1];\n\n    option.setData(fpSetPre(\"form.\".concat(path), value));\n  },\n  login: function login(value, option) {\n    var _res$login;\n\n    var form, res, _res$login2, _res$login3;\n\n    return _regeneratorRuntime.async(function login$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            form = option.data.form;\n\n            if (!(!(form === null || form === void 0 ? void 0 : form.name) || !(form === null || form === void 0 ? void 0 : form.password))) {\n              _context.next = 3;\n              break;\n            }\n\n            return _context.abrupt(\"return\", showMessage(ls('请填写表单')));\n\n          case 3:\n            _context.next = 5;\n            return _regeneratorRuntime.awrap(option.query(doc.login, {\n              data: _objectSpread({}, form)\n            }));\n\n          case 5:\n            res = _context.sent;\n\n            if (!(res === null || res === void 0 ? void 0 : (_res$login = res.login) === null || _res$login === void 0 ? void 0 : _res$login.token)) {\n              _context.next = 11;\n              break;\n            }\n\n            setToken(res === null || res === void 0 ? void 0 : (_res$login2 = res.login) === null || _res$login2 === void 0 ? void 0 : _res$login2.token);\n            setToken(res === null || res === void 0 ? void 0 : (_res$login3 = res.login) === null || _res$login3 === void 0 ? void 0 : _res$login3.refreshtoken, 'refreshtoken');\n            _context.next = 11;\n            return _regeneratorRuntime.awrap(Router.push('/home'));\n\n          case 11:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  },\n  goToSignin: function goToSignin(value, option) {\n    return _regeneratorRuntime.async(function goToSignin$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            _context2.next = 2;\n            return _regeneratorRuntime.awrap(Router.push('/register'));\n\n          case 2:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  },\n  goHome: function goHome(value, option) {\n    return _regeneratorRuntime.async(function goHome$(_context3) {\n      while (1) {\n        switch (_context3.prev = _context3.next) {\n          case 0:\n            _context3.next = 2;\n            return _regeneratorRuntime.awrap(Router.push('/home/[appModule]', '/home/categorySelection'));\n\n          case 2:\n          case \"end\":\n            return _context3.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  }\n});","map":{"version":3,"sources":["D:/code/zw/zw_client_web/utils/view/login/model.ts"],"names":["Router","fpSetPre","setToken","showMessage","doc","modelFactory","ls","loginModel","form","name","password","setForm","option","path","value","setData","login","data","query","res","token","refreshtoken","push","goToSignin","goHome"],"mappings":";;;;;;;;AAAA,OAAOA,MAAP,MAAmB,aAAnB;AACA,SAAQC,QAAR,QAAuB,mBAAvB;AACA,SAAQC,QAAR,QAAuB,mBAAvB;AACA,SAAQC,WAAR,QAA0B,kCAA1B;AACA,SAAQC,GAAR,QAAkB,wBAAlB;AAEA,SAAQC,YAAR,QAA2B,6BAA3B;AACA,SAASC,EAAT,QAAmB,qBAAnB;AAEA,OAAO,IAAMC,UAAU,GAAGF,YAAY,CAAC,YAAD,EAAe;AACnDG,EAAAA,IAAI,EAAE;AACJC,IAAAA,IAAI,EAAE,EADF;AAEJC,IAAAA,QAAQ,EAAE;AAFN;AAD6C,CAAf,EAKnC;AACDC,EAAAA,OAAO,EAAE,uBAAgBC,MAAhB,EAA2B;AAAA;AAAA,QAAzBC,IAAyB;AAAA,QAAnBC,KAAmB;;AAClCF,IAAAA,MAAM,CAACG,OAAP,CAAed,QAAQ,gBAASY,IAAT,GAAiBC,KAAjB,CAAvB;AACD,GAHA;AAIDE,EAAAA,KAAK,EAAE,eAAOF,KAAP,EAAcF,MAAd;AAAA;;AAAA;;AAAA;AAAA;AAAA;AAAA;AACCJ,YAAAA,IADD,GACQI,MAAM,CAACK,IAAP,CAAYT,IADpB;;AAAA,kBAED,EAACA,IAAD,aAACA,IAAD,uBAACA,IAAI,CAAEC,IAAP,KAAe,EAACD,IAAD,aAACA,IAAD,uBAACA,IAAI,CAAEE,QAAP,CAFd;AAAA;AAAA;AAAA;;AAAA,6CAGIP,WAAW,CAACG,EAAE,CAAC,OAAD,CAAH,CAHf;;AAAA;AAAA;AAAA,6CAKaM,MAAM,CAACM,KAAP,CAAad,GAAG,CAACY,KAAjB,EAAwB;AACxCC,cAAAA,IAAI,oBAAMT,IAAN;AADoC,aAAxB,CALb;;AAAA;AAKCW,YAAAA,GALD;;AAAA,kBAQDA,GARC,aAQDA,GARC,qCAQDA,GAAG,CAAEH,KARJ,+CAQD,WAAYI,KARX;AAAA;AAAA;AAAA;;AASHlB,YAAAA,QAAQ,CAACiB,GAAD,aAACA,GAAD,sCAACA,GAAG,CAAEH,KAAN,gDAAC,YAAYI,KAAb,CAAR;AACAlB,YAAAA,QAAQ,CAACiB,GAAD,aAACA,GAAD,sCAACA,GAAG,CAAEH,KAAN,gDAAC,YAAYK,YAAb,EAA2B,cAA3B,CAAR;AAVG;AAAA,6CAWGrB,MAAM,CAACsB,IAAP,CAAY,OAAZ,CAXH;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAJN;AAkBDC,EAAAA,UAAU,EAAE,oBAAOT,KAAP,EAAcF,MAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6CACJZ,MAAM,CAACsB,IAAP,CAAY,WAAZ,CADI;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAlBX;AAqBDE,EAAAA,MAAM,EAAE,gBAAOV,KAAP,EAAcF,MAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6CACAZ,MAAM,CAACsB,IAAP,CAAY,mBAAZ,EAAiC,yBAAjC,CADA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AArBP,CALmC,CAA/B","sourcesContent":["import Router from 'next/router'\r\nimport {fpSetPre} from '../../tools/utils'\r\nimport {setToken} from '../../tools/token'\r\nimport {showMessage} from '../../components/Message/Message'\r\nimport {doc} from '../../graphqlTypes/doc'\r\nimport {UserItemInput} from '../../graphqlTypes/types'\r\nimport {modelFactory} from '../../ModelAction/modelUtil'\r\nimport { ls } from '../../tools/dealKey'\r\n\r\nexport const loginModel = modelFactory('loginModel', {\r\n  form: {\r\n    name: '',\r\n    password: '',\r\n  } as UserItemInput,\r\n}, {\r\n  setForm: ([path, value], option) => {\r\n    option.setData(fpSetPre(`form.${path}`, value))\r\n  },\r\n  login: async (value, option) => {\r\n    const form = option.data.form\r\n    if (!form?.name || !form?.password) {\r\n      return showMessage(ls('请填写表单'))\r\n    }\r\n    const res = await option.query(doc.login, {\r\n      data: {...form}\r\n    })\r\n    if (res?.login?.token) {\r\n      setToken(res?.login?.token)\r\n      setToken(res?.login?.refreshtoken, 'refreshtoken')\r\n      await Router.push('/home')\r\n    }\r\n  },\r\n  goToSignin: async (value, option) => {\r\n    await Router.push('/register')\r\n  },\r\n  goHome: async (value, option) => {\r\n    await Router.push('/home/[appModule]', '/home/categorySelection')\r\n  },\r\n})\r\n"]},"metadata":{},"sourceType":"module"}