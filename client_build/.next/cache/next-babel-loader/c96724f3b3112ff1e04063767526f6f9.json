{"ast":null,"code":"var _jsxFileName = \"D:\\\\code\\\\zw\\\\zw_client_web\\\\utils\\\\view\\\\category\\\\[id].tsx\";\nvar __jsx = React.createElement;\nimport React, { useEffect } from 'react';\nimport Router, { useRouter } from 'next/router';\nimport { useStoreModel } from '../../ModelAction/useStore';\nimport { KeyboardArrowRight } from '@material-ui/icons';\nimport { ButtonBase, LinearProgress } from '@material-ui/core';\nimport { fpMergePre } from '../../tools/utils';\nimport { HeaderTitle } from '../../components/HeaderTitle/HeaderTitle';\nimport { doc } from '../../graphqlTypes/doc';\nimport { BScroller } from '../../components/BScroll/BScroller';\nimport { modelFactory } from '../../ModelAction/modelUtil';\nimport styled from 'styled-components';\nimport { grey } from '@material-ui/core/colors';\nimport { dealImgUrl } from '../../tools/img';\nimport { ProductItem } from '../../components/ProductItem/ProductItem';\nimport { ls } from '../../tools/dealKey';\nimport { NoData } from '../../components/NoData/NoData';\nexport const CategoryPageModel = modelFactory('CategoryPage', {\n  productList: [],\n  categoryList: []\n}, {\n  getProductList: async (value, option) => {\n    var _res$productsInCatego, _res$categoryList$lis, _res$categoryList;\n\n    const res = await option.query(doc.productsInCategory, {\n      data: value\n    });\n    option.setData(fpMergePre({\n      productList: (_res$productsInCatego = res === null || res === void 0 ? void 0 : res.productsInCategory) !== null && _res$productsInCatego !== void 0 ? _res$productsInCatego : [],\n      categoryList: [...((_res$categoryList$lis = res === null || res === void 0 ? void 0 : (_res$categoryList = res.categoryList) === null || _res$categoryList === void 0 ? void 0 : _res$categoryList.list) !== null && _res$categoryList$lis !== void 0 ? _res$categoryList$lis : [])]\n    }));\n  }\n});\nconst Box = styled('div').withConfig({\n  displayName: \"id__Box\",\n  componentId: \"sc-13c54cm-0\"\n})([\"padding:0 20px;> header{font-size:18px;font-weight:bold;margin:10px 0;}\"]);\nconst CategoryItemStyle = styled(ButtonBase).withConfig({\n  displayName: \"id__CategoryItemStyle\",\n  componentId: \"sc-13c54cm-1\"\n})([\"&&&{width:100%;height:60px;display:flex;border-radius:8px;overflow:hidden;margin-bottom:10px;background:\", \";> img{height:100%;width:70%;}> span{flex:1;color:#fff;display:flex;align-items:center;justify-content:center;}}\"], grey[700]);\nexport const CategoryItem = v => __jsx(CategoryItemStyle, {\n  key: `CategoryItem_${v.id}`,\n  onClick: () => {\n    Router.push('/category/[id]', `/category/${v.id}`);\n  },\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 67,\n    columnNumber: 46\n  }\n}, __jsx(\"img\", {\n  src: dealImgUrl(v.imgUrl),\n  alt: \"\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 73,\n    columnNumber: 3\n  }\n}), __jsx(\"span\", {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 77,\n    columnNumber: 3\n  }\n}, v.name, __jsx(KeyboardArrowRight, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 77,\n    columnNumber: 17\n  }\n})));\nconst ListBox = styled.div.withConfig({\n  displayName: \"id__ListBox\",\n  componentId: \"sc-13c54cm-2\"\n})([\"display:grid;grid-template-columns:repeat(2,1fr);grid-gap:15px;\"]);\nexport const CategoryPage = () => {\n  var _ref, _router$query;\n\n  const router = useRouter();\n  const id = (_ref = (_router$query = router.query) === null || _router$query === void 0 ? void 0 : _router$query.id) !== null && _ref !== void 0 ? _ref : '';\n  const {\n    state: stateCPM,\n    actions: actionsCPM,\n    getLoad\n  } = useStoreModel(CategoryPageModel);\n  useEffect(() => {\n    if (id) {\n      actionsCPM.getProductList({\n        id\n      });\n    }\n  }, [id]);\n  return __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 10\n    }\n  }, __jsx(HeaderTitle, {\n    title: '',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 5\n    }\n  }), !!getLoad(doc.productsInCategory) && __jsx(LinearProgress, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 43\n    }\n  }), __jsx(BScroller, {\n    boxHeight: 'calc(100vh - 60px)',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 5\n    }\n  }, __jsx(Box, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 7\n    }\n  }, stateCPM.categoryList.length === 0 && stateCPM.productList.length === 0 && __jsx(NoData, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 88\n    }\n  }) || __jsx(React.Fragment, null, stateCPM.categoryList.map(value => CategoryItem(value)), __jsx(\"header\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 11\n    }\n  }, ls('热门推荐')), __jsx(ListBox, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 11\n    }\n  }, stateCPM.productList.length === 0 && __jsx(NoData, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 53\n    }\n  }), stateCPM.productList.map(value => __jsx(ProductItem, {\n    key: `ProductItem_${value.id}`,\n    product: value,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 46\n    }\n  })))))));\n};","map":{"version":3,"sources":["D:/code/zw/zw_client_web/utils/view/category/[id].tsx"],"names":["React","useEffect","Router","useRouter","useStoreModel","KeyboardArrowRight","ButtonBase","LinearProgress","fpMergePre","HeaderTitle","doc","BScroller","modelFactory","styled","grey","dealImgUrl","ProductItem","ls","NoData","CategoryPageModel","productList","categoryList","getProductList","value","option","res","query","productsInCategory","data","setData","list","Box","CategoryItemStyle","CategoryItem","v","id","push","imgUrl","name","ListBox","div","CategoryPage","router","state","stateCPM","actions","actionsCPM","getLoad","length","map"],"mappings":";;AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,OAAOC,MAAP,IAAgBC,SAAhB,QAAgC,aAAhC;AACA,SAAQC,aAAR,QAA4B,4BAA5B;AAEA,SAAQC,kBAAR,QAAiC,oBAAjC;AACA,SAAQC,UAAR,EAAoBC,cAApB,QAAyC,mBAAzC;AACA,SAAQC,UAAR,QAAyB,mBAAzB;AACA,SAAQC,WAAR,QAA0B,0CAA1B;AACA,SAAQC,GAAR,QAAkB,wBAAlB;AACA,SAAQC,SAAR,QAAwB,oCAAxB;AACA,SAAQC,YAAR,QAA2B,6BAA3B;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,SAAQC,IAAR,QAAmB,0BAAnB;AACA,SAAQC,UAAR,QAAyB,iBAAzB;AACA,SAAQC,WAAR,QAA0B,0CAA1B;AACA,SAAQC,EAAR,QAAiB,qBAAjB;AACA,SAAQC,MAAR,QAAqB,gCAArB;AAEA,OAAO,MAAMC,iBAAiB,GAAGP,YAAY,CAAC,cAAD,EAAiB;AAC5DQ,EAAAA,WAAW,EAAE,EAD+C;AAE5DC,EAAAA,YAAY,EAAE;AAF8C,CAAjB,EAG1C;AACDC,EAAAA,cAAc,EAAE,OAAOC,KAAP,EAAiCC,MAAjC,KAA4C;AAAA;;AAC1D,UAAMC,GAAG,GAAG,MAAMD,MAAM,CAACE,KAAP,CAAahB,GAAG,CAACiB,kBAAjB,EAAqC;AAACC,MAAAA,IAAI,EAAEL;AAAP,KAArC,CAAlB;AACAC,IAAAA,MAAM,CAACK,OAAP,CAAerB,UAAU,CAAC;AACxBY,MAAAA,WAAW,2BAAEK,GAAF,aAAEA,GAAF,uBAAEA,GAAG,CAAEE,kBAAP,yEAA6B,EADhB;AAExBN,MAAAA,YAAY,EAAE,CACZ,6BAAGI,GAAH,aAAGA,GAAH,4CAAGA,GAAG,CAAEJ,YAAR,sDAAG,kBAAmBS,IAAtB,yEAA8B,EAA9B,CADY;AAFU,KAAD,CAAzB;AAMD;AATA,CAH0C,CAAtC;AAgBP,MAAMC,GAAG,GAAGlB,MAAM,CAAC,KAAD,CAAT;AAAA;AAAA;AAAA,+EAAT;AASA,MAAMmB,iBAAiB,GAAGnB,MAAM,CAACP,UAAD,CAAT;AAAA;AAAA;AAAA,qOAQLQ,IAAI,CAAC,GAAD,CARC,CAAvB;AAuBA,OAAO,MAAMmB,YAAY,GAAIC,CAAD,IAAiB,MAAC,iBAAD;AACzC,EAAA,GAAG,EAAG,gBAAeA,CAAC,CAACC,EAAG,EADe;AAEzC,EAAA,OAAO,EAAE,MAAM;AACbjC,IAAAA,MAAM,CAACkC,IAAP,CAAY,gBAAZ,EAA+B,aAAYF,CAAC,CAACC,EAAG,EAAhD;AACD,GAJwC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAM3C;AACI,EAAA,GAAG,EAAEpB,UAAU,CAACmB,CAAC,CAACG,MAAH,CADnB;AAEI,EAAA,GAAG,EAAC,EAFR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAN2C,EAU3C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAOH,CAAC,CAACI,IAAT,EAAc,MAAC,kBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAAd,CAV2C,CAAtC;AAaP,MAAMC,OAAO,GAAG1B,MAAM,CAAC2B,GAAV;AAAA;AAAA;AAAA,uEAAb;AAOA,OAAO,MAAMC,YAAY,GAAG,MAAM;AAAA;;AAChC,QAAMC,MAAM,GAAGvC,SAAS,EAAxB;AACA,QAAMgC,EAAE,4BAAIO,MAAM,CAAChB,KAAX,kDAAI,cAAcS,EAAlB,uCAAmC,EAA3C;AACA,QAAM;AAACQ,IAAAA,KAAK,EAAEC,QAAR;AAAkBC,IAAAA,OAAO,EAAEC,UAA3B;AAAuCC,IAAAA;AAAvC,MAAkD3C,aAAa,CAACe,iBAAD,CAArE;AAEAlB,EAAAA,SAAS,CAAC,MAAM;AACd,QAAIkC,EAAJ,EAAQ;AACNW,MAAAA,UAAU,CAACxB,cAAX,CAA0B;AAACa,QAAAA;AAAD,OAA1B;AACD;AACF,GAJQ,EAIN,CAACA,EAAD,CAJM,CAAT;AAMA,SAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACL,MAAC,WAAD;AACI,IAAA,KAAK,EAAE,EADX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADK,EAIJ,CAAC,CAACY,OAAO,CAACrC,GAAG,CAACiB,kBAAL,CAAT,IAAqC,MAAC,cAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAJjC,EAKL,MAAC,SAAD;AAAW,IAAA,SAAS,EAAE,oBAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKiB,QAAQ,CAACvB,YAAT,CAAsB2B,MAAtB,KAAiC,CAAjC,IAAsCJ,QAAQ,CAACxB,WAAT,CAAqB4B,MAArB,KAAgC,CAAvE,IAA6E,MAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAA9E,IAEC,4BACCJ,QAAQ,CAACvB,YAAT,CAAsB4B,GAAtB,CAA0B1B,KAAK,IAAIU,YAAY,CAACV,KAAD,CAA/C,CADD,EAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAASN,EAAE,CAAC,MAAD,CAAX,CAFA,EAGA,MAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI2B,QAAQ,CAACxB,WAAT,CAAqB4B,MAArB,KAAgC,CAAjC,IAAuC,MAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAD1C,EAECJ,QAAQ,CAACxB,WAAT,CAAqB6B,GAArB,CAAyB1B,KAAK,IAAI,MAAC,WAAD;AAC/B,IAAA,GAAG,EAAG,eAAcA,KAAK,CAACY,EAAG,EADE;AAE/B,IAAA,OAAO,EAAEZ,KAFsB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAlC,CAFD,CAHA,CAHJ,CADF,CALK,CAAP;AAyBD,CApCM","sourcesContent":["import React, {useEffect} from 'react'\r\nimport Router, {useRouter} from 'next/router'\r\nimport {useStoreModel} from '../../ModelAction/useStore'\r\nimport {Category, CategoryItemInput, Product} from '../../graphqlTypes/types'\r\nimport {KeyboardArrowRight} from '@material-ui/icons'\r\nimport {ButtonBase, LinearProgress} from '@material-ui/core'\r\nimport {fpMergePre} from '../../tools/utils'\r\nimport {HeaderTitle} from '../../components/HeaderTitle/HeaderTitle'\r\nimport {doc} from '../../graphqlTypes/doc'\r\nimport {BScroller} from '../../components/BScroll/BScroller'\r\nimport {modelFactory} from '../../ModelAction/modelUtil'\r\nimport styled from 'styled-components'\r\nimport {grey} from '@material-ui/core/colors'\r\nimport {dealImgUrl} from '../../tools/img'\r\nimport {ProductItem} from '../../components/ProductItem/ProductItem'\r\nimport {ls} from '../../tools/dealKey'\r\nimport {NoData} from '../../components/NoData/NoData'\r\n\r\nexport const CategoryPageModel = modelFactory('CategoryPage', {\r\n  productList: [] as Product[],\r\n  categoryList: [] as Category[],\r\n}, {\r\n  getProductList: async (value: CategoryItemInput, option) => {\r\n    const res = await option.query(doc.productsInCategory, {data: value})\r\n    option.setData(fpMergePre({\r\n      productList: res?.productsInCategory ?? [],\r\n      categoryList: [\r\n        ...res?.categoryList?.list ?? [],\r\n      ],\r\n    }))\r\n  },\r\n\r\n})\r\n\r\nconst Box = styled('div')`\r\n  padding: 0 20px;\r\n  > header {\r\n    font-size: 18px;\r\n    font-weight: bold;\r\n    margin: 10px 0;\r\n  }\r\n`\r\n\r\nconst CategoryItemStyle = styled(ButtonBase)`\r\n  &&& {\r\n    width: 100%;\r\n    height: 60px;\r\n    display: flex;\r\n    border-radius: 8px;\r\n    overflow: hidden;\r\n    margin-bottom: 10px;\r\n    background: ${grey[700]};\r\n    > img {\r\n      height: 100%;\r\n      width: 70%;\r\n    }\r\n    > span {\r\n      flex: 1;\r\n      color: #fff;\r\n      display: flex;\r\n      align-items: center;\r\n      justify-content: center;\r\n    }\r\n  }\r\n`\r\n\r\nexport const CategoryItem = (v: Category) => <CategoryItemStyle\r\n    key={`CategoryItem_${v.id}`}\r\n    onClick={() => {\r\n      Router.push('/category/[id]', `/category/${v.id}`)\r\n    }}\r\n>\r\n  <img\r\n      src={dealImgUrl(v.imgUrl)}\r\n      alt=''\r\n  />\r\n  <span>{v.name}<KeyboardArrowRight/></span>\r\n</CategoryItemStyle>\r\n\r\nconst ListBox = styled.div`\r\n  display: grid;\r\n  grid-template-columns: repeat(2, 1fr);\r\n  grid-gap: 15px;\r\n  \r\n`\r\n\r\nexport const CategoryPage = () => {\r\n  const router = useRouter()\r\n  const id = (router.query?.id as string) ?? ''\r\n  const {state: stateCPM, actions: actionsCPM, getLoad} = useStoreModel(CategoryPageModel)\r\n\r\n  useEffect(() => {\r\n    if (id) {\r\n      actionsCPM.getProductList({id})\r\n    }\r\n  }, [id])\r\n\r\n  return <div>\r\n    <HeaderTitle\r\n        title={''}\r\n    />\r\n    {!!getLoad(doc.productsInCategory) && <LinearProgress/>}\r\n    <BScroller boxHeight={'calc(100vh - 60px)'}>\r\n      <Box>\r\n        {((stateCPM.categoryList.length === 0 && stateCPM.productList.length === 0) && <NoData/>) ||\r\n          (\r\n          <>\r\n          {stateCPM.categoryList.map(value => CategoryItem(value))}\r\n          <header>{ls('热门推荐')}</header>\r\n          <ListBox>\r\n            {(stateCPM.productList.length === 0) && <NoData/>}\r\n          {stateCPM.productList.map(value => <ProductItem\r\n              key={`ProductItem_${value.id}`}\r\n              product={value}/>)}\r\n          </ListBox>\r\n          </>\r\n          )\r\n        }\r\n\r\n      </Box>\r\n    </BScroller>\r\n  </div>\r\n}\r\n"]},"metadata":{},"sourceType":"module"}