{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nvar __jsx = React.createElement;\nimport React, { useEffect } from 'react';\nimport styled from 'styled-components';\nimport { homeCategorySelectionModel } from '../../../m/home/components/CategorySelection/CategorySelection';\nimport { useStoreModel } from '../../../../ModelAction/useStore';\nimport { ButtonBase, Grow } from '@material-ui/core';\nimport { Space } from '../../../../components/Box/Box';\nimport KeyboardArrowRightIcon from '@material-ui/icons/KeyboardArrowRight';\nimport { mpStyle } from '../../../../style/common';\nimport { categoryItemModel, CategoryPageModel } from '../../../m/category/[id]';\nimport { useRouter } from 'next/router';\nimport { modelFactory } from '../../../../ModelAction/modelUtil';\nimport { fpMergePre } from '../../../../tools/utils';\nimport { HomeTabsModel } from '../../../m/home/components/Tabs/Tabs';\nexport var CategorySelectionModel = modelFactory('CategorySelectionModel', {\n  isShow: false\n}, {\n  switchIsShow: function switchIsShow(value, option) {\n    return option.setData(fpMergePre({\n      isShow: value\n    }));\n  }\n});\nvar Box = styled.div.withConfig({\n  displayName: \"categorySelection__Box\",\n  componentId: \"zrawnm-0\"\n})([\"display:grid;grid-template-columns:repeat(3,1fr);z-index:4;\"]);\nvar Line = styled.div.withConfig({\n  displayName: \"categorySelection__Line\",\n  componentId: \"zrawnm-1\"\n})([\"display:grid;grid-auto-rows:40px;font-size:18px;\"]);\nvar LinkButton = styled(ButtonBase).withConfig({\n  displayName: \"categorySelection__LinkButton\",\n  componentId: \"zrawnm-2\"\n})([\"&&&{justify-content:start;> main{flex-grow:1;text-align:left;}\", \"}\"], function (prop) {\n  return prop.isact && \"\\n      background: #FEEBEA;\\n      color: \".concat(mpStyle.red, \";\\n    \");\n});\nvar Mask = styled.div.withConfig({\n  displayName: \"categorySelection__Mask\",\n  componentId: \"zrawnm-3\"\n})([\"position:fixed;top:0;left:0;right:0;bottom:0;\"]);\nexport var CategorySelection = function CategorySelection(_ref) {\n  var _stateHomeCategorySel, _stateCategoryPageMod, _stateCategoryPageMod2;\n\n  var className = _ref.className;\n  var router = useRouter();\n\n  var _useStoreModel = useStoreModel(homeCategorySelectionModel),\n      actionsHomeCategorySelectionModel = _useStoreModel.actions,\n      stateHomeCategorySelectionModel = _useStoreModel.state;\n\n  var _useStoreModel2 = useStoreModel(CategoryPageModel),\n      actionsCategoryPageModel = _useStoreModel2.actions,\n      stateCategoryPageModel = _useStoreModel2.state;\n\n  var _useStoreModel3 = useStoreModel(CategoryPageModel, 'CategoryPageModel3'),\n      actionsCategoryPageModel3 = _useStoreModel3.actions,\n      stateCategoryPageModel3 = _useStoreModel3.state;\n\n  var _useStoreModel4 = useStoreModel(categoryItemModel),\n      actionsCategoryItemModel = _useStoreModel4.actions;\n\n  var _useStoreModel5 = useStoreModel(CategorySelectionModel),\n      actionsCategorySelectionModel = _useStoreModel5.actions,\n      stateCategorySelectionModel = _useStoreModel5.state;\n\n  var _useStoreModel6 = useStoreModel(HomeTabsModel),\n      stateHomeTabs = _useStoreModel6.state;\n\n  useEffect(function () {\n    if (stateCategorySelectionModel.isShow) {\n      actionsHomeCategorySelectionModel.getList();\n    }\n  }, [actionsHomeCategorySelectionModel, stateCategorySelectionModel.isShow]);\n  return __jsx(React.Fragment, null, stateCategorySelectionModel.isShow && __jsx(Mask, {\n    onClick: function onClick() {\n      return actionsCategorySelectionModel.switchIsShow(false);\n    }\n  }), __jsx(Grow, {\n    \"in\": stateCategorySelectionModel.isShow\n  }, __jsx(Box, {\n    className: className\n  }, __jsx(Line, null, stateHomeCategorySelectionModel === null || stateHomeCategorySelectionModel === void 0 ? void 0 : (_stateHomeCategorySel = stateHomeCategorySelectionModel.listData) === null || _stateHomeCategorySel === void 0 ? void 0 : _stateHomeCategorySel.map(function (value) {\n    return __jsx(LinkButton, {\n      key: \"stateHomeCategorySelectionModel?.listData\".concat(value.id),\n      onClick: function onClick() {\n        actionsHomeCategorySelectionModel.changeActId(value.id);\n        actionsCategoryPageModel.getProductList({\n          categoryItemInput: {\n            id: value.id\n          },\n          productItemInput: {\n            isGroup: 0\n          }\n        });\n        actionsCategoryItemModel.getCategory({\n          id: value.id\n        });\n      },\n      isact: value.id === stateHomeCategorySelectionModel.actId ? 1 : 0\n    }, __jsx(Space, {\n      w: 16\n    }), __jsx(\"main\", null, value.name), __jsx(KeyboardArrowRightIcon, null), __jsx(Space, {\n      w: 8\n    }));\n  })), __jsx(Line, null, stateCategoryPageModel === null || stateCategoryPageModel === void 0 ? void 0 : (_stateCategoryPageMod = stateCategoryPageModel.categoryList) === null || _stateCategoryPageMod === void 0 ? void 0 : _stateCategoryPageMod.map(function (value) {\n    return __jsx(LinkButton, {\n      key: \"stateCategoryPageModel?.categoryList\".concat(value.id),\n      onClick: function onClick() {\n        actionsCategoryItemModel.getCategory({\n          id: value.id\n        });\n        actionsCategoryPageModel.changeActCatId(value.id);\n        actionsCategoryPageModel3.getProductList({\n          categoryItemInput: {\n            id: value.id\n          },\n          productItemInput: {\n            isGroup: 0\n          }\n        });\n      },\n      isact: stateCategoryPageModel.actCatId === value.id ? 1 : 0\n    }, __jsx(Space, {\n      w: 16\n    }), __jsx(\"main\", null, value.name), __jsx(Space, {\n      w: 8\n    }));\n  })), actionsCategoryItemModel.calcCatLevel() >= 2 && __jsx(Line, null, stateCategoryPageModel3 === null || stateCategoryPageModel3 === void 0 ? void 0 : (_stateCategoryPageMod2 = stateCategoryPageModel3.categoryList) === null || _stateCategoryPageMod2 === void 0 ? void 0 : _stateCategoryPageMod2.map(function (value) {\n    return __jsx(LinkButton, {\n      key: \"stateCategoryPageModel3?.categoryList\".concat(value.id),\n      onClick: /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.next = 2;\n                return router.push(\"/pc/category/[id]?homeType=\".concat(stateHomeTabs.homeType), \"/pc/category/\".concat(value.id, \"?homeType=\").concat(stateHomeTabs.homeType));\n\n              case 2:\n                actionsCategorySelectionModel.switchIsShow(false);\n\n              case 3:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      })),\n      isact: stateCategoryPageModel3.actCatId === value.id ? 1 : 0\n    }, __jsx(Space, {\n      w: 16\n    }), __jsx(\"main\", null, value.name), __jsx(Space, {\n      w: 8\n    }));\n  }))))) || __jsx(React.Fragment, null);\n};","map":null,"metadata":{},"sourceType":"module"}