{"ast":null,"code":"var _jsxFileName = \"D:\\\\code\\\\zw\\\\zw_client_web\\\\utils\\\\view\\\\m\\\\productList\\\\[id].tsx\";\nvar __jsx = React.createElement;\nimport React, { useEffect } from 'react';\nimport SortIcon from '@material-ui/icons/Sort';\nimport FilterListIcon from '@material-ui/icons/FilterList';\nimport { modelFactory } from '../../../ModelAction/modelUtil';\nimport { useRouter } from 'next/router';\nimport { fpMergePre } from '../../../tools/utils';\nimport { doc } from '../../../graphqlTypes/doc';\nimport { useStoreModel } from '../../../ModelAction/useStore';\nimport { HeaderTitle } from '../../../components/HeaderTitle/HeaderTitle';\nimport styled from 'styled-components';\nimport { Button } from '@material-ui/core';\nimport { ll } from '../../../tools/dealKey';\nimport { GroupProductItem, ProductItem } from '../../../components/ProductItem/ProductItem';\nimport { BScroller } from '../../../components/BScroll/BScroller';\nimport { SortDrawer } from './SortDrawer';\nimport { FilterDrawer } from './FilterDrawer';\nimport { HomeType } from '../home/appModule';\nimport { homeTabsModel } from '../home/components/Tabs/Tabs';\nimport { UpdateShopCart } from '../../../components/ProductItem/UpdateShopCart';\nexport const sortTypeEnum = {\n  nomalSort: 'nomalSort',\n  highestSales: 'highestSales',\n  new: 'new',\n  priceAsc: 'priceAsc',\n  priceDesc: 'priceDesc'\n};\nexport const dealSortSql = type => {\n  const _sql = {\n    nomalSort: [['id', 'asc'], ['createTime', 'asc']],\n    highestSales: [],\n    new: [['createTime', 'desc']],\n    priceAsc: [['priceOut', 'asc']],\n    priceDesc: [['priceOut', 'desc']]\n  };\n  return _sql[type] || [];\n};\nexport const sortTypeLabel = {\n  nomalSort: '综合排序',\n  highestSales: '销量最高',\n  new: '最新上架',\n  priceAsc: '价格由低到高',\n  priceDesc: '价格由高到低'\n};\nexport const productListModel = modelFactory('productListModel', {\n  category: {},\n  productList: [],\n  total: 0,\n  sortShow: false,\n  params: {\n    sortType: sortTypeEnum.nomalSort\n  },\n  filterShow: false,\n  onResolve: () => {}\n}, {\n  getCategory: async (value, option) => {\n    var _res$oneCategory;\n\n    const res = await option.query(doc.oneCategory, {\n      data: value\n    });\n    option.setData(fpMergePre({\n      category: (_res$oneCategory = res === null || res === void 0 ? void 0 : res.oneCategory) !== null && _res$oneCategory !== void 0 ? _res$oneCategory : {}\n    }));\n  },\n  getData: async (value, option) => {\n    var _res$productList$list, _res$productList, _res$productList$tota, _res$productList2;\n\n    const res = await option.query(doc.productList, {\n      productInput: value,\n      orderByInput: {\n        orderByObject: dealSortSql(option.data.params.sortType)\n      }\n    });\n    option.setData(fpMergePre({\n      productList: (_res$productList$list = res === null || res === void 0 ? void 0 : (_res$productList = res.productList) === null || _res$productList === void 0 ? void 0 : _res$productList.list) !== null && _res$productList$list !== void 0 ? _res$productList$list : [],\n      total: (_res$productList$tota = res === null || res === void 0 ? void 0 : (_res$productList2 = res.productList) === null || _res$productList2 === void 0 ? void 0 : _res$productList2.total) !== null && _res$productList$tota !== void 0 ? _res$productList$tota : 0\n    }));\n  },\n  openSort: (value, option) => {\n    return new Promise(resolve => {\n      option.setData(fpMergePre({\n        sortShow: true,\n        onResolve: resolve\n      }));\n    });\n  },\n  closeSort: (value, option) => {\n    option.setData(fpMergePre({\n      sortShow: false\n    }));\n    option.data.onResolve(value);\n  },\n  changeSort: async (value, option) => {\n    option.setData(fpMergePre({\n      params: {\n        sortType: value\n      }\n    }));\n  },\n  openFilter: (value, option) => {\n    return new Promise(resolve => {\n      option.setData(fpMergePre({\n        filterShow: true,\n        onResolve: resolve\n      }));\n    });\n  },\n  closeFilter: (value, option) => {\n    option.setData(fpMergePre({\n      filterShow: false\n    }));\n    option.data.onResolve(value);\n  }\n});\nconst HeaderTab = styled.div.withConfig({\n  displayName: \"id__HeaderTab\",\n  componentId: \"sc-13j64as-0\"\n})([\"display:flex;justify-content:space-evenly;\"]);\nconst ListBox = styled.div.withConfig({\n  displayName: \"id__ListBox\",\n  componentId: \"sc-13j64as-1\"\n})([\"padding:20px;display:grid;grid-template-columns:repeat(\", \",1fr);grid-gap:16px;\"], props => props.columns || 2);\nexport const ProductList = () => {\n  var _ref, _router$query, _statePLM$category;\n\n  const router = useRouter();\n  const id = (_ref = (_router$query = router.query) === null || _router$query === void 0 ? void 0 : _router$query.id) !== null && _ref !== void 0 ? _ref : '';\n  const {\n    actions: actionsPLM,\n    state: statePLM\n  } = useStoreModel(productListModel);\n  const {\n    state: stateHomeTabs,\n    actions: actionsHomeTabs\n  } = useStoreModel(homeTabsModel);\n  useEffect(() => {\n    var _ref2;\n\n    actionsHomeTabs.setHomeType((_ref2 = router.query.homeType) !== null && _ref2 !== void 0 ? _ref2 : HomeType.home);\n  }, [router.query.homeType]);\n  useEffect(() => {\n    if (!!id) {\n      actionsPLM.getCategory({\n        id\n      });\n      actionsPLM.getData({\n        isGroup: router.query.homeType === HomeType.group ? 1 : 0,\n        category: {\n          id\n        }\n      });\n    }\n  }, [id]);\n  return __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 148,\n      columnNumber: 10\n    }\n  }, __jsx(HeaderTitle, {\n    title: (_statePLM$category = statePLM.category) === null || _statePLM$category === void 0 ? void 0 : _statePLM$category.name,\n    showCart: router.query.homeType === HomeType.home,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 149,\n      columnNumber: 5\n    }\n  }), __jsx(HeaderTab, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 153,\n      columnNumber: 5\n    }\n  }, __jsx(Button, {\n    fullWidth: true,\n    onClick: async () => {\n      await actionsPLM.openSort();\n      actionsPLM.getData({\n        isGroup: router.query.homeType === HomeType.group ? 1 : 0,\n        category: {\n          id\n        }\n      });\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 154,\n      columnNumber: 7\n    }\n  }, ll('排序'), __jsx(SortIcon, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 166,\n      columnNumber: 9\n    }\n  })), __jsx(Button, {\n    fullWidth: true,\n    onClick: () => actionsPLM.openFilter(),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 168,\n      columnNumber: 7\n    }\n  }, ll('筛选'), __jsx(FilterListIcon, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 172,\n      columnNumber: 9\n    }\n  }))), __jsx(BScroller, {\n    boxHeight: 'calc(100vh - 100px)',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 175,\n      columnNumber: 5\n    }\n  }, __jsx(ListBox, {\n    columns: stateHomeTabs.homeType === HomeType.group ? 1 : 2,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 176,\n      columnNumber: 7\n    }\n  }, statePLM.productList.map(value => stateHomeTabs.homeType === HomeType.group && __jsx(GroupProductItem, {\n    product: value,\n    key: `ProductItem_${value.id}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 179,\n      columnNumber: 90\n    }\n  }) || __jsx(ProductItem, {\n    key: `ProductItem_${value.id}`,\n    product: value,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 182,\n      columnNumber: 16\n    }\n  })))), __jsx(SortDrawer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 187,\n      columnNumber: 5\n    }\n  }), __jsx(FilterDrawer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 188,\n      columnNumber: 5\n    }\n  }), __jsx(UpdateShopCart, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 189,\n      columnNumber: 5\n    }\n  }));\n};","map":{"version":3,"sources":["D:/code/zw/zw_client_web/utils/view/m/productList/[id].tsx"],"names":["React","useEffect","SortIcon","FilterListIcon","modelFactory","useRouter","fpMergePre","doc","useStoreModel","HeaderTitle","styled","Button","ll","GroupProductItem","ProductItem","BScroller","SortDrawer","FilterDrawer","HomeType","homeTabsModel","UpdateShopCart","sortTypeEnum","nomalSort","highestSales","new","priceAsc","priceDesc","dealSortSql","type","_sql","sortTypeLabel","productListModel","category","productList","total","sortShow","params","sortType","filterShow","onResolve","getCategory","value","option","res","query","oneCategory","data","setData","getData","productInput","orderByInput","orderByObject","list","openSort","Promise","resolve","closeSort","changeSort","openFilter","closeFilter","HeaderTab","div","ListBox","props","columns","ProductList","router","id","actions","actionsPLM","state","statePLM","stateHomeTabs","actionsHomeTabs","setHomeType","homeType","home","isGroup","group","name","map"],"mappings":"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","sourcesContent":["import React, {useEffect} from 'react'\r\nimport SortIcon from '@material-ui/icons/Sort'\r\nimport FilterListIcon from '@material-ui/icons/FilterList'\r\nimport {modelFactory} from '../../../ModelAction/modelUtil'\r\nimport {Category, CategoryItemInput, OrderByInput, Product, ProductItemInput} from '../../../graphqlTypes/types'\r\nimport {useRouter} from 'next/router'\r\nimport {fpMergePre} from '../../../tools/utils'\r\nimport {doc} from '../../../graphqlTypes/doc'\r\nimport {useStoreModel} from '../../../ModelAction/useStore'\r\nimport {HeaderTitle} from '../../../components/HeaderTitle/HeaderTitle'\r\nimport styled from 'styled-components'\r\nimport {Button} from '@material-ui/core'\r\nimport {ll} from '../../../tools/dealKey'\r\nimport {GroupProductItem, ProductItem} from '../../../components/ProductItem/ProductItem'\r\nimport {BScroller} from '../../../components/BScroll/BScroller'\r\nimport {SortDrawer} from './SortDrawer'\r\nimport {FilterDrawer} from './FilterDrawer'\r\nimport {ResolverFun} from '../../../commonModel/dialog'\r\nimport {HomeType} from '../home/appModule'\r\nimport {homeTabsModel} from '../home/components/Tabs/Tabs'\r\nimport {UpdateShopCart} from '../../../components/ProductItem/UpdateShopCart'\r\n\r\nexport const sortTypeEnum = {\r\n  nomalSort: 'nomalSort',\r\n  highestSales: 'highestSales',\r\n  new: 'new',\r\n  priceAsc: 'priceAsc',\r\n  priceDesc: 'priceDesc',\r\n}\r\nexport const dealSortSql = (type: string) => {\r\n  const _sql: any = {\r\n    nomalSort: [['id', 'asc'], ['createTime', 'asc']],\r\n    highestSales: [],\r\n    new: [['createTime', 'desc']],\r\n    priceAsc: [['priceOut', 'asc']],\r\n    priceDesc: [['priceOut', 'desc']],\r\n  }\r\n  return _sql[type] || []\r\n}\r\nexport const sortTypeLabel: {\r\n  [key in string]: string\r\n} = {\r\n  nomalSort: '综合排序',\r\n  highestSales: '销量最高',\r\n  new: '最新上架',\r\n  priceAsc: '价格由低到高',\r\n  priceDesc: '价格由高到低',\r\n}\r\nexport const productListModel = modelFactory('productListModel', {\r\n  category: {} as Category,\r\n  productList: [] as Product[],\r\n  total: 0,\r\n  sortShow: false,\r\n  params: {\r\n    sortType: sortTypeEnum.nomalSort,\r\n  },\r\n  filterShow: false,\r\n  onResolve: (() => {\r\n  }) as ResolverFun,\r\n}, {\r\n  getCategory: async (value: CategoryItemInput, option) => {\r\n    const res = await option.query(doc.oneCategory, {data: value})\r\n    option.setData(fpMergePre({\r\n      category: res?.oneCategory ?? {},\r\n    }))\r\n  },\r\n  getData: async (value: ProductItemInput, option) => {\r\n    const res = await option.query(doc.productList, {\r\n      productInput: value,\r\n      orderByInput: {\r\n        orderByObject: dealSortSql(option.data.params.sortType),\r\n      } as OrderByInput,\r\n    })\r\n    option.setData(fpMergePre({\r\n      productList: res?.productList?.list ?? [],\r\n      total: res?.productList?.total ?? 0\r\n    }))\r\n  },\r\n  openSort: (value, option) => {\r\n    return new Promise(resolve => {\r\n      option.setData(fpMergePre({\r\n        sortShow: true,\r\n        onResolve: resolve,\r\n      }))\r\n    })\r\n  },\r\n  closeSort: (value, option) => {\r\n    option.setData(fpMergePre({\r\n      sortShow: false,\r\n    }))\r\n    option.data.onResolve(value)\r\n  },\r\n  changeSort: async (value, option) => {\r\n    option.setData(fpMergePre({\r\n      params: {\r\n        sortType: value,\r\n      },\r\n    }))\r\n  },\r\n  openFilter: (value, option) => {\r\n    return new Promise(resolve => {\r\n      option.setData(fpMergePre({\r\n        filterShow: true,\r\n        onResolve: resolve,\r\n      }))\r\n    })\r\n  },\r\n  closeFilter: (value, option) => {\r\n    option.setData(fpMergePre({\r\n      filterShow: false,\r\n    }))\r\n    option.data.onResolve(value)\r\n  },\r\n})\r\n\r\nconst HeaderTab = styled.div`\r\n  display: flex;\r\n  justify-content: space-evenly;\r\n`\r\nconst ListBox = styled.div<{columns?: number}>`\r\n  padding: 20px;\r\n  display: grid;\r\n  grid-template-columns: repeat(${props => props.columns || 2}, 1fr);\r\n  grid-gap: 16px;\r\n`\r\n\r\nexport const ProductList = () => {\r\n  const router = useRouter()\r\n  const id = (router.query?.id as string) ?? ''\r\n  const {actions: actionsPLM, state: statePLM} = useStoreModel(productListModel)\r\n  const {state: stateHomeTabs, actions: actionsHomeTabs} = useStoreModel(homeTabsModel)\r\n  useEffect(() => {\r\n    actionsHomeTabs.setHomeType((router.query.homeType as string) ?? HomeType.home)\r\n  }, [router.query.homeType])\r\n\r\n  useEffect(() => {\r\n    if (!!id) {\r\n      actionsPLM.getCategory({id})\r\n      actionsPLM.getData({\r\n        isGroup: router.query.homeType === HomeType.group ? 1 : 0,\r\n        category: {\r\n          id,\r\n        },\r\n      })\r\n    }\r\n  }, [id])\r\n\r\n  return <div>\r\n    <HeaderTitle\r\n        title={statePLM.category?.name}\r\n        showCart={router.query.homeType === HomeType.home}\r\n    />\r\n    <HeaderTab>\r\n      <Button\r\n          fullWidth\r\n          onClick={async () => {\r\n            await actionsPLM.openSort()\r\n            actionsPLM.getData({\r\n              isGroup: router.query.homeType === HomeType.group ? 1 : 0,\r\n              category: {\r\n                id,\r\n              },\r\n            })\r\n          }}\r\n      >{ll('排序')}\r\n        <SortIcon/>\r\n      </Button>\r\n      <Button\r\n          fullWidth\r\n          onClick={() => actionsPLM.openFilter()}\r\n      >{ll('筛选')}\r\n        <FilterListIcon/>\r\n      </Button>\r\n    </HeaderTab>\r\n    <BScroller boxHeight={'calc(100vh - 100px)'}>\r\n      <ListBox\r\n          columns={stateHomeTabs.homeType === HomeType.group ? 1 : 2}\r\n      >\r\n        {statePLM.productList.map(value => (stateHomeTabs.homeType === HomeType.group && <GroupProductItem\r\n            product={value}\r\n            key={`ProductItem_${value.id}`}\r\n        />) || <ProductItem\r\n            key={`ProductItem_${value.id}`}\r\n            product={value}/>)}\r\n      </ListBox>\r\n    </BScroller>\r\n    <SortDrawer/>\r\n    <FilterDrawer/>\r\n    <UpdateShopCart/>\r\n  </div>\r\n}\r\n"]},"metadata":{},"sourceType":"module"}