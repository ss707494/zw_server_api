{"ast":null,"code":"var __jsx = React.createElement;\nimport React, { useEffect } from 'react';\nimport { HeaderTitle } from '../../../../components/HeaderTitle/HeaderTitle';\nimport { modelFactory } from '../../../../ModelAction/modelUtil';\nimport { doc } from '../../../../graphqlTypes/doc';\nimport { useStoreModel } from '../../../../ModelAction/useStore';\nimport { fpMergePre } from '../../../../tools/utils';\nimport styled from 'styled-components';\nimport { Button, ButtonBase, IconButton } from '@material-ui/core';\nimport { dealImgUrl } from '../../../../tools/img';\nimport { grey } from '@material-ui/core/colors';\nimport { ls } from '../../../../tools/dealKey';\nimport { showMessage } from '../../../../components/Message/Message';\nimport { DefaultBox } from '../myAddress/list';\nimport { PickupAddressDetail, PickupAddressDetailModel } from './pickupAddressDetail';\nimport InfoIcon from '@material-ui/icons/Info';\nconst pickupAddressModel = modelFactory('pickupAddressModel', {\n  list: [],\n  user: {}\n}, {\n  getList: async (value, option) => {\n    var _res$getDataConfig$va, _res$getDataConfig, _res$getDataConfig$va2;\n\n    const res = await option.query(doc.pickupAddress, {});\n    option.setData(fpMergePre({\n      list: (_res$getDataConfig$va = res === null || res === void 0 ? void 0 : (_res$getDataConfig = res.getDataConfig) === null || _res$getDataConfig === void 0 ? void 0 : (_res$getDataConfig$va2 = _res$getDataConfig.value) === null || _res$getDataConfig$va2 === void 0 ? void 0 : _res$getDataConfig$va2.list) !== null && _res$getDataConfig$va !== void 0 ? _res$getDataConfig$va : [],\n      user: res === null || res === void 0 ? void 0 : res.oneUser\n    }));\n  },\n  setDefault: async (value, option) => {\n    var _option$data$user$use, _res$updateUserInfo;\n\n    const res = option.mutate(doc.updateUserInfo, {\n      userInfo: {\n        id: (_option$data$user$use = option.data.user.userInfo) === null || _option$data$user$use === void 0 ? void 0 : _option$data$user$use.id,\n        pickupAddressId: value.id\n      }\n    });\n\n    if (res === null || res === void 0 ? void 0 : (_res$updateUserInfo = res.updateUserInfo) === null || _res$updateUserInfo === void 0 ? void 0 : _res$updateUserInfo.id) {\n      showMessage('操作成功');\n    }\n\n    return res;\n  }\n});\nconst ItemBox = styled(ButtonBase).withConfig({\n  displayName: \"list__ItemBox\",\n  componentId: \"cem9up-0\"\n})([\"&&&{display:flex;padding:10px 20px;> img{width:18vw;height:18vw;}> section{margin-left:9px;text-align:left;> main,footer{font-size:12px;color:\", \";}}}\"], grey[600]);\nconst Box = styled.div.withConfig({\n  displayName: \"list__Box\",\n  componentId: \"cem9up-1\"\n})([\"display:grid;grid-template-columns:1fr 108px;align-items:center;justify-items:start;\"]);\nconst RightBox = styled.div.withConfig({\n  displayName: \"list__RightBox\",\n  componentId: \"cem9up-2\"\n})([\"display:flex;flex-direction:column;\"]);\nexport const PickupAddress = () => {\n  const {\n    actions: actionsPAM,\n    state: statePAM\n  } = useStoreModel(pickupAddressModel);\n  const {\n    actions: actionsPickupAddressDetailModel,\n    state: statePickupAddressDetailModel\n  } = useStoreModel(PickupAddressDetailModel);\n  useEffect(() => {\n    if (!statePAM.list.length) {\n      actionsPAM.getList();\n    }\n  }, []);\n  return __jsx(\"div\", null, __jsx(HeaderTitle, {\n    title: '我的取货点'\n  }), __jsx(Box, null, statePAM.list.sort((a, b) => {\n    var _statePAM$user$userIn;\n\n    return ((_statePAM$user$userIn = statePAM.user.userInfo) === null || _statePAM$user$userIn === void 0 ? void 0 : _statePAM$user$userIn.pickupAddressId) === (b === null || b === void 0 ? void 0 : b.id) ? 1 : (b === null || b === void 0 ? void 0 : b.updateTime) - (a === null || a === void 0 ? void 0 : a.updateTime);\n  }).map(value => {\n    var _statePAM$user$userIn2;\n\n    return __jsx(React.Fragment, {\n      key: `PickupAddress_${value.id}`\n    }, __jsx(ItemBox, null, __jsx(\"img\", {\n      src: dealImgUrl(value.imgUrl),\n      alt: \"\"\n    }), __jsx(\"section\", null, __jsx(\"header\", null, value.fullName), __jsx(\"footer\", null, `${value.streetAddress}`), __jsx(\"main\", null, `${value.city} ${value.province} ${value.zip}`))), __jsx(RightBox, null, __jsx(IconButton, {\n      onClick: async () => {\n        const res = await actionsPickupAddressDetailModel.openClick(value);\n        console.log(res);\n      }\n    }, __jsx(InfoIcon, null)), ((_statePAM$user$userIn2 = statePAM.user.userInfo) === null || _statePAM$user$userIn2 === void 0 ? void 0 : _statePAM$user$userIn2.pickupAddressId) === value.id && __jsx(DefaultBox, null, ls('默认地址')) || __jsx(Button, {\n      color: 'secondary',\n      variant: 'outlined',\n      onClick: async () => {\n        var _await$actionsPAM$set, _await$actionsPAM$set2;\n\n        if ((_await$actionsPAM$set = await actionsPAM.setDefault(value)) === null || _await$actionsPAM$set === void 0 ? void 0 : (_await$actionsPAM$set2 = _await$actionsPAM$set.updateUserInfo) === null || _await$actionsPAM$set2 === void 0 ? void 0 : _await$actionsPAM$set2.id) {\n          actionsPAM.getList();\n        }\n      }\n    }, ls('设为默认'))));\n  })), __jsx(PickupAddressDetail, null));\n};","map":null,"metadata":{},"sourceType":"module"}