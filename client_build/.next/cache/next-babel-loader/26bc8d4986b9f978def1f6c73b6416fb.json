{"ast":null,"code":"var __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { useEffect } from 'react';\nimport ChevronRightIcon from '@material-ui/icons/ChevronRight';\nimport { HeaderTitle } from '../../components/HeaderTitle/HeaderTitle';\nimport { useStoreModel } from '../../ModelAction/useStore';\nimport { pageTypeEnum, shopCartModel } from './index';\nimport styled from 'styled-components';\nimport { ls } from '../../tools/dealKey';\nimport { PickUpTypeEnum } from '../../ss_common/enum';\nimport { doc } from '../../graphqlTypes/doc';\nimport { IconButton, LinearProgress, TextField } from '@material-ui/core';\nimport { BScroller } from '../../components/BScroll/BScroller';\nimport { Space } from '../../components/Box/Box';\nimport { SelectAddress, selectAddressModel } from './components/SelectAddress';\nimport { grey } from '@material-ui/core/colors';\nimport { SelectCard, selectCardModel } from './components/SelectCard';\nimport { dealMaybeNumber, dealMoney, dealUrlQuery } from '../../tools/utils';\nimport { mpStyle } from '../../style/common';\nimport { ButtonLoad } from '../../components/ButtonLoad/ButtonLoad';\nimport { showMessage } from '../../components/Message/Message';\nimport { useRouter } from 'next/router';\nexport const ShopTitle = styled.div.withConfig({\n  displayName: \"orderPage__ShopTitle\",\n  componentId: \"n2h0w5-0\"\n})([\"font-size:18px;font-weight:bold;display:flex;align-items:flex-end;> footer{font-size:14px;color:\", \";}\"], mpStyle.red);\nexport const AddressBox = styled.div.withConfig({\n  displayName: \"orderPage__AddressBox\",\n  componentId: \"n2h0w5-1\"\n})([\"padding:20px;display:flex;align-items:center;> main{flex-grow:1;> header{font-size:16px;font-weight:bold;margin-bottom:8px;}}\"]);\nexport const CardBox = styled.div.withConfig({\n  displayName: \"orderPage__CardBox\",\n  componentId: \"n2h0w5-2\"\n})([\"padding:16px 20px;display:grid;grid-template-columns:1fr min-content;grid-template-rows:repeat(2,1fr);> header{font-size:16px;font-weight:bold;margin-bottom:8px;}> aside{grid-area:1/2/3/3;}\"]);\nexport const ShopTotal = styled.div.withConfig({\n  displayName: \"orderPage__ShopTotal\",\n  componentId: \"n2h0w5-3\"\n})([\"padding:0 20px;display:flex;justify-content:space-between;margin-bottom:16px;\"]);\nexport const FooterFit = styled.div.withConfig({\n  displayName: \"orderPage__FooterFit\",\n  componentId: \"n2h0w5-4\"\n})([\"position:fixed;box-sizing:border-box;background:white;bottom:0;width:100vw;padding:16px 24px;display:grid;grid-template-rows:repeat(2,1fr);grid-template-columns:1fr max-content;grid-row-gap:8px;box-shadow:\", \";> header{> span{font-size:12px;margin-left:8px;}}> aside{grid-area:1/2/3/3;}\"], mpStyle.shadow['1']);\nexport const OrderPage = () => {\n  var _stateSCM$payCardList, _stateSCM$form, _stateSCM$form$coupon, _stateSCM$form2, _stateSCM$userLevelLi;\n\n  const router = useRouter();\n  const {\n    actions: actionsSAM\n  } = useStoreModel(selectAddressModel);\n  const {\n    actions: actionsSelectCard\n  } = useStoreModel(selectCardModel);\n  const {\n    state: stateSCM,\n    actions: actionsSCM,\n    getLoad\n  } = useStoreModel(shopCartModel);\n  useEffect(() => {\n    if (!stateSCM.user.id) {\n      actionsSCM.getOrderInfo();\n    }\n  }, []);\n  const addressData = stateSCM.dealAddressData(stateSCM);\n  const cardData = ((_stateSCM$payCardList = stateSCM.payCardList) === null || _stateSCM$payCardList === void 0 ? void 0 : _stateSCM$payCardList.find(v => v.id === stateSCM.form.paymentMethodCardId)) || {};\n  const productTotal = stateSCM.dealProductTotal(stateSCM);\n  const transportationCosts = stateSCM.dealTransportationCosts(stateSCM, productTotal);\n  const actuallyPaid = productTotal + transportationCosts - dealMaybeNumber(stateSCM.form.deductCoin) + dealMaybeNumber(stateSCM.form.saleTax) - dealMaybeNumber((_stateSCM$form = stateSCM.form) === null || _stateSCM$form === void 0 ? void 0 : _stateSCM$form.couponDiscount);\n  const generateCoin = actuallyPaid * 0.01;\n  useEffect(() => {\n    if (stateSCM.pageType === pageTypeEnum.order) {\n      window.history.pushState(null, '', document.URL);\n      window.addEventListener('popstate', state => {\n        // 监听到返回事件，注意，只有触发了返回才会执行这个方法\n        actionsSCM.updatePageType(pageTypeEnum.shopCart);\n      }, false);\n    }\n\n    return () => {\n      window.removeEventListener('popstate', state => {\n        actionsSCM.updatePageType(pageTypeEnum.shopCart);\n      });\n    };\n  }, [stateSCM.pageType]);\n  return __jsx(\"div\", null, __jsx(HeaderTitle, {\n    title: '订单支付',\n    backCall: () => {\n      actionsSCM.updatePageType(pageTypeEnum.shopCart);\n      return true;\n    }\n  }), !!getLoad(doc.orderConfirmInfo) && __jsx(LinearProgress, null) || __jsx(\"div\", {\n    style: {\n      height: '4px'\n    }\n  }), __jsx(BScroller, {\n    boxHeight: 'calc(100vh - 135px)'\n  }, __jsx(Space, {\n    h: 10\n  }), __jsx(ShopTitle, null, __jsx(Space, {\n    w: 20\n  }), ls(stateSCM.form.pickUpType === PickUpTypeEnum.Self && '自取地址' || '送货地址')), __jsx(AddressBox, null, __jsx(\"main\", null, __jsx(\"header\", null, `${addressData.combineAddress}`), __jsx(\"footer\", null, `${addressData.name} ${addressData.contactInformation}`)), __jsx(\"aside\", null, __jsx(IconButton, {\n    onClick: async () => {\n      const res = await actionsSAM.openClick();\n\n      if (res) {\n        actionsSCM.setForm(['addressId', res]);\n      }\n    }\n  }, __jsx(ChevronRightIcon, null)))), __jsx(Space, {\n    c: grey[200],\n    h: 16\n  }), __jsx(Space, {\n    h: 16\n  }), __jsx(ShopTitle, null, __jsx(Space, {\n    w: 20\n  }), ls('付款方式')), __jsx(CardBox, null, __jsx(\"header\", null, cardData.name), __jsx(\"footer\", null, cardData.number), __jsx(\"aside\", null, __jsx(IconButton, {\n    onClick: async () => {\n      const res = await actionsSelectCard.openClick();\n\n      if (res) {\n        actionsSCM.setForm(['paymentMethodCardId', res]);\n      }\n    }\n  }, __jsx(ChevronRightIcon, null)))), __jsx(Space, {\n    c: grey[200],\n    h: 16\n  }), __jsx(Space, {\n    h: 16\n  }), __jsx(ShopTitle, null, __jsx(Space, {\n    w: 20\n  }), ls('使用达人币'), __jsx(Space, {\n    w: 16\n  }), __jsx(\"footer\", null, ls('当月可用余额'), dealMoney(stateSCM.user.orderCoinCurrentMonth))), __jsx(\"div\", null, __jsx(Space, {\n    w: 20\n  }), __jsx(TextField, {\n    style: {\n      marginTop: '8px',\n      marginBottom: '24px'\n    },\n    label: ls(''),\n    value: stateSCM.form.deductCoin,\n    onChange: e => {\n      actionsSCM.setForm(['deductCoin', e.target.value]);\n    }\n  })), __jsx(Space, {\n    c: grey[200],\n    h: 16\n  }), __jsx(Space, {\n    h: 16\n  }), __jsx(ShopTotal, null, __jsx(\"header\", null, ls('购物车总计')), __jsx(\"footer\", null, dealMoney(productTotal - ((_stateSCM$form$coupon = (_stateSCM$form2 = stateSCM.form) === null || _stateSCM$form2 === void 0 ? void 0 : _stateSCM$form2.couponDiscount) !== null && _stateSCM$form$coupon !== void 0 ? _stateSCM$form$coupon : 0)))), transportationCosts > 0 && __jsx(ShopTotal, null, __jsx(\"header\", null, ls('运费')), __jsx(\"footer\", null, dealMoney(transportationCosts))), __jsx(ShopTotal, null, __jsx(\"header\", null, ls('达人币抵扣')), __jsx(\"footer\", null, dealMoney(stateSCM.form.deductCoin, '-'))), __jsx(ShopTotal, {\n    style: {\n      fontSize: '18px'\n    }\n  }, __jsx(\"header\", null, ls('订单总额')), __jsx(\"footer\", null, dealMoney(actuallyPaid))), __jsx(Space, {\n    h: 30\n  })), __jsx(FooterFit, null, __jsx(\"header\", null, ls('本次订单'), __jsx(\"span\", null, ls((_stateSCM$userLevelLi = stateSCM.userLevelList.find(v => {\n    var _stateSCM$user$userIn;\n\n    return v.code === ((_stateSCM$user$userIn = stateSCM.user.userInfo) === null || _stateSCM$user$userIn === void 0 ? void 0 : _stateSCM$user$userIn.userLevel);\n  })) === null || _stateSCM$userLevelLi === void 0 ? void 0 : _stateSCM$userLevelLi.name))), __jsx(\"footer\", null, ls('将获得下月使用达人币 '), __jsx(\"span\", null, dealMoney(generateCoin))), __jsx(\"aside\", null, __jsx(ButtonLoad, {\n    loading: getLoad(doc.saveOrder),\n    onClick: async () => {\n      var _stateSCM$user, _stateSCM$user$userIn2, _res$saveOrder;\n\n      if (dealMaybeNumber((_stateSCM$user = stateSCM.user) === null || _stateSCM$user === void 0 ? void 0 : _stateSCM$user.orderCoinCurrentMonth) < dealMaybeNumber(stateSCM.form.deductCoin)) {\n        showMessage(ls('达人币余额不足'));\n        return;\n      }\n\n      const submitData = _objectSpread(_objectSpread({}, stateSCM.form), {}, {\n        generateCoin,\n        actuallyPaid,\n        transportationCosts,\n        subtotal: productTotal,\n        currentUserLevel: (_stateSCM$user$userIn2 = stateSCM.user.userInfo) === null || _stateSCM$user$userIn2 === void 0 ? void 0 : _stateSCM$user$userIn2.userLevel,\n        rOrderProduct: stateSCM.shopCartList.map(v => {\n          var _v$product;\n\n          return {\n            count: v.number,\n            productId: (_v$product = v.product) === null || _v$product === void 0 ? void 0 : _v$product.id,\n            product: v.product\n          };\n        })\n      });\n\n      const res = await actionsSCM.submit(_objectSpread({}, submitData));\n\n      if (res === null || res === void 0 ? void 0 : (_res$saveOrder = res.saveOrder) === null || _res$saveOrder === void 0 ? void 0 : _res$saveOrder.id) {\n        var _res$saveOrder2;\n\n        showMessage('操作成功 将前往付款'); // await router.replace('/cart/result')\n\n        const _query = dealUrlQuery({\n          orderId: res === null || res === void 0 ? void 0 : (_res$saveOrder2 = res.saveOrder) === null || _res$saveOrder2 === void 0 ? void 0 : _res$saveOrder2.id\n        });\n\n        await router.replace(`/pay${_query}`, `/pay${_query}`);\n        actionsSCM.clearData();\n        actionsSCM.getList();\n      }\n    },\n    variant: 'contained',\n    color: 'secondary'\n  }, ls('提交订单')))), __jsx(SelectAddress, null), __jsx(SelectCard, null));\n};","map":null,"metadata":{},"sourceType":"module"}