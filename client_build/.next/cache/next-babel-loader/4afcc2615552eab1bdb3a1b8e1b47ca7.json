{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nimport { modelFactory } from '../../ModelAction/modelUtil';\nimport { PickUpTypeEnum } from '../../ss_common/enum';\nimport { fpMergePre } from '../../tools/utils';\nimport { setForm } from '../../tools/commonAction';\nimport { doc } from '../../graphqlTypes/doc';\nexport var shopCartModel = modelFactory('shopCartModel', {\n  shopCartList: [],\n  shopCartListNext: [],\n  form: {\n    pickUpType: PickUpTypeEnum.Self\n  }\n}, {\n  clearForm: function clearForm(value, option) {\n    return option.setData(fpMergePre({\n      form: {\n        pickUpType: PickUpTypeEnum.Self\n      }\n    }));\n  },\n  setForm: setForm,\n  getList: function () {\n    var _getList = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(value, option) {\n      var _res$shopCartList$fil, _res$shopCartList$fil2;\n\n      var res;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return option.query(doc.userShopCartList);\n\n            case 2:\n              res = _context.sent;\n              option.setData(fpMergePre({\n                shopCartList: (_res$shopCartList$fil = res === null || res === void 0 ? void 0 : res.shopCartList.filter(function (v) {\n                  return !v.isNext;\n                })) !== null && _res$shopCartList$fil !== void 0 ? _res$shopCartList$fil : [],\n                shopCartListNext: (_res$shopCartList$fil2 = res === null || res === void 0 ? void 0 : res.shopCartList.filter(function (v) {\n                  return !!v.isNext;\n                })) !== null && _res$shopCartList$fil2 !== void 0 ? _res$shopCartList$fil2 : []\n              }));\n\n            case 4:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    function getList(_x, _x2) {\n      return _getList.apply(this, arguments);\n    }\n\n    return getList;\n  }()\n});\nexport var CartPage = function CartPage() {};\n_c = CartPage;\n\nvar _c;\n\n$RefreshReg$(_c, \"CartPage\");","map":{"version":3,"sources":["D:/code/zw/zw_client_web/utils/view/cart/index.tsx"],"names":["modelFactory","PickUpTypeEnum","fpMergePre","setForm","doc","shopCartModel","shopCartList","shopCartListNext","form","pickUpType","Self","clearForm","value","option","setData","getList","query","userShopCartList","res","filter","v","isNext","CartPage"],"mappings":";;AAAA,SAAQA,YAAR,QAA2B,6BAA3B;AAEA,SAAQC,cAAR,QAA6B,sBAA7B;AACA,SAAQC,UAAR,QAAyB,mBAAzB;AACA,SAAQC,OAAR,QAAsB,0BAAtB;AACA,SAAQC,GAAR,QAAkB,wBAAlB;AAEA,OAAO,IAAMC,aAAa,GAAGL,YAAY,CAAC,eAAD,EAAkB;AACzDM,EAAAA,YAAY,EAAE,EAD2C;AAEzDC,EAAAA,gBAAgB,EAAE,EAFuC;AAGzDC,EAAAA,IAAI,EAAE;AACJC,IAAAA,UAAU,EAAER,cAAc,CAACS;AADvB;AAHmD,CAAlB,EAMtC;AACDC,EAAAA,SAAS,EAAE,mBAACC,KAAD,EAAQC,MAAR;AAAA,WAAmBA,MAAM,CAACC,OAAP,CAAeZ,UAAU,CAAC;AACtDM,MAAAA,IAAI,EAAE;AACJC,QAAAA,UAAU,EAAER,cAAc,CAACS;AADvB;AADgD,KAAD,CAAzB,CAAnB;AAAA,GADV;AAMDP,EAAAA,OAAO,EAAEA,OANR;AAODY,EAAAA,OAAO;AAAA,4EAAE,iBAAOH,KAAP,EAAcC,MAAd;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBACWA,MAAM,CAACG,KAAP,CAAaZ,GAAG,CAACa,gBAAjB,CADX;;AAAA;AACDC,cAAAA,GADC;AAEPL,cAAAA,MAAM,CAACC,OAAP,CAAeZ,UAAU,CAAC;AACxBI,gBAAAA,YAAY,2BAAEY,GAAF,aAAEA,GAAF,uBAAEA,GAAG,CAAEZ,YAAL,CAAkBa,MAAlB,CAAyB,UAACC,CAAD;AAAA,yBAAiB,CAACA,CAAC,CAACC,MAApB;AAAA,iBAAzB,CAAF,yEAA0D,EAD9C;AAExBd,gBAAAA,gBAAgB,4BAAEW,GAAF,aAAEA,GAAF,uBAAEA,GAAG,CAAEZ,YAAL,CAAkBa,MAAlB,CAAyB,UAACC,CAAD;AAAA,yBAAiB,CAAC,CAACA,CAAC,CAACC,MAArB;AAAA,iBAAzB,CAAF,2EAA2D;AAFnD,eAAD,CAAzB;;AAFO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAF;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAPN,CANsC,CAAlC;AAsBP,OAAO,IAAMC,QAAQ,GAAG,SAAXA,QAAW,GAAM,CAE7B,CAFM;KAAMA,Q","sourcesContent":["import {modelFactory} from '../../ModelAction/modelUtil'\r\nimport {ShopCart} from '../../graphqlTypes/types'\r\nimport {PickUpTypeEnum} from '../../ss_common/enum'\r\nimport {fpMergePre} from '../../tools/utils'\r\nimport {setForm} from '../../tools/commonAction'\r\nimport {doc} from '../../graphqlTypes/doc'\r\n\r\nexport const shopCartModel = modelFactory('shopCartModel', {\r\n  shopCartList: [] as ShopCart[],\r\n  shopCartListNext: [] as ShopCart[],\r\n  form: {\r\n    pickUpType: PickUpTypeEnum.Self,\r\n  },\r\n}, {\r\n  clearForm: (value, option) => option.setData(fpMergePre({\r\n    form: {\r\n      pickUpType: PickUpTypeEnum.Self,\r\n    },\r\n  })),\r\n  setForm: setForm,\r\n  getList: async (value, option) => {\r\n    const res = await option.query(doc.userShopCartList)\r\n    option.setData(fpMergePre({\r\n      shopCartList: res?.shopCartList.filter((v: ShopCart) => !v.isNext) ?? [],\r\n      shopCartListNext: res?.shopCartList.filter((v: ShopCart) => !!v.isNext) ?? [],\r\n    }))\r\n  },\r\n})\r\n\r\nexport const CartPage = () => {\r\n\r\n}\r\n"]},"metadata":{},"sourceType":"module"}