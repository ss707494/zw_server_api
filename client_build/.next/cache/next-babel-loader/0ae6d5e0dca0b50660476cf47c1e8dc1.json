{"ast":null,"code":"import Router from 'next/router';\nimport { fpMergePre } from '../../../tools/utils';\nimport { setToken } from '../../../tools/token';\nimport { doc } from '../../../graphqlTypes/doc';\nimport { modelFactory } from '../../../ModelAction/modelUtil';\n\nconst toLogin = async () => {\n  await Router.push('/m/login');\n};\n\nexport const meModel = modelFactory('meModel', {\n  user: {}\n}, {\n  getLoginUser: async (value, option) => {\n    var _await$option$query;\n\n    const res = (_await$option$query = await option.query(doc.oneUser)) === null || _await$option$query === void 0 ? void 0 : _await$option$query.oneUser;\n    option.setData(fpMergePre({\n      user: res\n    }));\n    return res;\n  },\n  logout: async (value, option) => {\n    setToken('');\n    setToken('', 'refreshtoken');\n    await toLogin();\n  },\n  toLogin: value => {\n    toLogin();\n  }\n});","map":null,"metadata":{},"sourceType":"module"}