{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport Router from 'next/router';\nimport { fpMergePre, fpSetPre } from '../../tools/utils';\nimport { setToken } from '../../tools/token';\nimport { showMessage } from '../../components/Message/Message';\nimport { doc } from '../../graphqlTypes/doc';\nimport { modelFactory } from '../../ModelAction/modelUtil';\nimport { ls } from '../../tools/dealKey';\nexport var registerModel = modelFactory('register', {\n  step: 0,\n  userForm: {\n    name: '1',\n    password: '123',\n    confirmPassword: '123',\n    userInfo: {\n      name: 'ss',\n      email: 'ss',\n      phone: 'ss'\n    }\n  }\n}, {\n  setStep: function setStep(value, option) {\n    return option.setData(fpMergePre({\n      step: value\n    }));\n  },\n  setUserForm: function setUserForm(_ref, option) {\n    var _ref2 = _slicedToArray(_ref, 2),\n        path = _ref2[0],\n        value = _ref2[1];\n\n    option.setData(fpSetPre(\"userForm.\".concat(path), value));\n  },\n  goNext: function goNext(value, option) {\n    var _option$data, _option$data$userForm, _option$data2, _option$data2$userFor, _option$data3, _option$data3$userFor, _option$data4, _option$data4$userFor, _option$data5, _option$data5$userFor;\n\n    if (!((_option$data = option.data) === null || _option$data === void 0 ? void 0 : (_option$data$userForm = _option$data.userForm) === null || _option$data$userForm === void 0 ? void 0 : _option$data$userForm.name) || !((_option$data2 = option.data) === null || _option$data2 === void 0 ? void 0 : (_option$data2$userFor = _option$data2.userForm) === null || _option$data2$userFor === void 0 ? void 0 : _option$data2$userFor.password) || !((_option$data3 = option.data) === null || _option$data3 === void 0 ? void 0 : (_option$data3$userFor = _option$data3.userForm) === null || _option$data3$userFor === void 0 ? void 0 : _option$data3$userFor.confirmPassword)) {\n      showMessage(ls('请填写表单'));\n      return;\n    }\n\n    if (((_option$data4 = option.data) === null || _option$data4 === void 0 ? void 0 : (_option$data4$userFor = _option$data4.userForm) === null || _option$data4$userFor === void 0 ? void 0 : _option$data4$userFor.password) !== ((_option$data5 = option.data) === null || _option$data5 === void 0 ? void 0 : (_option$data5$userFor = _option$data5.userForm) === null || _option$data5$userFor === void 0 ? void 0 : _option$data5$userFor.confirmPassword)) {\n      showMessage(ls('两次密码输入不一致'));\n      return;\n    }\n\n    option.setData(fpMergePre({\n      step: 1\n    }));\n  },\n  submit: function () {\n    var _submit = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(value, option) {\n      var _option$data$userForm2, _registerUser$user;\n\n      var userInfo, _option$data$userForm3, confirmPassword, params, res, registerUser;\n\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              userInfo = ((_option$data$userForm2 = option.data.userForm) === null || _option$data$userForm2 === void 0 ? void 0 : _option$data$userForm2.userInfo) || {};\n\n              if (!(!userInfo.name || !userInfo.phone || !userInfo.email)) {\n                _context.next = 4;\n                break;\n              }\n\n              showMessage(ls('请填写表单'));\n              return _context.abrupt(\"return\");\n\n            case 4:\n              _option$data$userForm3 = option.data.userForm, confirmPassword = _option$data$userForm3.confirmPassword, params = _objectWithoutProperties(_option$data$userForm3, [\"confirmPassword\"]);\n              _context.next = 7;\n              return option.mutate(doc.registerUser, {\n                data: _objectSpread({}, params)\n              });\n\n            case 7:\n              res = _context.sent;\n              registerUser = res === null || res === void 0 ? void 0 : res.registerUser;\n\n              if (!(registerUser === null || registerUser === void 0 ? void 0 : (_registerUser$user = registerUser.user) === null || _registerUser$user === void 0 ? void 0 : _registerUser$user.id)) {\n                _context.next = 15;\n                break;\n              }\n\n              showMessage(ls('注册成功,即将登录'));\n              setToken(registerUser.token);\n              setToken(registerUser.refreshtoken, 'refreshtoken');\n              _context.next = 15;\n              return Router.replace(\"/home\", \"\", {\n                shallow: true\n              });\n\n            case 15:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    function submit(_x, _x2) {\n      return _submit.apply(this, arguments);\n    }\n\n    return submit;\n  }(),\n  goToSignup: function goToSignup(value, option) {\n    Router.push('/login');\n  }\n});","map":null,"metadata":{},"sourceType":"module"}