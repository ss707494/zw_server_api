{"ast":null,"code":"var _jsxFileName = \"D:\\\\code\\\\zw\\\\zw_client_web\\\\utils\\\\view\\\\productList\\\\[id].tsx\";\nvar __jsx = React.createElement;\nimport React, { useEffect } from 'react';\nimport SortIcon from '@material-ui/icons/Sort';\nimport FilterListIcon from '@material-ui/icons/FilterList';\nimport { modelFactory } from '../../ModelAction/modelUtil';\nimport { useRouter } from 'next/router';\nimport { fpMergePre } from '../../tools/utils';\nimport { doc } from '../../graphqlTypes/doc';\nimport { useStoreModel } from '../../ModelAction/useStore';\nimport { HeaderTitle } from '../../components/HeaderTitle/HeaderTitle';\nimport styled from 'styled-components';\nimport { Button } from '@material-ui/core';\nimport { ls } from '../../tools/dealKey';\nimport { ProductItem } from '../../components/ProductItem/ProductItem';\nimport { BScroller } from '../../components/BScroll/BScroller';\nimport { SortDrawer } from './SortDrawer';\nimport { FilterDrawer } from './FilterDrawer';\nexport const sortTypeEnum = {\n  nomalSort: 'nomalSort',\n  highestSales: 'highestSales',\n  new: 'new',\n  priceAsc: 'priceAsc',\n  priceDesc: 'priceDesc'\n};\nexport const dealSortSql = type => {\n  const _sql = {\n    nomalSort: [['id', 'asc'], ['createTime', 'asc']],\n    highestSales: [],\n    new: [['createTime', 'desc']],\n    priceAsc: [['priceOut', 'asc']],\n    priceDesc: [['priceOut', 'desc']]\n  };\n  return _sql[type] || [];\n};\nexport const sortTypeLabel = {\n  nomalSort: '综合排序',\n  highestSales: '销量最高',\n  new: '最新上架',\n  priceAsc: '价格由低到高',\n  priceDesc: '价格由高到低'\n};\nexport const productListModel = modelFactory('productListModel', {\n  category: {},\n  productList: [],\n  sortShow: false,\n  params: {\n    sortType: sortTypeEnum.nomalSort\n  },\n  filterShow: false,\n  onResolve: () => {}\n}, {\n  getCategory: async (value, option) => {\n    var _res$oneCategory;\n\n    const res = await option.query(doc.oneCategory, {\n      data: value\n    });\n    option.setData(fpMergePre({\n      category: (_res$oneCategory = res === null || res === void 0 ? void 0 : res.oneCategory) !== null && _res$oneCategory !== void 0 ? _res$oneCategory : {}\n    }));\n  },\n  getData: async (value, option) => {\n    var _res$productList$list, _res$productList;\n\n    const res = await option.query(doc.productList, {\n      productInput: value,\n      orderByInput: {\n        orderByObject: dealSortSql(option.data.params.sortType)\n      }\n    });\n    option.setData(fpMergePre({\n      productList: (_res$productList$list = res === null || res === void 0 ? void 0 : (_res$productList = res.productList) === null || _res$productList === void 0 ? void 0 : _res$productList.list) !== null && _res$productList$list !== void 0 ? _res$productList$list : []\n    }));\n  },\n  openSort: (value, option) => {\n    return new Promise(resolve => {\n      option.setData(fpMergePre({\n        sortShow: true,\n        onResolve: resolve\n      }));\n    });\n  },\n  closeSort: (value, option) => {\n    option.setData(fpMergePre({\n      sortShow: false\n    }));\n    option.data.onResolve();\n  },\n  changeSort: async (value, option) => {\n    option.setData(fpMergePre({\n      params: {\n        sortType: value\n      }\n    }));\n  },\n  openFilter: (value, option) => {\n    return new Promise(resolve => {\n      option.setData(fpMergePre({\n        filterShow: true,\n        onResolve: resolve\n      }));\n    });\n  },\n  closeFilter: (value, option) => {\n    option.setData(fpMergePre({\n      filterShow: false\n    }));\n    option.data.onResolve();\n  }\n});\nconst HeaderTab = styled.div.withConfig({\n  displayName: \"id__HeaderTab\",\n  componentId: \"sc-1l2qjuw-0\"\n})([\"display:flex;justify-content:space-evenly;\"]);\nconst ListBox = styled.div.withConfig({\n  displayName: \"id__ListBox\",\n  componentId: \"sc-1l2qjuw-1\"\n})([\"padding:20px;display:grid;grid-template-columns:repeat(2,1fr);grid-gap:15px;\"]);\nexport const ProductList = () => {\n  var _ref, _router$query, _statePLM$category;\n\n  const router = useRouter();\n  const id = (_ref = (_router$query = router.query) === null || _router$query === void 0 ? void 0 : _router$query.id) !== null && _ref !== void 0 ? _ref : '';\n  const {\n    actions: actionsPLM,\n    state: statePLM\n  } = useStoreModel(productListModel);\n  useEffect(() => {\n    if (!!id) {\n      actionsPLM.getCategory({\n        id\n      });\n      actionsPLM.getData({\n        category: {\n          id\n        }\n      });\n    }\n  }, [id]);\n  return __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 10\n    }\n  }, __jsx(HeaderTitle, {\n    title: (_statePLM$category = statePLM.category) === null || _statePLM$category === void 0 ? void 0 : _statePLM$category.name,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 5\n    }\n  }), __jsx(HeaderTab, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 5\n    }\n  }, __jsx(Button, {\n    fullWidth: true,\n    onClick: () => actionsPLM.openSort(),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 7\n    }\n  }, ls('排序'), __jsx(SortIcon, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 146,\n      columnNumber: 9\n    }\n  })), __jsx(Button, {\n    fullWidth: true,\n    onClick: () => actionsPLM.openFilter(),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 148,\n      columnNumber: 7\n    }\n  }, ls('筛选'), __jsx(FilterListIcon, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 152,\n      columnNumber: 9\n    }\n  }))), __jsx(BScroller, {\n    boxHeight: 'calc(100vh - 100px)',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 155,\n      columnNumber: 5\n    }\n  }, __jsx(ListBox, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 156,\n      columnNumber: 7\n    }\n  }, statePLM.productList.map(value => __jsx(ProductItem, {\n    key: `ProductItem_${value.id}`,\n    product: value,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 157,\n      columnNumber: 44\n    }\n  })))), __jsx(SortDrawer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 163,\n      columnNumber: 5\n    }\n  }), __jsx(FilterDrawer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 164,\n      columnNumber: 5\n    }\n  }));\n};","map":{"version":3,"sources":["D:/code/zw/zw_client_web/utils/view/productList/[id].tsx"],"names":["React","useEffect","SortIcon","FilterListIcon","modelFactory","useRouter","fpMergePre","doc","useStoreModel","HeaderTitle","styled","Button","ls","ProductItem","BScroller","SortDrawer","FilterDrawer","sortTypeEnum","nomalSort","highestSales","new","priceAsc","priceDesc","dealSortSql","type","_sql","sortTypeLabel","productListModel","category","productList","sortShow","params","sortType","filterShow","onResolve","getCategory","value","option","res","query","oneCategory","data","setData","getData","productInput","orderByInput","orderByObject","list","openSort","Promise","resolve","closeSort","changeSort","openFilter","closeFilter","HeaderTab","div","ListBox","ProductList","router","id","actions","actionsPLM","state","statePLM","name","map"],"mappings":"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","sourcesContent":["import React, {useEffect} from 'react'\r\nimport SortIcon from '@material-ui/icons/Sort'\r\nimport FilterListIcon from '@material-ui/icons/FilterList'\r\nimport {modelFactory} from '../../ModelAction/modelUtil'\r\nimport {Category, CategoryItemInput, OrderByInput, Product, ProductItemInput} from '../../graphqlTypes/types'\r\nimport {useRouter} from 'next/router'\r\nimport {fpMergePre} from '../../tools/utils'\r\nimport {doc} from '../../graphqlTypes/doc'\r\nimport {useStoreModel} from '../../ModelAction/useStore'\r\nimport {HeaderTitle} from '../../components/HeaderTitle/HeaderTitle'\r\nimport styled from 'styled-components'\r\nimport {Button} from '@material-ui/core'\r\nimport {ls} from '../../tools/dealKey'\r\nimport {ProductItem} from '../../components/ProductItem/ProductItem'\r\nimport {BScroller} from '../../components/BScroll/BScroller'\r\nimport {SortDrawer} from './SortDrawer'\r\nimport {FilterDrawer} from './FilterDrawer'\r\nimport {ResolverFun} from '../../commonModel/dialog'\r\n\r\nexport const sortTypeEnum = {\r\n  nomalSort: 'nomalSort',\r\n  highestSales: 'highestSales',\r\n  new: 'new',\r\n  priceAsc: 'priceAsc',\r\n  priceDesc: 'priceDesc',\r\n}\r\nexport const dealSortSql = (type: string) => {\r\n  const _sql: any = {\r\n    nomalSort: [['id', 'asc'], ['createTime', 'asc']],\r\n    highestSales: [],\r\n    new: [['createTime', 'desc']],\r\n    priceAsc: [['priceOut', 'asc']],\r\n    priceDesc: [['priceOut', 'desc']],\r\n  }\r\n  return _sql[type] || []\r\n}\r\nexport const sortTypeLabel: {\r\n  [key in string]: string\r\n} = {\r\n  nomalSort: '综合排序',\r\n  highestSales: '销量最高',\r\n  new: '最新上架',\r\n  priceAsc: '价格由低到高',\r\n  priceDesc: '价格由高到低',\r\n}\r\nexport const productListModel = modelFactory('productListModel', {\r\n  category: {} as Category,\r\n  productList: [] as Product[],\r\n  sortShow: false,\r\n  params: {\r\n    sortType: sortTypeEnum.nomalSort,\r\n  },\r\n  filterShow: false,\r\n  onResolve: (() => {}) as ResolverFun,\r\n}, {\r\n  getCategory: async (value: CategoryItemInput, option) => {\r\n    const res = await option.query(doc.oneCategory, {data: value})\r\n    option.setData(fpMergePre({\r\n      category: res?.oneCategory ?? {},\r\n    }))\r\n  },\r\n  getData: async (value: ProductItemInput, option) => {\r\n    const res = await option.query(doc.productList, {\r\n      productInput: value,\r\n      orderByInput: {\r\n        orderByObject: dealSortSql(option.data.params.sortType),\r\n      } as OrderByInput,\r\n    })\r\n    option.setData(fpMergePre({\r\n      productList: res?.productList?.list ?? [],\r\n    }))\r\n  },\r\n  openSort: (value, option) => {\r\n    return new Promise(resolve => {\r\n      option.setData(fpMergePre({\r\n        sortShow: true,\r\n        onResolve: resolve,\r\n      }))\r\n    })\r\n  },\r\n  closeSort: (value, option) => {\r\n    option.setData(fpMergePre({\r\n      sortShow: false,\r\n    }))\r\n    option.data.onResolve()\r\n  },\r\n  changeSort: async (value, option) => {\r\n    option.setData(fpMergePre({\r\n      params: {\r\n        sortType: value,\r\n      }\r\n    }))\r\n  },\r\n  openFilter: (value, option) => {\r\n    return new Promise(resolve => {\r\n      option.setData(fpMergePre({\r\n        filterShow: true,\r\n        onResolve: resolve,\r\n      }))\r\n    })\r\n  },\r\n  closeFilter: (value, option) => {\r\n    option.setData(fpMergePre({\r\n      filterShow: false,\r\n    }))\r\n    option.data.onResolve()\r\n  },\r\n})\r\n\r\nconst HeaderTab = styled.div`\r\n  display: flex;\r\n  justify-content: space-evenly;\r\n`\r\nconst ListBox = styled.div`\r\n  padding: 20px;\r\n  display: grid;\r\n  grid-template-columns: repeat(2, 1fr);\r\n  grid-gap: 15px;\r\n`\r\n\r\nexport const ProductList = () => {\r\n  const router = useRouter()\r\n  const id = (router.query?.id as string) ?? ''\r\n  const {actions: actionsPLM, state: statePLM} = useStoreModel(productListModel)\r\n\r\n  useEffect(() => {\r\n    if (!!id) {\r\n      actionsPLM.getCategory({id})\r\n      actionsPLM.getData({\r\n        category: {\r\n          id,\r\n        },\r\n      })\r\n    }\r\n  }, [id])\r\n\r\n  return <div>\r\n    <HeaderTitle\r\n        title={statePLM.category?.name}\r\n    />\r\n    <HeaderTab>\r\n      <Button\r\n          fullWidth\r\n          onClick={() => actionsPLM.openSort()}\r\n      >{ls('排序')}\r\n        <SortIcon/>\r\n      </Button>\r\n      <Button\r\n          fullWidth\r\n          onClick={() => actionsPLM.openFilter()}\r\n      >{ls('筛选')}\r\n        <FilterListIcon/>\r\n      </Button>\r\n    </HeaderTab>\r\n    <BScroller boxHeight={'calc(100vh - 100px)'}>\r\n      <ListBox>\r\n        {statePLM.productList.map(value => <ProductItem\r\n            key={`ProductItem_${value.id}`}\r\n            product={value}\r\n        />)}\r\n      </ListBox>\r\n    </BScroller>\r\n    <SortDrawer/>\r\n    <FilterDrawer/>\r\n  </div>\r\n}\r\n"]},"metadata":{},"sourceType":"module"}