{"ast":null,"code":"var __jsx = React.createElement;\nimport React, { useEffect } from 'react';\nimport PaymentIcon from '@material-ui/icons/Payment';\nimport { HeaderTitle } from '../../../../components/HeaderTitle/HeaderTitle';\nimport { modelFactory } from '../../../../ModelAction/modelUtil';\nimport { doc } from '../../../../graphqlTypes/doc';\nimport { dealLastNumber, formatDate, fpMergePre } from '../../../../tools/utils';\nimport { useStoreModel } from '../../../../ModelAction/useStore';\nimport styled from 'styled-components';\nimport { Button, IconButton } from '@material-ui/core';\nimport { ls } from '../../../../tools/dealKey';\nimport { grey } from '@material-ui/core/colors';\nimport { useRouter } from 'next/router';\nimport { showMessage } from '../../../../components/Message/Message';\nimport EditIcon from '@material-ui/icons/Edit';\nimport { DefaultBox } from '../myAddress/list';\nconst myCreditCardListModel = modelFactory('myCreditCardListModel', {\n  list: []\n}, {\n  getList: async (value, option) => {\n    const res = await option.query(doc.payCardListOneUser);\n    option.setData(fpMergePre({\n      list: res === null || res === void 0 ? void 0 : res.payCardListOneUser\n    }));\n  },\n  setDefault: async (value, option) => {\n    var _res$setUserPayCardDe;\n\n    const res = await option.mutate(doc.setUserPayCardDefault, {\n      data: {\n        id: value.id\n      }\n    });\n\n    if (res === null || res === void 0 ? void 0 : (_res$setUserPayCardDe = res.setUserPayCardDefault) === null || _res$setUserPayCardDe === void 0 ? void 0 : _res$setUserPayCardDe.id) {\n      showMessage('操作成功');\n    }\n\n    return res;\n  }\n});\nconst ListBox = styled.div.withConfig({\n  displayName: \"list__ListBox\",\n  componentId: \"sc-1b9q25g-0\"\n})([\"\"]);\nconst ListItem = styled.div.withConfig({\n  displayName: \"list__ListItem\",\n  componentId: \"sc-1b9q25g-1\"\n})([\"display:flex;height:80px;align-items:center;padding-left:20px;border-bottom:1px solid \", \";> svg{}> main{margin-left:10px;flex-grow:1;> footer{margin-top:4px;font-size:small;color:\", \";}}\"], grey[200], grey[400]);\nexport const MyCreditCardList = () => {\n  const router = useRouter();\n  const {\n    state: stateMCC,\n    actions: actionsMCC\n  } = useStoreModel(myCreditCardListModel);\n  useEffect(() => {\n    actionsMCC.getList();\n  }, []);\n  return __jsx(\"div\", null, __jsx(HeaderTitle, {\n    title: '我的信用卡'\n  }), __jsx(ListBox, null, stateMCC.list.map(value => __jsx(ListItem, {\n    key: `MyCreditCardList_${value.id}`\n  }, __jsx(PaymentIcon, {\n    fontSize: 'large'\n  }), __jsx(\"main\", null, __jsx(\"header\", null, ls('卡号'), \": \", dealLastNumber(value.number)), __jsx(\"footer\", null, ls('过期日'), \": \", formatDate(value === null || value === void 0 ? void 0 : value.expirationTime, 'MM/yy')), __jsx(\"footer\", null, value.name)), __jsx(\"aside\", null, value.isDefault && __jsx(DefaultBox, {\n    style: {\n      fontSize: '14px'\n    }\n  }, ls('默认')) || __jsx(Button, {\n    size: 'small',\n    color: 'secondary',\n    variant: 'outlined',\n    onClick: async () => {\n      var _await$actionsMCC$set, _await$actionsMCC$set2;\n\n      if ((_await$actionsMCC$set = await actionsMCC.setDefault(value)) === null || _await$actionsMCC$set === void 0 ? void 0 : (_await$actionsMCC$set2 = _await$actionsMCC$set.setUserPayCardDefault) === null || _await$actionsMCC$set2 === void 0 ? void 0 : _await$actionsMCC$set2.id) {\n        actionsMCC.getList();\n      }\n    }\n  }, ls('设为默认')), __jsx(IconButton, {\n    onClick: () => router.push('/m/me/myCreditCard/edit/[id]', `/m/me/myCreditCard/edit/${value.id}`)\n  }, __jsx(EditIcon, null)))))), __jsx(\"div\", {\n    style: {\n      padding: '0 20px',\n      marginTop: '20px'\n    }\n  }, __jsx(Button, {\n    fullWidth: true,\n    variant: 'contained',\n    color: 'secondary',\n    onClick: () => router.push('/m/me/myCreditCard/edit/[id]', `/m/me/myCreditCard/edit/0`)\n  }, ls('新增'))));\n};","map":null,"metadata":{},"sourceType":"module"}