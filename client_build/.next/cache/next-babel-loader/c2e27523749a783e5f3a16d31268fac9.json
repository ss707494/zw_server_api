{"ast":null,"code":"var __jsx = React.createElement;\nimport React from 'react';\nimport styled from 'styled-components';\nimport { Tab, Tabs } from '@material-ui/core';\nimport { useRouter } from 'next/router';\nimport { ls } from '../../../../tools/dealKey';\nimport { mpStyle } from '../../../../style/common';\nconst Box = styled.div.withConfig({\n  displayName: \"menuBox__Box\",\n  componentId: \"sc-114mpnh-0\"\n})([\"display:grid;grid-template-columns:120px 1fr;grid-gap:\", \";\"], mpStyle.spacePx.n);\nconst MenuLeftBox = styled.div.withConfig({\n  displayName: \"menuBox__MenuLeftBox\",\n  componentId: \"sc-114mpnh-1\"\n})([\"&&&{.MuiTab-root{padding:0;min-width:120px;.MuiTab-wrapper{align-items:flex-start;}}.Mui-selected{color:\", \";}.MuiTabs-indicator{display:none;}}\"], mpStyle.red);\nconst meMenuEnum = {\n  myInfo: 'myInfo',\n  orderHistory: 'orderHistory',\n  myAddress: 'myAddress',\n  myCreditCard: 'myCreditCard'\n};\nconst menuAct = {\n  orderHistory: ['orderHistory', 'orderDetail']\n};\n\nconst dealMeMenuRouterValue = (pathName, meMenuEnum) => {\n  var _Object$keys$find;\n\n  return (_Object$keys$find = Object.keys(meMenuEnum).find(value => {\n    var _menuAct$value;\n\n    return (menuAct === null || menuAct === void 0 ? void 0 : menuAct[value]) ? menuAct === null || menuAct === void 0 ? void 0 : (_menuAct$value = menuAct[value]) === null || _menuAct$value === void 0 ? void 0 : _menuAct$value.find(value1 => pathName.includes(value1)) : pathName.includes(value);\n  })) !== null && _Object$keys$find !== void 0 ? _Object$keys$find : '';\n};\n\nexport const MenuBox = ({\n  children\n}) => {\n  const router = useRouter();\n  const actMenu = dealMeMenuRouterValue(router.pathname, meMenuEnum);\n  return __jsx(Box, null, __jsx(MenuLeftBox, null, __jsx(Tabs, {\n    orientation: \"vertical\",\n    variant: \"scrollable\",\n    value: actMenu,\n    onChange: (event, value) => {\n      // if (menuAct[actMenu]) {\n      //   router.push(menuAct[actMenu].reduce((pre: string, val: string) => pre.replace(val, value), router.asPath))\n      // } else {\n      //   router.push(router.asPath.replace(actMenu, value))\n      // }\n      router.push(`/pc/me/${value}`);\n    }\n  }, [['我的达人证', meMenuEnum.myInfo], ['我的订单历史', meMenuEnum.orderHistory], ['我的地址', meMenuEnum.myAddress], ['支付方式', meMenuEnum.myCreditCard]].map(([label, value]) => __jsx(Tab, {\n    key: `MeMenuRouterValue${value}`,\n    label: ls(label),\n    value: value\n  })))), __jsx(\"main\", null, children));\n};","map":null,"metadata":{},"sourceType":"module"}