{"ast":null,"code":"var _jsxFileName = \"D:\\\\code\\\\zw\\\\zw_client_web\\\\utils\\\\components\\\\ProductItem\\\\ProductItem.tsx\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport styled from 'styled-components';\nimport ShoppingCartIcon from '@material-ui/icons/ShoppingCart';\nimport React, { useEffect } from 'react';\nimport { dealImgUrl } from '../../tools/img';\nimport { Card, IconButton } from '@material-ui/core';\nimport { dealMoney } from '../../tools/utils';\nimport { mpStyle } from '../../style/common';\nimport { modelFactory } from '../../ModelAction/modelUtil';\nimport { useStoreModel } from '../../ModelAction/useStore';\nimport { meModel } from '../../view/me/model';\nimport { doc } from '../../graphqlTypes/doc';\nimport { showMessage } from '../Message/Message';\nexport const productModel = modelFactory('productModel', {}, {\n  updateNumShopCart: async (value, option) => {\n    return await option.mutate(doc.updateNumShopCart, _objectSpread({\n      shopCart: value\n    }, value.number ? {\n      updateNum: value.number\n    } : {}));\n  },\n  updateShopCart: async (value, option) => {\n    return await option.mutate(doc.updateShopCart, {\n      shopCart: value\n    });\n  }\n});\nconst Box = styled(Card).withConfig({\n  displayName: \"ProductItem__Box\",\n  componentId: \"sc-1cef71f-0\"\n})([\"padding:10px 10px 0;> header{width:100%;height:40vw;> img{border-radius:8px;width:100%;height:40vw;}}> main{margin-top:10px;}> footer{margin-top:4px;display:flex;align-items:center;> main{flex-grow:1;}> .MuiButtonBase-root{padding:5px;}}\"]);\nexport const ProductPrice = ({\n  product\n}) => {\n  return __jsx(React.Fragment, null, __jsx(\"aside\", {\n    style: {\n      display: 'inline-block',\n      fontSize: '12px',\n      textDecoration: 'line-through'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 5\n    }\n  }, dealMoney(product === null || product === void 0 ? void 0 : product.priceMarket)), __jsx(\"main\", {\n    style: {\n      display: 'inline-block',\n      fontSize: '14px',\n      marginLeft: '6px',\n      color: mpStyle.red\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 5\n    }\n  }, dealMoney(product === null || product === void 0 ? void 0 : product.priceOut)));\n};\nexport const ProductItem = ({\n  product\n}) => {\n  var _product$img, _product$img$, _stateMe$user;\n\n  const {\n    state: stateMe,\n    actions: actionsMe\n  } = useStoreModel(meModel);\n  useEffect(() => {\n    if (!stateMe.user.id) {\n      actionsMe.getLoginUser();\n    }\n  }, []);\n  const {\n    actions: actionsPM\n  } = useStoreModel(productModel);\n  return __jsx(Box, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 10\n    }\n  }, __jsx(\"header\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 5\n    }\n  }, __jsx(\"img\", {\n    src: dealImgUrl(product === null || product === void 0 ? void 0 : (_product$img = product.img) === null || _product$img === void 0 ? void 0 : (_product$img$ = _product$img[0]) === null || _product$img$ === void 0 ? void 0 : _product$img$.url),\n    alt: \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 7\n    }\n  })), __jsx(\"main\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 5\n    }\n  }, product.name, product.weight, product.unit), __jsx(\"footer\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 5\n    }\n  }, __jsx(ProductPrice, {\n    product: product,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 7\n    }\n  }), ((_stateMe$user = stateMe.user) === null || _stateMe$user === void 0 ? void 0 : _stateMe$user.id) && __jsx(IconButton, {\n    onClick: async () => {\n      var _await$actionsPM$upda, _await$actionsPM$upda2;\n\n      if ((_await$actionsPM$upda = await actionsPM.updateNumShopCart({\n        product\n      })) === null || _await$actionsPM$upda === void 0 ? void 0 : (_await$actionsPM$upda2 = _await$actionsPM$upda.updateNumShopCart) === null || _await$actionsPM$upda2 === void 0 ? void 0 : _await$actionsPM$upda2.id) {\n        showMessage('操作成功');\n      }\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 28\n    }\n  }, __jsx(ShoppingCartIcon, {\n    color: 'secondary',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 9\n    }\n  }))));\n};","map":{"version":3,"sources":["D:/code/zw/zw_client_web/utils/components/ProductItem/ProductItem.tsx"],"names":["styled","ShoppingCartIcon","React","useEffect","dealImgUrl","Card","IconButton","dealMoney","mpStyle","modelFactory","useStoreModel","meModel","doc","showMessage","productModel","updateNumShopCart","value","option","mutate","shopCart","number","updateNum","updateShopCart","Box","ProductPrice","product","display","fontSize","textDecoration","priceMarket","marginLeft","color","red","priceOut","ProductItem","state","stateMe","actions","actionsMe","user","id","getLoginUser","actionsPM","img","url","name","weight","unit"],"mappings":";;;;;;;;;AAAA,OAAOA,MAAP,MAAmB,mBAAnB;AACA,OAAOC,gBAAP,MAA6B,iCAA7B;AACA,OAAOC,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AAEA,SAAQC,UAAR,QAAyB,iBAAzB;AACA,SAAQC,IAAR,EAAcC,UAAd,QAA+B,mBAA/B;AACA,SAAQC,SAAR,QAAwB,mBAAxB;AACA,SAAQC,OAAR,QAAsB,oBAAtB;AACA,SAAQC,YAAR,QAA2B,6BAA3B;AACA,SAAQC,aAAR,QAA4B,4BAA5B;AACA,SAAQC,OAAR,QAAsB,qBAAtB;AACA,SAAQC,GAAR,QAAkB,wBAAlB;AACA,SAAQC,WAAR,QAA0B,oBAA1B;AAEA,OAAO,MAAMC,YAAY,GAAGL,YAAY,CAAC,cAAD,EAAiB,EAAjB,EAAqB;AAC3DM,EAAAA,iBAAiB,EAAE,OAAOC,KAAP,EAAiCC,MAAjC,KAA4C;AAC7D,WAAO,MAAMA,MAAM,CAACC,MAAP,CAAcN,GAAG,CAACG,iBAAlB;AACXI,MAAAA,QAAQ,EAAEH;AADC,OAEPA,KAAK,CAACI,MAAN,GAAe;AACjBC,MAAAA,SAAS,EAAEL,KAAK,CAACI;AADA,KAAf,GAEA,EAJO,EAAb;AAMD,GAR0D;AAS3DE,EAAAA,cAAc,EAAE,OAAON,KAAP,EAAiCC,MAAjC,KAA4C;AAC1D,WAAO,MAAMA,MAAM,CAACC,MAAP,CAAcN,GAAG,CAACU,cAAlB,EAAkC;AAC7CH,MAAAA,QAAQ,EAAEH;AADmC,KAAlC,CAAb;AAGD;AAb0D,CAArB,CAAjC;AAgBP,MAAMO,GAAG,GAAGvB,MAAM,CAACK,IAAD,CAAT;AAAA;AAAA;AAAA,qPAAT;AA2BA,OAAO,MAAMmB,YAAY,GAAG,CAAC;AAACC,EAAAA;AAAD,CAAD,KAA6C;AACvE,SAAO,4BACL;AACI,IAAA,KAAK,EAAE;AAACC,MAAAA,OAAO,EAAE,cAAV;AAA0BC,MAAAA,QAAQ,EAAE,MAApC;AAA4CC,MAAAA,cAAc,EAAE;AAA5D,KADX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAEErB,SAAS,CAACkB,OAAD,aAACA,OAAD,uBAACA,OAAO,CAAEI,WAAV,CAFX,CADK,EAIL;AACI,IAAA,KAAK,EAAE;AAACH,MAAAA,OAAO,EAAE,cAAV;AAA0BC,MAAAA,QAAQ,EAAE,MAApC;AAA4CG,MAAAA,UAAU,EAAE,KAAxD;AAA+DC,MAAAA,KAAK,EAAEvB,OAAO,CAACwB;AAA9E,KADX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAEEzB,SAAS,CAACkB,OAAD,aAACA,OAAD,uBAACA,OAAO,CAAEQ,QAAV,CAFX,CAJK,CAAP;AAQD,CATM;AAWP,OAAO,MAAMC,WAAW,GAAG,CAAC;AAACT,EAAAA;AAAD,CAAD,KAAqC;AAAA;;AAC9D,QAAM;AAACU,IAAAA,KAAK,EAAEC,OAAR;AAAiBC,IAAAA,OAAO,EAAEC;AAA1B,MAAuC5B,aAAa,CAACC,OAAD,CAA1D;AACAR,EAAAA,SAAS,CAAC,MAAM;AACd,QAAI,CAACiC,OAAO,CAACG,IAAR,CAAaC,EAAlB,EAAsB;AACpBF,MAAAA,SAAS,CAACG,YAAV;AACD;AACF,GAJQ,EAIN,EAJM,CAAT;AAKA,QAAM;AAACJ,IAAAA,OAAO,EAAEK;AAAV,MAAuBhC,aAAa,CAACI,YAAD,CAA1C;AACA,SAAO,MAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAK,IAAA,GAAG,EAAEV,UAAU,CAACqB,OAAD,aAACA,OAAD,uCAACA,OAAO,CAAEkB,GAAV,kEAAC,aAAe,CAAf,CAAD,kDAAC,cAAmBC,GAApB,CAApB;AACK,IAAA,GAAG,EAAC,EADT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADK,EAKL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAOnB,OAAO,CAACoB,IAAf,EAAqBpB,OAAO,CAACqB,MAA7B,EAAqCrB,OAAO,CAACsB,IAA7C,CALK,EAML;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,YAAD;AAAc,IAAA,OAAO,EAAEtB,OAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAEG,kBAAAW,OAAO,CAACG,IAAR,gEAAcC,EAAd,KAAoB,MAAC,UAAD;AACjB,IAAA,OAAO,EAAE,YAAY;AAAA;;AACnB,mCAAK,MAAME,SAAS,CAAC3B,iBAAV,CAA4B;AACrCU,QAAAA;AADqC,OAA5B,CAAX,oFAAI,sBAECV,iBAFL,2DAAI,uBAEoByB,EAFxB,EAE4B;AAC1B3B,QAAAA,WAAW,CAAC,MAAD,CAAX;AACD;AACF,KAPgB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KASnB,MAAC,gBAAD;AAAkB,IAAA,KAAK,EAAE,WAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IATmB,CAFvB,CANK,CAAP;AAqBD,CA7BM","sourcesContent":["import styled from 'styled-components'\r\nimport ShoppingCartIcon from '@material-ui/icons/ShoppingCart'\r\nimport React, {useEffect} from 'react'\r\nimport {Maybe, Product, ShopCartItemInput} from '../../graphqlTypes/types'\r\nimport {dealImgUrl} from '../../tools/img'\r\nimport {Card, IconButton} from '@material-ui/core'\r\nimport {dealMoney} from '../../tools/utils'\r\nimport {mpStyle} from '../../style/common'\r\nimport {modelFactory} from '../../ModelAction/modelUtil'\r\nimport {useStoreModel} from '../../ModelAction/useStore'\r\nimport {meModel} from '../../view/me/model'\r\nimport {doc} from '../../graphqlTypes/doc'\r\nimport {showMessage} from '../Message/Message'\r\n\r\nexport const productModel = modelFactory('productModel', {}, {\r\n  updateNumShopCart: async (value: ShopCartItemInput, option) => {\r\n    return await option.mutate(doc.updateNumShopCart, {\r\n      shopCart: value,\r\n      ...(value.number ? {\r\n        updateNum: value.number,\r\n      } : {}),\r\n    })\r\n  },\r\n  updateShopCart: async (value: ShopCartItemInput, option) => {\r\n    return await option.mutate(doc.updateShopCart, {\r\n      shopCart: value,\r\n    })\r\n  },\r\n})\r\n\r\nconst Box = styled(Card)`\r\n  padding: 10px 10px 0;\r\n  > header {\r\n    width: 100%;\r\n    height: 40vw;\r\n    > img {\r\n      border-radius: 8px;\r\n      width: 100%;\r\n      height: 40vw;\r\n    }\r\n  }\r\n  > main {\r\n    margin-top: 10px;\r\n  }\r\n  > footer {\r\n    margin-top: 4px;\r\n    display: flex;\r\n    align-items: center;\r\n    > main {\r\n      flex-grow: 1;\r\n    }\r\n    > .MuiButtonBase-root {\r\n      padding: 5px;\r\n    }\r\n  }\r\n`\r\n\r\nexport const ProductPrice = ({product}: { product?: Maybe<Product> }) => {\r\n  return <>\r\n    <aside\r\n        style={{display: 'inline-block', fontSize: '12px', textDecoration: 'line-through'}}\r\n    >{dealMoney(product?.priceMarket)}</aside>\r\n    <main\r\n        style={{display: 'inline-block', fontSize: '14px', marginLeft: '6px', color: mpStyle.red}}\r\n    >{dealMoney(product?.priceOut)}</main>\r\n  </>\r\n}\r\n\r\nexport const ProductItem = ({product}: { product: Product }) => {\r\n  const {state: stateMe, actions: actionsMe} = useStoreModel(meModel)\r\n  useEffect(() => {\r\n    if (!stateMe.user.id) {\r\n      actionsMe.getLoginUser()\r\n    }\r\n  }, [])\r\n  const {actions: actionsPM} = useStoreModel(productModel)\r\n  return <Box>\r\n    <header>\r\n      <img src={dealImgUrl(product?.img?.[0]?.url)}\r\n           alt=\"\"/>\r\n    </header>\r\n    <main>{product.name}{product.weight}{product.unit}</main>\r\n    <footer>\r\n      <ProductPrice product={product}/>\r\n      {stateMe.user?.id && <IconButton\r\n          onClick={async () => {\r\n            if ((await actionsPM.updateNumShopCart({\r\n              product,\r\n            }))?.updateNumShopCart?.id) {\r\n              showMessage('操作成功')\r\n            }\r\n          }}\r\n      >\r\n        <ShoppingCartIcon color={'secondary'}/>\r\n      </IconButton>}\r\n    </footer>\r\n  </Box>\r\n}\r\n"]},"metadata":{},"sourceType":"module"}