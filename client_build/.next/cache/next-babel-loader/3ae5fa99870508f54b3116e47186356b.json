{"ast":null,"code":"var __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { useEffect } from 'react';\nimport { modelFactory } from '../../../ModelAction/modelUtil';\nimport styled from 'styled-components';\nimport { useStoreModel } from '../../../ModelAction/useStore';\nimport { dealMaybeNumber, dealMoney, dealUrlQuery, fpMerge, fpMergePre } from '../../../tools/utils';\nimport { dealGroupNumbers } from './[id]';\nimport { ShopCartProductBox } from '../cart/CartProduct';\nimport { dealImgUrl } from '../../../tools/img';\nimport { ProductPrice } from '../../../components/ProductItem/ProductItem';\nimport { IconButton, MenuItem, TextField } from '@material-ui/core';\nimport { ll } from '../../../tools/dealKey';\nimport { Space } from '../../../components/Box/Box';\nimport { getPickUpTypeName, PickUpTypeEnum } from '../../../ss_common/enum';\nimport ChevronRightIcon from '@material-ui/icons/ChevronRight';\nimport { AddressBox, CardBox, FooterFit, ShopTitle, ShopTotal, useOrderPageHooks } from '../cart/orderPage';\nimport { SelectAddress, selectAddressModel } from '../cart/components/SelectAddress';\nimport { SelectCard, selectCardModel } from '../cart/components/SelectCard';\nimport { ButtonLoad } from '../../../components/ButtonLoad/ButtonLoad';\nimport { mpStyle } from '../../../style/common';\nimport { showMessage } from '../../../components/Message/Message';\nimport { useRouter } from 'next/router';\nimport { HeaderTitle } from '../../../components/HeaderTitle/HeaderTitle';\nexport const groupOrderPageModel = modelFactory('orderPageModel', {\n  show: false\n}, {\n  open: (value, option) => {\n    option.setData(fpMergePre({\n      show: true\n    }));\n  },\n  close: (value, option) => {\n    option.setData(fpMergePre({\n      show: false\n    }));\n  }\n});\nconst OrderPageBox = styled.div.withConfig({\n  displayName: \"groupOrderPage__OrderPageBox\",\n  componentId: \"euzz55-0\"\n})([\"position:fixed;top:0;bottom:0;left:0;right:0;background:white;overflow-y:auto;> footer{position:fixed;bottom:0;box-sizing:border-box;box-shadow:\", \";width:100vw;text-align:right;}\"], mpStyle.shadow['1']);\nexport const GroupOrderPage = () => {\n  var _product$img, _product$img$, _stateShopCartModel$u;\n\n  const router = useRouter();\n  const {\n    state: stateOrderPageModel,\n    actions: actionsOrderPageModel\n  } = useStoreModel(groupOrderPageModel);\n  const {\n    actions: actionsSAM\n  } = useStoreModel(selectAddressModel);\n  const {\n    actions: actionsSelectCard\n  } = useStoreModel(selectCardModel);\n  const {\n    stateShopCartModel,\n    actionsShopCartModel,\n    addressData,\n    cardData,\n    productTotal,\n    transportationCosts,\n    actuallyPaid,\n    generateCoin,\n    stateGroupProduct,\n    actionsGroupProduct,\n    product\n  } = useOrderPageHooks();\n  useEffect(() => {\n    if (stateOrderPageModel.show) {\n      window.history.pushState(null, '', document.URL);\n      window.addEventListener('popstate', () => {\n        // 监听到返回事件，注意，只有触发了返回才会执行这个方法\n        actionsOrderPageModel.close();\n      }, false);\n    }\n\n    return () => {\n      window.removeEventListener('popstate', () => {\n        actionsOrderPageModel.close();\n      });\n    };\n  }, [actionsOrderPageModel, stateOrderPageModel.show]);\n  return stateOrderPageModel.show && __jsx(React.Fragment, null, __jsx(OrderPageBox, null, __jsx(HeaderTitle, {\n    title: '订单支付',\n    backCall: () => {\n      actionsOrderPageModel.close();\n      return true;\n    }\n  }), __jsx(ShopCartProductBox, {\n    style: {\n      padding: '20px'\n    }\n  }, __jsx(\"img\", {\n    src: dealImgUrl(product === null || product === void 0 ? void 0 : (_product$img = product.img) === null || _product$img === void 0 ? void 0 : (_product$img$ = _product$img[0]) === null || _product$img$ === void 0 ? void 0 : _product$img$.url),\n    alt: \"\"\n  }), __jsx(\"main\", null, product === null || product === void 0 ? void 0 : product.name, product === null || product === void 0 ? void 0 : product.weight, product === null || product === void 0 ? void 0 : product.unit), __jsx(\"section\", null, product === null || product === void 0 ? void 0 : product.remark), __jsx(\"footer\", null, __jsx(ProductPrice, {\n    priceOutTip: ll('基准价'),\n    product: product\n  }), __jsx(\"span\", null, dealGroupNumbers(product) * stateGroupProduct.selectNum, product.groupAmountUnitString, \"/\", stateGroupProduct.selectNum, ll('份')))), __jsx(TextField, {\n    style: {\n      margin: '16px',\n      width: 'calc(100vw - 32px)'\n    },\n    fullWidth: true,\n    label: ll('运送方式'),\n    select: true,\n    value: stateShopCartModel.form.pickUpType,\n    onChange: event => {\n      actionsShopCartModel.setForm(['pickUpType', event.target.value]);\n      actionsShopCartModel.setForm(['addressId', stateShopCartModel.initAddressId(fpMerge(stateShopCartModel, {\n        form: {\n          pickUpType: event.target.value\n        }\n      }))]);\n    }\n  }, __jsx(MenuItem, {\n    value: PickUpTypeEnum.Self\n  }, ll(getPickUpTypeName(PickUpTypeEnum.Self))), __jsx(MenuItem, {\n    value: PickUpTypeEnum.Delivery\n  }, ll(getPickUpTypeName(PickUpTypeEnum.Delivery)))), __jsx(AddressBox, null, __jsx(\"main\", null, __jsx(\"header\", null, `${addressData.combineAddress}`), __jsx(\"footer\", null, `${addressData.name} ${addressData.contactInformation}`)), __jsx(\"aside\", null, __jsx(IconButton, {\n    onClick: async () => {\n      const res = await actionsSAM.openClick();\n\n      if (res) {\n        actionsShopCartModel.setForm(['addressId', res]);\n      }\n    }\n  }, __jsx(ChevronRightIcon, null)))), __jsx(ShopTitle, null, __jsx(Space, {\n    w: 20\n  }), ll('付款方式')), __jsx(CardBox, null, __jsx(\"header\", null, cardData.name), __jsx(\"footer\", null, cardData.number), __jsx(\"aside\", null, __jsx(IconButton, {\n    onClick: async () => {\n      const res = await actionsSelectCard.openClick();\n\n      if (res) {\n        actionsShopCartModel.setForm(['paymentMethodCardId', res]);\n      }\n    }\n  }, __jsx(ChevronRightIcon, null)))), __jsx(SelectAddress, null), __jsx(SelectCard, null), __jsx(ShopTitle, null, __jsx(Space, {\n    w: 20\n  }), ll('使用达人币'), __jsx(Space, {\n    w: 16\n  }), __jsx(\"footer\", null, ll('当月可用余额'), dealMoney(stateShopCartModel.user.orderCoinCurrentMonth))), __jsx(\"div\", null, __jsx(Space, {\n    w: 20\n  }), __jsx(TextField, {\n    style: {\n      marginTop: '8px',\n      marginBottom: '24px'\n    },\n    label: ll(''),\n    value: stateShopCartModel.form.deductCoin,\n    onChange: e => {\n      actionsShopCartModel.setForm(['deductCoin', e.target.value]);\n    }\n  })), __jsx(ShopTotal, null, __jsx(\"header\", null, ll('购物车总计')), __jsx(\"footer\", null, dealMoney(productTotal))), __jsx(ShopTotal, null, __jsx(\"header\", null, ll('份数折扣')), __jsx(\"footer\", null, stateGroupProduct.numDiscount)), __jsx(ShopTotal, null, __jsx(\"header\", null, ll('成团折上折')), __jsx(\"footer\", null, stateGroupProduct.groupDiscount)), transportationCosts > 0 && __jsx(ShopTotal, null, __jsx(\"header\", null, ll('运费')), __jsx(\"footer\", null, dealMoney(transportationCosts))), __jsx(ShopTotal, null, __jsx(\"header\", null, ll('达人币抵扣')), __jsx(\"footer\", null, dealMoney(stateShopCartModel.form.deductCoin, '-'))), __jsx(ShopTotal, {\n    style: {\n      fontSize: '18px'\n    }\n  }, __jsx(\"header\", null, ll('订单总额')), __jsx(\"footer\", null, dealMoney(actuallyPaid))), __jsx(Space, {\n    h: 120\n  }), __jsx(FooterFit, null, __jsx(\"header\", null, ll('本次订单'), __jsx(\"span\", null, ll((_stateShopCartModel$u = stateShopCartModel.userLevelList.find(v => {\n    var _stateShopCartModel$u2;\n\n    return v.code === ((_stateShopCartModel$u2 = stateShopCartModel.user.userInfo) === null || _stateShopCartModel$u2 === void 0 ? void 0 : _stateShopCartModel$u2.userLevel);\n  })) === null || _stateShopCartModel$u === void 0 ? void 0 : _stateShopCartModel$u.name))), __jsx(\"footer\", null, ll('将获得下月使用达人币 '), __jsx(\"span\", null, dealMoney(generateCoin))), __jsx(\"aside\", null, __jsx(ButtonLoad, {\n    variant: 'contained',\n    color: 'secondary',\n    onClick: async () => {\n      var _stateShopCartModel$u3, _stateShopCartModel$u4, _res$saveGroupOrder;\n\n      if (dealMaybeNumber((_stateShopCartModel$u3 = stateShopCartModel.user) === null || _stateShopCartModel$u3 === void 0 ? void 0 : _stateShopCartModel$u3.orderCoinCurrentMonth) < dealMaybeNumber(stateShopCartModel.form.deductCoin)) {\n        showMessage(ll('达人币余额不足'));\n        return;\n      }\n\n      const res = await actionsGroupProduct.submit({\n        orderInfoItemInput: _objectSpread(_objectSpread({}, stateShopCartModel.form), {}, {\n          generateCoin,\n          actuallyPaid,\n          transportationCosts,\n          subtotal: productTotal,\n          currentUserLevel: (_stateShopCartModel$u4 = stateShopCartModel.user.userInfo) === null || _stateShopCartModel$u4 === void 0 ? void 0 : _stateShopCartModel$u4.userLevel,\n          rOrderProduct: [{\n            count: stateGroupProduct.selectNum,\n            productId: product === null || product === void 0 ? void 0 : product.id,\n            product\n          }]\n        })\n      });\n\n      if (res === null || res === void 0 ? void 0 : (_res$saveGroupOrder = res.saveGroupOrder) === null || _res$saveGroupOrder === void 0 ? void 0 : _res$saveGroupOrder.id) {\n        var _res$saveGroupOrder2;\n\n        showMessage('操作成功 将前往付款');\n\n        const _query = dealUrlQuery({\n          orderId: res === null || res === void 0 ? void 0 : (_res$saveGroupOrder2 = res.saveGroupOrder) === null || _res$saveGroupOrder2 === void 0 ? void 0 : _res$saveGroupOrder2.id\n        });\n\n        await router.replace(`/m/pay${_query}`, `/m/pay${_query}`);\n        actionsShopCartModel.clearData();\n        actionsShopCartModel.getList();\n        actionsGroupProduct.clearData();\n        actionsOrderPageModel.close();\n      }\n    }\n  }, ll('提交订单')))))) || null;\n};","map":null,"metadata":{},"sourceType":"module"}