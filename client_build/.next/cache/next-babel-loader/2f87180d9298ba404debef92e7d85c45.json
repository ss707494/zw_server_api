{"ast":null,"code":"var __jsx = React.createElement;\nimport React from 'react';\nimport AddIcon from '@material-ui/icons/Add';\nimport RemoveIcon from '@material-ui/icons/Remove';\nimport styled from 'styled-components';\nimport { dealImgUrl } from '../../tools/img';\nimport { grey } from '@material-ui/core/colors';\nimport { productModel, ProductPrice } from '../../components/ProductItem/ProductItem';\nimport { Button, IconButton } from '@material-ui/core';\nimport { useStoreModel } from '../../ModelAction/useStore';\nimport { shopCartModel } from './index';\nimport { ls } from '../../tools/dealKey';\nconst Box = styled.div.withConfig({\n  displayName: \"CartProduct__Box\",\n  componentId: \"sc-1cjcsc1-0\"\n})([\"margin-bottom:16px;display:grid;grid-template-columns:66px 1fr;grid-template-rows:repeat(2,22px) 26px;grid-column-gap:10px;> img{grid-area:1/1/4/2;width:100%;height:100%;}> section{color:\", \"}> footer{display:flex;align-items:center;> main{flex-grow:1;}}\"], grey[600]);\nexport const CartProduct = ({\n  shopCart\n}) => {\n  var _shopCart$product, _shopCart$product$img, _shopCart$product$img2, _shopCart$number;\n\n  const {\n    actions: actionsSCM\n  } = useStoreModel(shopCartModel);\n  const {\n    actions: actionsPM\n  } = useStoreModel(productModel);\n  const product = shopCart.product;\n  return __jsx(Box, null, __jsx(\"img\", {\n    src: dealImgUrl((_shopCart$product = shopCart.product) === null || _shopCart$product === void 0 ? void 0 : (_shopCart$product$img = _shopCart$product.img) === null || _shopCart$product$img === void 0 ? void 0 : (_shopCart$product$img2 = _shopCart$product$img[0]) === null || _shopCart$product$img2 === void 0 ? void 0 : _shopCart$product$img2.url),\n    alt: \"\"\n  }), __jsx(\"main\", null, product === null || product === void 0 ? void 0 : product.name, product === null || product === void 0 ? void 0 : product.weight, product === null || product === void 0 ? void 0 : product.unit), __jsx(\"section\", null, product === null || product === void 0 ? void 0 : product.remark), __jsx(\"footer\", null, __jsx(ProductPrice, {\n    product: product\n  }), __jsx(Button, {\n    size: 'small',\n    variant: 'outlined'\n  }, ls('下次购买')), ((_shopCart$number = shopCart === null || shopCart === void 0 ? void 0 : shopCart.number) !== null && _shopCart$number !== void 0 ? _shopCart$number : 0) > 1 && __jsx(IconButton, {\n    size: 'small',\n    onClick: async () => {\n      await actionsPM.updateNumShopCart({\n        product,\n        number: -1\n      });\n      actionsSCM.getList();\n    }\n  }, __jsx(RemoveIcon, null)), shopCart.number, __jsx(IconButton, {\n    size: 'small',\n    onClick: async () => {\n      await actionsPM.updateNumShopCart({\n        product\n      });\n      actionsSCM.getList();\n    }\n  }, __jsx(AddIcon, null))));\n};","map":null,"metadata":{},"sourceType":"module"}