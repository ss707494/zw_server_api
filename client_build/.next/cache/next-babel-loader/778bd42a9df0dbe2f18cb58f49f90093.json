{"ast":null,"code":"var _jsxFileName = \"D:\\\\code\\\\zw\\\\zw_client_web\\\\utils\\\\view\\\\me\\\\myCreditCard\\\\edit\\\\[id].tsx\";\nvar __jsx = React.createElement;\nimport React from 'react';\nimport { modelFactory } from '../../../../ModelAction/modelUtil';\nimport { useStoreModel } from '../../../../ModelAction/useStore';\nimport { fpMergePre } from '../../../../tools/utils';\nimport { SigninInput } from '../../../register';\nimport { FieldContain } from '../../myInfo/updatePassword';\nimport { HeaderTitle } from '../../../../components/HeaderTitle/HeaderTitle';\nimport { setForm } from '../../../../tools/commonAction';\nimport { ls } from '../../../../tools/dealKey';\nimport { useRouter } from 'next/router';\nimport { ButtonLoad } from '../../../../components/ButtonLoad/ButtonLoad';\nexport const myCreditCardEditModel = modelFactory('myCreditCardEditModel', {\n  form: {\n    number: '',\n    code: '',\n    name: '',\n    userName: '',\n    addressDetail: '',\n    zipCode: '',\n    city: '',\n    contact: ''\n  }\n}, {\n  setForm: setForm,\n  clearForm: (value, option) => option.setData(fpMergePre({\n    form: {\n      number: '',\n      code: '',\n      name: '',\n      userName: '',\n      addressDetail: '',\n      zipCode: '',\n      city: '',\n      contact: ''\n    }\n  })),\n  submit: (value, option) => {\n    const form = option.data.form;\n    console.log(form);\n  }\n});\nexport const MyCreditCardEdit = () => {\n  var _router$query$id, _router$query;\n\n  const router = useRouter();\n  const id = (_router$query$id = (_router$query = router.query) === null || _router$query === void 0 ? void 0 : _router$query.id) !== null && _router$query$id !== void 0 ? _router$query$id : '';\n  console.log(!!id);\n  const {\n    state: stateMCCE,\n    actions: actionsMCCE\n  } = useStoreModel(myCreditCardEditModel);\n  return __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 10\n    }\n  }, __jsx(HeaderTitle, {\n    title: `${id === '0' ? '新增' : '编辑'}信用卡`,\n    backCall: actionsMCCE.clearForm,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 5\n    }\n  }), __jsx(FieldContain, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 5\n    }\n  }, [['信用卡号', 'number'], ['四位号码', 'code'], ['姓名', 'userName'], ['详细地址', 'addressDetail'], ['邮政编码', 'zipCode'], ['城市', 'city'], ['联系方式', 'contact']].map(v => __jsx(SigninInput, {\n    key: `MyCreditCardEdit_${v[1]}`,\n    label: ls(v[0]),\n    value: stateMCCE.form[v[1]],\n    onChange: event => actionsMCCE.setForm([v[1], event.target.value]),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 18\n    }\n  })), __jsx(\"section\", {\n    style: {\n      width: '100%',\n      height: '20px'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }\n  }), __jsx(ButtonLoad, {\n    fullWidth: true,\n    variant: 'contained',\n    color: 'secondary',\n    onClick: () => {\n      actionsMCCE.submit();\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }\n  }, \"\\u4FDD\\u5B58\")));\n};","map":{"version":3,"sources":["D:/code/zw/zw_client_web/utils/view/me/myCreditCard/edit/[id].tsx"],"names":["React","modelFactory","useStoreModel","fpMergePre","SigninInput","FieldContain","HeaderTitle","setForm","ls","useRouter","ButtonLoad","myCreditCardEditModel","form","number","code","name","userName","addressDetail","zipCode","city","contact","clearForm","value","option","setData","submit","data","console","log","MyCreditCardEdit","router","id","query","state","stateMCCE","actions","actionsMCCE","map","v","event","target","width","height"],"mappings":"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","sourcesContent":["import React from 'react'\r\nimport {modelFactory} from '../../../../ModelAction/modelUtil'\r\nimport {useStoreModel} from '../../../../ModelAction/useStore'\r\nimport {fpMergePre} from '../../../../tools/utils'\r\nimport {SigninInput} from '../../../register'\r\nimport {FieldContain} from '../../myInfo/updatePassword'\r\nimport {HeaderTitle} from '../../../../components/HeaderTitle/HeaderTitle'\r\nimport {UserPayCard} from '../../../../graphqlTypes/types'\r\nimport {setForm} from '../../../../tools/commonAction'\r\nimport {ls} from '../../../../tools/dealKey'\r\nimport {useRouter} from 'next/router'\r\nimport {Button} from '@material-ui/core'\r\nimport {ButtonLoad} from '../../../../components/ButtonLoad/ButtonLoad'\r\n\r\nexport const myCreditCardEditModel = modelFactory('myCreditCardEditModel', {\r\n  form: {\r\n    number: '',\r\n    code: '',\r\n    name: '',\r\n    userName: '',\r\n    addressDetail: '',\r\n    zipCode: '',\r\n    city: '',\r\n    contact: '',\r\n  } as UserPayCard,\r\n}, {\r\n  setForm: setForm,\r\n  clearForm: (value, option) => option.setData(fpMergePre({\r\n    form: {\r\n      number: '',\r\n      code: '',\r\n      name: '',\r\n      userName: '',\r\n      addressDetail: '',\r\n      zipCode: '',\r\n      city: '',\r\n      contact: '',\r\n    },\r\n  })),\r\n  submit: (value, option) => {\r\n    const form = option.data.form\r\n    console.log(form)\r\n  },\r\n})\r\n\r\nexport const MyCreditCardEdit = () => {\r\n  const router = useRouter()\r\n  const id = router.query?.id ?? ''\r\n  console.log(!!id)\r\n  const {state: stateMCCE, actions: actionsMCCE} = useStoreModel(myCreditCardEditModel)\r\n\r\n  return <div>\r\n    <HeaderTitle\r\n        title={`${id === '0' ? '新增' : '编辑'}信用卡`}\r\n        backCall={actionsMCCE.clearForm}\r\n    />\r\n    <FieldContain>\r\n      {[\r\n        ['信用卡号', 'number'],\r\n        ['四位号码', 'code'],\r\n        ['姓名', 'userName'],\r\n        ['详细地址', 'addressDetail'],\r\n        ['邮政编码', 'zipCode'],\r\n        ['城市', 'city'],\r\n        ['联系方式', 'contact'],\r\n      ].map(v => <SigninInput\r\n          key={`MyCreditCardEdit_${v[1]}`}\r\n          label={ls(v[0])}\r\n          value={stateMCCE.form[v[1] as keyof UserPayCard]}\r\n          onChange={event => actionsMCCE.setForm([v[1], event.target.value])}\r\n      />)}\r\n      <section style={{width: '100%', height: '20px'}}/>\r\n      <ButtonLoad\r\n          fullWidth\r\n          variant={'contained'}\r\n          color={'secondary'}\r\n          onClick={() => {\r\n            actionsMCCE.submit()\r\n          }}\r\n      >\r\n        保存\r\n      </ButtonLoad>\r\n    </FieldContain>\r\n  </div>\r\n}\r\n"]},"metadata":{},"sourceType":"module"}