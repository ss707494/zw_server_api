{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\n\nvar _this = this,\n    _jsxFileName = \"D:\\\\code\\\\zw\\\\zw_client_web\\\\utils\\\\view\\\\groupProduct\\\\[id].tsx\",\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\nimport React, { useEffect } from 'react';\nimport { useRouter } from 'next/router';\nimport { modelFactory } from '../../ModelAction/modelUtil';\nimport { doc } from '../../graphqlTypes/doc';\nimport { useStoreModel } from '../../ModelAction/useStore';\nexport var groupProductModel = modelFactory('groupProductModel', {\n  product: {}\n}, {\n  getData: function () {\n    var _getData = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(value, option) {\n      var res;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return option.query(doc.productListByIds, {\n                ids: [value]\n              });\n\n            case 2:\n              res = _context.sent;\n              console.log(res);\n\n            case 4:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    function getData(_x, _x2) {\n      return _getData.apply(this, arguments);\n    }\n\n    return getData;\n  }()\n});\nexport var GroupProduct = function GroupProduct() {\n  _s();\n\n  var _ref, _router$query;\n\n  var router = useRouter();\n  var id = (_ref = (_router$query = router.query) === null || _router$query === void 0 ? void 0 : _router$query.id) !== null && _ref !== void 0 ? _ref : '';\n\n  var _useStoreModel = useStoreModel(groupProductModel),\n      actionsGroupProduct = _useStoreModel.actions,\n      stateGroupProduct = _useStoreModel.state;\n\n  useEffect(function () {\n    actionsGroupProduct.getData(id);\n  }, [id]);\n  return __jsx(\"div\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 10\n    }\n  }, id, \"groupProduct\");\n};\n\n_s(GroupProduct, \"gQ8JdzelDC5ZvAAmPqA/NqGTkI4=\", false, function () {\n  return [useRouter, useStoreModel];\n});\n\n_c = GroupProduct;\n\nvar _c;\n\n$RefreshReg$(_c, \"GroupProduct\");","map":{"version":3,"sources":["D:/code/zw/zw_client_web/utils/view/groupProduct/[id].tsx"],"names":["React","useEffect","useRouter","modelFactory","doc","useStoreModel","groupProductModel","product","getData","value","option","query","productListByIds","ids","res","console","log","GroupProduct","router","id","actionsGroupProduct","actions","stateGroupProduct","state"],"mappings":";;;;;;;;AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,SAAQC,SAAR,QAAwB,aAAxB;AACA,SAAQC,YAAR,QAA2B,6BAA3B;AAEA,SAAQC,GAAR,QAAkB,wBAAlB;AACA,SAAQC,aAAR,QAA4B,4BAA5B;AAEA,OAAO,IAAMC,iBAAiB,GAAGH,YAAY,CAAC,mBAAD,EAAsB;AACjEI,EAAAA,OAAO,EAAE;AADwD,CAAtB,EAE1C;AACDC,EAAAA,OAAO;AAAA,4EAAE,iBAAOC,KAAP,EAAsBC,MAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBACWA,MAAM,CAACC,KAAP,CAAaP,GAAG,CAACQ,gBAAjB,EAAmC;AACnDC,gBAAAA,GAAG,EAAE,CAACJ,KAAD;AAD8C,eAAnC,CADX;;AAAA;AACDK,cAAAA,GADC;AAIPC,cAAAA,OAAO,CAACC,GAAR,CAAYF,GAAZ;;AAJO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAF;;AAAA;AAAA;AAAA;;AAAA;AAAA;AADN,CAF0C,CAAtC;AAYP,OAAO,IAAMG,YAAY,GAAG,SAAfA,YAAe,GAAM;AAAA;;AAAA;;AAChC,MAAMC,MAAM,GAAGhB,SAAS,EAAxB;AACA,MAAMiB,EAAE,4BAAID,MAAM,CAACP,KAAX,kDAAI,cAAcQ,EAAlB,uCAAmC,EAA3C;;AAFgC,uBAGiCd,aAAa,CAACC,iBAAD,CAH9C;AAAA,MAGhBc,mBAHgB,kBAGzBC,OAHyB;AAAA,MAGYC,iBAHZ,kBAGKC,KAHL;;AAIhCtB,EAAAA,SAAS,CAAC,YAAM;AACdmB,IAAAA,mBAAmB,CAACZ,OAApB,CAA4BW,EAA5B;AACD,GAFQ,EAEN,CAACA,EAAD,CAFM,CAAT;AAIA,SAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACJA,EADI,iBAAP;AAID,CAZM;;GAAMF,Y;UACIf,S,EAEkDG,a;;;KAHtDY,Y","sourcesContent":["import React, {useEffect} from 'react'\r\nimport {useRouter} from 'next/router'\r\nimport {modelFactory} from '../../ModelAction/modelUtil'\r\nimport {Product} from '../../graphqlTypes/types'\r\nimport {doc} from '../../graphqlTypes/doc'\r\nimport {useStoreModel} from '../../ModelAction/useStore'\r\n\r\nexport const groupProductModel = modelFactory('groupProductModel', {\r\n  product: {} as Product,\r\n}, {\r\n  getData: async (value: string, option) => {\r\n    const res = await option.query(doc.productListByIds, {\r\n      ids: [value]\r\n    })\r\n    console.log(res)\r\n  },\r\n\r\n})\r\n\r\nexport const GroupProduct = () => {\r\n  const router = useRouter()\r\n  const id = (router.query?.id as string) ?? ''\r\n  const {actions: actionsGroupProduct, state: stateGroupProduct} = useStoreModel(groupProductModel)\r\n  useEffect(() => {\r\n    actionsGroupProduct.getData(id)\r\n  }, [id])\r\n\r\n  return <div>\r\n    {id}\r\n    groupProduct\r\n  </div>\r\n}\r\n"]},"metadata":{},"sourceType":"module"}