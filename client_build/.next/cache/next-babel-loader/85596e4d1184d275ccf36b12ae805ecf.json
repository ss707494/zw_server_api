{"ast":null,"code":"var _jsxFileName = \"D:\\\\code\\\\zw\\\\zw_client_web\\\\utils\\\\view\\\\productList\\\\[id].tsx\";\nvar __jsx = React.createElement;\nimport React, { useEffect } from 'react';\nimport { modelFactory } from '../../ModelAction/modelUtil';\nimport { useRouter } from 'next/router';\nimport { fpMergePre } from '../../tools/utils';\nimport { doc } from '../../graphqlTypes/doc';\nimport { useStoreModel } from '../../ModelAction/useStore';\nexport const productListModel = modelFactory('productListModel', {\n  category: {}\n}, {\n  getCategory: async (value, option) => {\n    var _res$oneCategory;\n\n    const res = await option.query(doc.oneCategory, {\n      data: value\n    });\n    option.setData(fpMergePre({\n      category: (_res$oneCategory = res === null || res === void 0 ? void 0 : res.oneCategory) !== null && _res$oneCategory !== void 0 ? _res$oneCategory : {}\n    }));\n  },\n  getData: async (value, option) => {}\n});\nexport const ProductList = () => {\n  var _ref, _router$query;\n\n  const router = useRouter();\n  const id = (_ref = (_router$query = router.query) === null || _router$query === void 0 ? void 0 : _router$query.id) !== null && _ref !== void 0 ? _ref : '';\n  const {\n    actions: actionsPLM\n  } = useStoreModel(productListModel);\n  useEffect(() => {\n    if (!!id) {\n      actionsPLM.getCategory();\n    }\n  }, [id]);\n  return __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 10\n    }\n  }, \"productList\");\n};","map":{"version":3,"sources":["D:/code/zw/zw_client_web/utils/view/productList/[id].tsx"],"names":["React","useEffect","modelFactory","useRouter","fpMergePre","doc","useStoreModel","productListModel","category","getCategory","value","option","res","query","oneCategory","data","setData","getData","ProductList","router","id","actions","actionsPLM"],"mappings":";;AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,SAAQC,YAAR,QAA2B,6BAA3B;AAEA,SAAQC,SAAR,QAAwB,aAAxB;AACA,SAAQC,UAAR,QAAyB,mBAAzB;AACA,SAAQC,GAAR,QAAkB,wBAAlB;AACA,SAAQC,aAAR,QAA4B,4BAA5B;AAEA,OAAO,MAAMC,gBAAgB,GAAGL,YAAY,CAAC,kBAAD,EAAqB;AAC/DM,EAAAA,QAAQ,EAAE;AADqD,CAArB,EAEzC;AACDC,EAAAA,WAAW,EAAE,OAAOC,KAAP,EAAiCC,MAAjC,KAA4C;AAAA;;AACvD,UAAMC,GAAG,GAAG,MAAMD,MAAM,CAACE,KAAP,CAAaR,GAAG,CAACS,WAAjB,EAA8B;AAACC,MAAAA,IAAI,EAAEL;AAAP,KAA9B,CAAlB;AACAC,IAAAA,MAAM,CAACK,OAAP,CAAeZ,UAAU,CAAC;AACxBI,MAAAA,QAAQ,sBAAEI,GAAF,aAAEA,GAAF,uBAAEA,GAAG,CAAEE,WAAP,+DAAsB;AADN,KAAD,CAAzB;AAGD,GANA;AAODG,EAAAA,OAAO,EAAE,OAAOP,KAAP,EAAcC,MAAd,KAAyB,CACjC;AARA,CAFyC,CAArC;AAcP,OAAO,MAAMO,WAAW,GAAG,MAAM;AAAA;;AAC/B,QAAMC,MAAM,GAAGhB,SAAS,EAAxB;AACA,QAAMiB,EAAE,4BAAID,MAAM,CAACN,KAAX,kDAAI,cAAcO,EAAlB,uCAAmC,EAA3C;AACA,QAAM;AAACC,IAAAA,OAAO,EAAEC;AAAV,MAAwBhB,aAAa,CAACC,gBAAD,CAA3C;AAEAN,EAAAA,SAAS,CAAC,MAAM;AACd,QAAI,CAAC,CAACmB,EAAN,EAAU;AACRE,MAAAA,UAAU,CAACb,WAAX;AACD;AACF,GAJQ,EAIN,CAACW,EAAD,CAJM,CAAT;AAMA,SAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAAP;AAGD,CAdM","sourcesContent":["import React, {useEffect} from 'react'\r\nimport {modelFactory} from '../../ModelAction/modelUtil'\r\nimport {Category, CategoryItemInput} from '../../graphqlTypes/types'\r\nimport {useRouter} from 'next/router'\r\nimport {fpMergePre} from '../../tools/utils'\r\nimport {doc} from '../../graphqlTypes/doc'\r\nimport {useStoreModel} from '../../ModelAction/useStore'\r\n\r\nexport const productListModel = modelFactory('productListModel', {\r\n  category: {} as Category,\r\n}, {\r\n  getCategory: async (value: CategoryItemInput, option) => {\r\n    const res = await option.query(doc.oneCategory, {data: value})\r\n    option.setData(fpMergePre({\r\n      category: res?.oneCategory ?? {},\r\n    }))\r\n  },\r\n  getData: async (value, option) => {\r\n  },\r\n\r\n})\r\n\r\nexport const ProductList = () => {\r\n  const router = useRouter()\r\n  const id = (router.query?.id as string) ?? ''\r\n  const {actions: actionsPLM} = useStoreModel(productListModel)\r\n\r\n  useEffect(() => {\r\n    if (!!id) {\r\n      actionsPLM.getCategory()\r\n    }\r\n  }, [id])\r\n\r\n  return <div>\r\n    productList\r\n  </div>\r\n}\r\n"]},"metadata":{},"sourceType":"module"}