{"ast":null,"code":"var __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { useEffect } from 'react';\nimport { modelFactory } from '../../../../../ModelAction/modelUtil';\nimport { doc } from '../../../../../graphqlTypes/doc';\nimport { fpMergePre } from '../../../../../tools/utils';\nimport { useStoreModel } from '../../../../../ModelAction/useStore';\nimport { ProductItem } from '../../../../../components/ProductItem/ProductItem';\nimport { DictTypeEnum } from '../../../../../ss_common/enum';\nimport { ls } from '../../../../../tools/dealKey';\nimport styled from 'styled-components';\nimport { dealImgUrl } from '../../../../../tools/img';\nimport { BScroller } from '../../../../../components/BScroll/BScroller';\nconst themeSelectionModel = modelFactory('themeSelectionModel', {\n  themeSelectionData: [],\n  productListForTheme: {}\n}, {\n  getData: async (value, option) => {\n    var _res$getDataConfig$va, _res$getDataConfig, _res$getDataConfig$va2;\n\n    const res = await option.query(doc.getDataConfig, {\n      data: {\n        type: DictTypeEnum.PromotionThemeSelect\n      }\n    });\n    const themeList = (_res$getDataConfig$va = res === null || res === void 0 ? void 0 : (_res$getDataConfig = res.getDataConfig) === null || _res$getDataConfig === void 0 ? void 0 : (_res$getDataConfig$va2 = _res$getDataConfig.value) === null || _res$getDataConfig$va2 === void 0 ? void 0 : _res$getDataConfig$va2.list) !== null && _res$getDataConfig$va !== void 0 ? _res$getDataConfig$va : [];\n    const productRes = await option.query(doc.productListByIds, {\n      ids: themeList.reduce((pre, cur) => {\n        var _cur$selectProductLis;\n\n        return [...pre, ...((_cur$selectProductLis = cur === null || cur === void 0 ? void 0 : cur.selectProductList) !== null && _cur$selectProductLis !== void 0 ? _cur$selectProductLis : [])];\n      }, [])\n    });\n    option.setData(fpMergePre({\n      themeSelectionData: themeList,\n      productListForTheme: themeList.reduce((pre, cur) => {\n        var _cur$selectProductLis2;\n\n        return _objectSpread(_objectSpread({}, pre), {}, {\n          [cur.id]: cur === null || cur === void 0 ? void 0 : (_cur$selectProductLis2 = cur.selectProductList) === null || _cur$selectProductLis2 === void 0 ? void 0 : _cur$selectProductLis2.map(id => {\n            var _productRes$productLi, _productRes$productLi2, _productRes$productLi3;\n\n            return (_productRes$productLi = productRes === null || productRes === void 0 ? void 0 : (_productRes$productLi2 = productRes.productListByIds) === null || _productRes$productLi2 === void 0 ? void 0 : (_productRes$productLi3 = _productRes$productLi2.list) === null || _productRes$productLi3 === void 0 ? void 0 : _productRes$productLi3.find(v1 => (v1 === null || v1 === void 0 ? void 0 : v1.id) === id)) !== null && _productRes$productLi !== void 0 ? _productRes$productLi : null;\n          }).filter(v => v)\n        });\n      }, {})\n    }));\n  }\n});\nconst Title = styled.div.withConfig({\n  displayName: \"ThemeSelection__Title\",\n  componentId: \"sc-11cd74n-0\"\n})([\"font-size:18px;font-weight:bold;padding-left:20px;\"]);\nconst Theme = styled.div.withConfig({\n  displayName: \"ThemeSelection__Theme\",\n  componentId: \"sc-11cd74n-1\"\n})([\"width:100vw;position:relative;left:-3.125vw;margin-top:16px;> img{width:100vw;height:30vw;}> main,aside{color:white;text-shadow:0.1em 0.1em 0.2em black;position:absolute;}> main{top:8vw;left:20px;font-size:20px;font-weight:bold;}> aside{top:16vw;left:20px;font-size:16px;}\"]);\nconst ProductList = styled.div.withConfig({\n  displayName: \"ThemeSelection__ProductList\",\n  componentId: \"sc-11cd74n-2\"\n})([\"white-space:nowrap;display:inline-block;> *{display:inline-block;margin:8px 16px 8px 0;width:35vw;}\"]);\nexport const ThemeSelection = () => {\n  var _statePromotionFlashS;\n\n  const {\n    state: statePromotionFlashSale,\n    actions: actionsPromotionFlashSale\n  } = useStoreModel(themeSelectionModel);\n  useEffect(() => {\n    actionsPromotionFlashSale.getData();\n  }, []);\n  return __jsx(\"div\", null, __jsx(Title, null, ls('主题甄选')), (_statePromotionFlashS = statePromotionFlashSale.themeSelectionData) === null || _statePromotionFlashS === void 0 ? void 0 : _statePromotionFlashS.map(v => {\n    var _statePromotionFlashS2;\n\n    return __jsx(React.Fragment, {\n      key: `themeSelectionDataImg${v.id}`\n    }, __jsx(Theme, null, __jsx(\"img\", {\n      src: dealImgUrl(v.imgUrl),\n      alt: ''\n    }), __jsx(\"main\", null, v.title), __jsx(\"aside\", null, v.remark)), __jsx(BScroller, {\n      isX: true,\n      boxWidth: 'calc(100vw - 20px)',\n      boxHeight: 'auto'\n    }, __jsx(ProductList, null, (_statePromotionFlashS2 = statePromotionFlashSale.productListForTheme[v.id]) === null || _statePromotionFlashS2 === void 0 ? void 0 : _statePromotionFlashS2.map(v => __jsx(ProductItem, {\n      key: `statePromotionFlashSaleProductItem_${v.id}`,\n      product: v\n    })))));\n  }));\n};","map":null,"metadata":{},"sourceType":"module"}