{"ast":null,"code":"var _jsxFileName = \"D:\\\\code\\\\zw\\\\zw_client_web\\\\utils\\\\view\\\\groupProduct\\\\[id].tsx\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { useEffect } from 'react';\nimport { useRouter } from 'next/router';\nimport { modelFactory } from '../../ModelAction/modelUtil';\nimport { doc } from '../../graphqlTypes/doc';\nimport { useStoreModel } from '../../ModelAction/useStore';\nimport { fpMergePre } from '../../tools/utils';\nimport CusCarousel from '../../components/Swipe/Swipe';\nimport { HeaderTitle } from '../../components/HeaderTitle/HeaderTitle';\nexport const groupProductModel = modelFactory('groupProductModel', {\n  product: {}\n}, {\n  getData: async (value, option) => {\n    var _res$productListByIds, _res$productListByIds2;\n\n    const res = await option.query(doc.productListByIds, {\n      ids: [value]\n    });\n    option.setData(fpMergePre({\n      product: (_res$productListByIds = res === null || res === void 0 ? void 0 : (_res$productListByIds2 = res.productListByIds) === null || _res$productListByIds2 === void 0 ? void 0 : _res$productListByIds2.list[0]) !== null && _res$productListByIds !== void 0 ? _res$productListByIds : {}\n    }));\n  }\n});\nexport const GroupProduct = () => {\n  var _ref, _router$query, _stateGroupProduct$pr, _stateGroupProduct$pr2;\n\n  const router = useRouter();\n  const id = (_ref = (_router$query = router.query) === null || _router$query === void 0 ? void 0 : _router$query.id) !== null && _ref !== void 0 ? _ref : '';\n  const {\n    actions: actionsGroupProduct,\n    state: stateGroupProduct\n  } = useStoreModel(groupProductModel);\n  useEffect(() => {\n    actionsGroupProduct.getData(id);\n  }, [id]);\n  return __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 10\n    }\n  }, __jsx(HeaderTitle, {\n    title: '产品详情',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 5\n    }\n  }), __jsx(CusCarousel, {\n    height: '160px',\n    dataList: (_stateGroupProduct$pr = stateGroupProduct.product) === null || _stateGroupProduct$pr === void 0 ? void 0 : (_stateGroupProduct$pr2 = _stateGroupProduct$pr.img) === null || _stateGroupProduct$pr2 === void 0 ? void 0 : _stateGroupProduct$pr2.map(v => _objectSpread(_objectSpread({}, v), {}, {\n      imgUrl: v === null || v === void 0 ? void 0 : v.url\n    })),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 5\n    }\n  }), id, \"groupProduct\");\n};","map":{"version":3,"sources":["D:/code/zw/zw_client_web/utils/view/groupProduct/[id].tsx"],"names":["React","useEffect","useRouter","modelFactory","doc","useStoreModel","fpMergePre","CusCarousel","HeaderTitle","groupProductModel","product","getData","value","option","res","query","productListByIds","ids","setData","list","GroupProduct","router","id","actions","actionsGroupProduct","state","stateGroupProduct","img","map","v","imgUrl","url"],"mappings":";;;;;;;;;AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,SAAQC,SAAR,QAAwB,aAAxB;AACA,SAAQC,YAAR,QAA2B,6BAA3B;AAEA,SAAQC,GAAR,QAAkB,wBAAlB;AACA,SAAQC,aAAR,QAA4B,4BAA5B;AACA,SAAQC,UAAR,QAAyB,mBAAzB;AACA,OAAOC,WAAP,MAAwB,8BAAxB;AACA,SAAQC,WAAR,QAA0B,0CAA1B;AAEA,OAAO,MAAMC,iBAAiB,GAAGN,YAAY,CAAC,mBAAD,EAAsB;AACjEO,EAAAA,OAAO,EAAE;AADwD,CAAtB,EAE1C;AACDC,EAAAA,OAAO,EAAE,OAAOC,KAAP,EAAsBC,MAAtB,KAAiC;AAAA;;AACxC,UAAMC,GAAG,GAAG,MAAMD,MAAM,CAACE,KAAP,CAAaX,GAAG,CAACY,gBAAjB,EAAmC;AACnDC,MAAAA,GAAG,EAAE,CAACL,KAAD;AAD8C,KAAnC,CAAlB;AAGAC,IAAAA,MAAM,CAACK,OAAP,CAAeZ,UAAU,CAAC;AACxBI,MAAAA,OAAO,2BAAEI,GAAF,aAAEA,GAAF,iDAAEA,GAAG,CAAEE,gBAAP,2DAAE,uBAAuBG,IAAvB,CAA4B,CAA5B,CAAF,yEAAoC;AADnB,KAAD,CAAzB;AAGD;AARA,CAF0C,CAAtC;AAcP,OAAO,MAAMC,YAAY,GAAG,MAAM;AAAA;;AAChC,QAAMC,MAAM,GAAGnB,SAAS,EAAxB;AACA,QAAMoB,EAAE,4BAAID,MAAM,CAACN,KAAX,kDAAI,cAAcO,EAAlB,uCAAmC,EAA3C;AACA,QAAM;AAACC,IAAAA,OAAO,EAAEC,mBAAV;AAA+BC,IAAAA,KAAK,EAAEC;AAAtC,MAA2DrB,aAAa,CAACI,iBAAD,CAA9E;AACAR,EAAAA,SAAS,CAAC,MAAM;AACduB,IAAAA,mBAAmB,CAACb,OAApB,CAA4BW,EAA5B;AACD,GAFQ,EAEN,CAACA,EAAD,CAFM,CAAT;AAIA,SAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACL,MAAC,WAAD;AACI,IAAA,KAAK,EAAE,MADX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADK,EAIL,MAAC,WAAD;AACI,IAAA,MAAM,EAAE,OADZ;AAEI,IAAA,QAAQ,2BAAEI,iBAAiB,CAAChB,OAApB,oFAAE,sBAA2BiB,GAA7B,2DAAE,uBAAgCC,GAAhC,CAAoCC,CAAC,oCAC1CA,CAD0C;AAE7CC,MAAAA,MAAM,EAAED,CAAF,aAAEA,CAAF,uBAAEA,CAAC,CAAEE;AAFkC,MAArC,CAFd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAJK,EAWJT,EAXI,iBAAP;AAcD,CAtBM","sourcesContent":["import React, {useEffect} from 'react'\r\nimport {useRouter} from 'next/router'\r\nimport {modelFactory} from '../../ModelAction/modelUtil'\r\nimport {Product} from '../../graphqlTypes/types'\r\nimport {doc} from '../../graphqlTypes/doc'\r\nimport {useStoreModel} from '../../ModelAction/useStore'\r\nimport {fpMergePre} from '../../tools/utils'\r\nimport CusCarousel from '../../components/Swipe/Swipe'\r\nimport {HeaderTitle} from '../../components/HeaderTitle/HeaderTitle'\r\n\r\nexport const groupProductModel = modelFactory('groupProductModel', {\r\n  product: {} as Product,\r\n}, {\r\n  getData: async (value: string, option) => {\r\n    const res = await option.query(doc.productListByIds, {\r\n      ids: [value],\r\n    })\r\n    option.setData(fpMergePre({\r\n      product: res?.productListByIds?.list[0] ?? {},\r\n    }))\r\n  },\r\n\r\n})\r\n\r\nexport const GroupProduct = () => {\r\n  const router = useRouter()\r\n  const id = (router.query?.id as string) ?? ''\r\n  const {actions: actionsGroupProduct, state: stateGroupProduct} = useStoreModel(groupProductModel)\r\n  useEffect(() => {\r\n    actionsGroupProduct.getData(id)\r\n  }, [id])\r\n\r\n  return <div>\r\n    <HeaderTitle\r\n        title={'产品详情'}\r\n    />\r\n    <CusCarousel\r\n        height={'160px'}\r\n        dataList={stateGroupProduct.product?.img?.map(v => ({\r\n          ...v,\r\n          imgUrl: v?.url,\r\n        })) as []}\r\n    />\r\n    {id}\r\n    groupProduct\r\n  </div>\r\n}\r\n"]},"metadata":{},"sourceType":"module"}