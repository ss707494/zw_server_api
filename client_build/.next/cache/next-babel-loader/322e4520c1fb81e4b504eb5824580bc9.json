{"ast":null,"code":"import format from 'date-fns/format';\nimport set from 'lodash/set';\nimport { cloneDeep, isFunction, get, isArray, mergeWith, isString } from 'lodash';\nexport const getObjectURL = file => {\n  var _ref, _window$createObjectU, _window, _window$createObjectU2, _window2, _window2$URL, _window2$URL$createOb, _window3, _window3$webkitURL, _window3$webkitURL$cr;\n\n  // @ts-ignore\n  return (_ref = (_window$createObjectU = (_window = window) === null || _window === void 0 ? void 0 : (_window$createObjectU2 = _window.createObjectURL) === null || _window$createObjectU2 === void 0 ? void 0 : _window$createObjectU2.call(_window, file)) !== null && _window$createObjectU !== void 0 ? _window$createObjectU : (_window2 = window) === null || _window2 === void 0 ? void 0 : (_window2$URL = _window2.URL) === null || _window2$URL === void 0 ? void 0 : (_window2$URL$createOb = _window2$URL.createObjectURL) === null || _window2$URL$createOb === void 0 ? void 0 : _window2$URL$createOb.call(_window2$URL, file)) !== null && _ref !== void 0 ? _ref : (_window3 = window) === null || _window3 === void 0 ? void 0 : (_window3$webkitURL = _window3.webkitURL) === null || _window3$webkitURL === void 0 ? void 0 : (_window3$webkitURL$cr = _window3$webkitURL.createObjectURL) === null || _window3$webkitURL$cr === void 0 ? void 0 : _window3$webkitURL$cr.call(_window3$webkitURL, file);\n};\nexport const parseFloatForInput = value => {\n  if (value === '-' || value === '') return value;\n\n  try {\n    return parseFloat(value);\n  } catch (e) {\n    console.error(e);\n  }\n};\nexport const fpSet = (origin, path, value) => {\n  let newData = cloneDeep(origin);\n\n  if (isFunction(value)) {\n    const oldData = get(origin, path);\n    set(newData, path, value(oldData));\n  } else {\n    set(newData, path, value);\n  }\n\n  return newData;\n};\nexport const delay = time => new Promise(resolve => setTimeout(resolve, time));\nexport const fpSetPre = (path, value) => origin => {\n  let newData = cloneDeep(origin);\n\n  if (isFunction(value)) {\n    const oldData = get(origin, path);\n    set(newData, path, value(oldData));\n  } else {\n    set(newData, path, value);\n  }\n\n  return newData;\n};\n\nconst customizer = (objValue, srcValue) => {\n  if (isArray(srcValue)) {\n    return srcValue;\n  }\n};\n\nexport const fpMerge = (origin, newValue) => {\n  return mergeWith({}, origin, newValue, customizer);\n};\nexport const fpMergePre = newValue => pre => mergeWith({}, pre, newValue, customizer);\nexport const fpRemove = (arr, index) => {\n  if (!arr) return [];\n  return [...(arr === null || arr === void 0 ? void 0 : arr.slice(0, index)), ...(arr === null || arr === void 0 ? void 0 : arr.slice(index + 1, arr === null || arr === void 0 ? void 0 : arr.length))];\n};\nexport const dealNumberZero = length => num => {\n  const _s = `${num !== null && num !== void 0 ? num : ''}`;\n  return Array(length - _s.length).fill('0').join('') + _s;\n};\nexport const formatDate = (date = '', formatString = 'YYYY-MM-dd HH:mm:ss') => {\n  if (!date) {\n    return '';\n  }\n\n  if (isString(date)) {\n    return format(new Date(date), formatString, {\n      useAdditionalDayOfYearTokens: true,\n      useAdditionalWeekYearTokens: true\n    });\n  }\n\n  return isNaN(date) ? '' : format(date, formatString, {\n    useAdditionalDayOfYearTokens: true,\n    useAdditionalWeekYearTokens: true\n  });\n};\nexport const dealNonBooleanProps = value => !!value ? 1 : 0;\nexport const formatMoney = (amount, decimalCount = 2, decimal = \".\", thousands = \",\") => {\n  try {\n    decimalCount = Math.abs(decimalCount);\n    decimalCount = isNaN(decimalCount) ? 2 : decimalCount;\n    const negativeSign = amount < 0 ? \"-\" : \"\";\n    let i = parseInt(amount = Math.abs(Number(amount) || 0).toFixed(decimalCount)).toString();\n    let j = i.length > 3 ? i.length % 3 : 0; // @ts-ignore\n\n    return negativeSign + (j ? i.substr(0, j) + thousands : '') + i.substr(j).replace(/(\\d{3})(?=\\d)/g, \"$1\" + thousands) + (decimalCount ? decimal + Math.abs(amount - i).toFixed(decimalCount).slice(2) : \"\");\n  } catch (e) {\n    console.log(e);\n  }\n};\nexport const dealMoney = (amount, pre = '') => `${pre}$ ${formatMoney(amount)}`;\nexport const dealMaybeNumber = num => num !== null && num !== void 0 ? num : 0;\nexport default {\n  getObjectURL\n};\nexport const dealUrlQuery = queryObj => {\n  return `?${Object.keys(queryObj).map(value => `${value}=${queryObj[value]}`).join('&')}`;\n};","map":{"version":3,"sources":["D:/code/zw/zw_client_web/utils/tools/utils.ts"],"names":["format","set","cloneDeep","isFunction","get","isArray","mergeWith","isString","getObjectURL","file","window","createObjectURL","URL","webkitURL","parseFloatForInput","value","parseFloat","e","console","error","fpSet","origin","path","newData","oldData","delay","time","Promise","resolve","setTimeout","fpSetPre","customizer","objValue","srcValue","fpMerge","newValue","fpMergePre","pre","fpRemove","arr","index","slice","length","dealNumberZero","num","_s","Array","fill","join","formatDate","date","formatString","Date","useAdditionalDayOfYearTokens","useAdditionalWeekYearTokens","isNaN","dealNonBooleanProps","formatMoney","amount","decimalCount","decimal","thousands","Math","abs","negativeSign","i","parseInt","Number","toFixed","toString","j","substr","replace","log","dealMoney","dealMaybeNumber","dealUrlQuery","queryObj","Object","keys","map"],"mappings":"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","sourcesContent":["import format from 'date-fns/format'\r\nimport set from 'lodash/set'\r\nimport {cloneDeep, PropertyPath, isFunction, get, isArray, mergeWith, isString} from 'lodash'\r\nimport {Maybe} from '../graphqlTypes/types'\r\n\r\nexport const getObjectURL = (file: any) => {\r\n  // @ts-ignore\r\n  return window?.createObjectURL?.(file)\r\n      ?? window?.URL?.createObjectURL?.(file)\r\n      ?? window?.webkitURL?.createObjectURL?.(file)\r\n}\r\n\r\nexport const parseFloatForInput = (value: any) => {\r\n  if (value === '-' || value === '') return value\r\n  try {\r\n    return parseFloat(value)\r\n  } catch (e) {\r\n    console.error(e)\r\n  }\r\n}\r\n\r\ntype SetData<S = any> = S | ((preData: S) => S)\r\n\r\nexport const fpSet = <E = any>(origin: any, path: any, value: SetData<E>) => {\r\n  let newData = cloneDeep(origin)\r\n  if (isFunction(value)) {\r\n    const oldData = get(origin, path)\r\n    set(newData, path, value(oldData))\r\n  } else {\r\n    set(newData, path, value)\r\n  }\r\n  return newData\r\n}\r\n\r\nexport const delay = (time: number) => (new Promise(resolve => setTimeout(resolve, time)))\r\n\r\nexport const fpSetPre: <T extends object>(path: PropertyPath, newValue: SetData) => (origin: T) => T = (path: any, value) => (origin) => {\r\n  let newData = cloneDeep(origin)\r\n  if (isFunction(value)) {\r\n    const oldData = get(origin, path)\r\n    set(newData, path, value(oldData))\r\n  } else {\r\n    set(newData, path, value)\r\n  }\r\n  return newData\r\n}\r\n\r\nconst customizer = (objValue: any, srcValue: any) => {\r\n  if (isArray(srcValue)) {\r\n    return srcValue\r\n  }\r\n}\r\n\r\nexport const fpMerge: <TObject, TSource1>(\r\n    origin: TObject,\r\n    newValue: TSource1,\r\n) => TObject & TSource1 = (origin, newValue) => {\r\n  return mergeWith({}, origin, newValue, customizer)\r\n}\r\n\r\nexport const fpMergePre: <Pre, New extends Partial<Pre>>(newValue: New) => (origin: Pre) => Pre & New = (newValue) => (pre) => mergeWith({}, pre, newValue, customizer)\r\n\r\nexport const fpRemove = (arr: any, index: number) => {\r\n  if (!arr) return []\r\n  return [\r\n    ...arr?.slice(0, index),\r\n    ...arr?.slice(index + 1, arr?.length),\r\n  ]\r\n}\r\n\r\nexport const dealNumberZero = (length: number) => (num: number) => {\r\n  const _s = `${num ?? ''}`\r\n  return Array(length - _s.length).fill('0').join('') + _s\r\n}\r\n\r\nexport const formatDate = (date: any = '', formatString = 'YYYY-MM-dd HH:mm:ss') => {\r\n  if (!date) {\r\n    return ''\r\n  }\r\n  if (isString(date)) {\r\n    return format(new Date(date), formatString, {\r\n      useAdditionalDayOfYearTokens: true,\r\n      useAdditionalWeekYearTokens: true,\r\n    })\r\n  }\r\n  return (isNaN(date)) ? '' : format(date, formatString, {\r\n    useAdditionalDayOfYearTokens: true,\r\n    useAdditionalWeekYearTokens: true,\r\n  })\r\n}\r\n\r\nexport const dealNonBooleanProps = (value: any) => !!value ? 1 : 0\r\n\r\nexport const formatMoney = (amount: any, decimalCount = 2, decimal = \".\", thousands = \",\") => {\r\n  try {\r\n    decimalCount = Math.abs(decimalCount)\r\n    decimalCount = isNaN(decimalCount) ? 2 : decimalCount\r\n\r\n    const negativeSign = amount < 0 ? \"-\" : \"\"\r\n\r\n    let i = parseInt(amount = Math.abs(Number(amount) || 0).toFixed(decimalCount)).toString()\r\n    let j = (i.length > 3) ? i.length % 3 : 0\r\n\r\n    // @ts-ignore\r\n    return negativeSign + (j ? i.substr(0, j) + thousands : '') + i.substr(j).replace(/(\\d{3})(?=\\d)/g, \"$1\" + thousands) + (decimalCount ? decimal + Math.abs(amount - i).toFixed(decimalCount).slice(2) : \"\")\r\n  } catch (e) {\r\n    console.log(e)\r\n  }\r\n}\r\n\r\nexport const dealMoney = (amount: any, pre = '') => `${pre}$ ${formatMoney(amount)}`\r\n\r\nexport const dealMaybeNumber = (num: Maybe<number> | undefined) => num ?? 0\r\n\r\nexport default {\r\n  getObjectURL,\r\n}\r\n\r\nexport const dealUrlQuery = (queryObj: any) => {\r\n  return `?${Object.keys(queryObj).map(value => `${value}=${queryObj[value]}`).join('&')}`\r\n}\r\n\r\n\r\n"]},"metadata":{},"sourceType":"module"}