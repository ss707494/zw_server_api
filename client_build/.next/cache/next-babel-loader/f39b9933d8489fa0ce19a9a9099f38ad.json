{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\n\nvar _this = this,\n    _jsxFileName = \"D:\\\\code\\\\zw\\\\zw_client_web\\\\utils\\\\view\\\\m\\\\home\\\\components\\\\CategorySelection\\\\CategorySelection.tsx\",\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\nimport React, { useEffect } from 'react';\nimport { grey } from '@material-ui/core/colors';\nimport { KeyboardArrowRight } from '@material-ui/icons';\nimport { ButtonBase } from '@material-ui/core';\nimport { useStoreModel } from '../../../../../ModelAction/useStore';\nimport { dealUrlQuery, fpMergePre } from '../../../../../tools/utils';\nimport { Loading } from '../../../../../components/Loading/Loading';\nimport { categoryList } from '../../../../../graphqlTypes/doc';\nimport { dealImgUrl } from '../../../../../tools/img';\nimport { CategoryRootName } from '../../../../../ss_common/enum';\nimport { modelFactory } from '../../../../../ModelAction/modelUtil';\nimport { useRouter } from 'next/router';\nimport { homeTabsModel } from '../Tabs/Tabs';\nimport styled from 'styled-components';\nexport var homeCategorySelectionModel = modelFactory('HomeCategorySelection', {\n  listData: [],\n  total: 0,\n  actId: ''\n}, {\n  getList: function () {\n    var _getList = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(value, option) {\n      var _res$categoryList;\n\n      var res;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return option.query(categoryList, {\n                data: {\n                  category: {\n                    parentCategory: {\n                      id: CategoryRootName\n                    }\n                  }\n                }\n              });\n\n            case 2:\n              res = _context.sent;\n              option.setData(fpMergePre({\n                listData: res === null || res === void 0 ? void 0 : (_res$categoryList = res.categoryList) === null || _res$categoryList === void 0 ? void 0 : _res$categoryList.list\n              }));\n\n            case 4:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    function getList(_x, _x2) {\n      return _getList.apply(this, arguments);\n    }\n\n    return getList;\n  }(),\n  changeActId: function () {\n    var _changeActId = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2(value, option) {\n      return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              option.setData(fpMergePre({\n                actId: value !== null && value !== void 0 ? value : ''\n              }));\n\n            case 1:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2);\n    }));\n\n    function changeActId(_x3, _x4) {\n      return _changeActId.apply(this, arguments);\n    }\n\n    return changeActId;\n  }()\n});\nvar ButtonBaseBox = styled(ButtonBase).withConfig({\n  displayName: \"CategorySelection__ButtonBaseBox\",\n  componentId: \"iuqsl-0\"\n})([\"&&&{width:100%;height:60px;display:flex;border-radius:8px;overflow:hidden;margin-bottom:10px;background:\", \";> img{height:100%;width:70%;}> span{flex:1;color:#fff;display:flex;align-items:center;justify-content:center;}}\"], grey[700]);\n_c = ButtonBaseBox;\nexport var CategorySelection = function CategorySelection() {\n  _s();\n\n  var _homeCategorySelectio;\n\n  var router = useRouter();\n\n  var _useStoreModel = useStoreModel(homeCategorySelectionModel),\n      homeCategorySelectionState = _useStoreModel.state,\n      homeCategorySelectionActions = _useStoreModel.actions,\n      hsGetLoad = _useStoreModel.getLoad;\n\n  var _useStoreModel2 = useStoreModel(homeTabsModel),\n      homeTabsState = _useStoreModel2.state;\n\n  useEffect(function () {\n    homeCategorySelectionActions.getList();\n  }, []);\n  return __jsx(\"div\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 7\n    }\n  }, !!hsGetLoad(categoryList) && __jsx(Loading, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 39\n    }\n  }), homeCategorySelectionState === null || homeCategorySelectionState === void 0 ? void 0 : (_homeCategorySelectio = homeCategorySelectionState.listData) === null || _homeCategorySelectio === void 0 ? void 0 : _homeCategorySelectio.map(function (value) {\n    return __jsx(ButtonBaseBox, {\n      onClick: function onClick() {\n        router.push(\"/m/category/[id]\".concat(dealUrlQuery({\n          homeType: homeTabsState.homeType\n        })), \"/m/category/\".concat(value.id).concat(dealUrlQuery({\n          homeType: homeTabsState.homeType\n        })));\n      },\n      key: \"homeCategorySelectionState_\".concat(value.id),\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 13\n      }\n    }, __jsx(\"img\", {\n      src: dealImgUrl(value.imgUrl),\n      alt: \"\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 15\n      }\n    }), __jsx(\"span\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 15\n      }\n    }, value.name, __jsx(KeyboardArrowRight, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 17\n      }\n    })));\n  }));\n};\n\n_s(CategorySelection, \"psJP6AZUcXNjOjttWF8TLAMvTSk=\", false, function () {\n  return [useRouter, useStoreModel, useStoreModel];\n});\n\n_c2 = CategorySelection;\nexport default CategorySelection;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"ButtonBaseBox\");\n$RefreshReg$(_c2, \"CategorySelection\");","map":{"version":3,"sources":["D:/code/zw/zw_client_web/utils/view/m/home/components/CategorySelection/CategorySelection.tsx"],"names":["React","useEffect","grey","KeyboardArrowRight","ButtonBase","useStoreModel","dealUrlQuery","fpMergePre","Loading","categoryList","dealImgUrl","CategoryRootName","modelFactory","useRouter","homeTabsModel","styled","homeCategorySelectionModel","listData","total","actId","getList","value","option","query","data","category","parentCategory","id","res","setData","list","changeActId","ButtonBaseBox","CategorySelection","router","homeCategorySelectionState","state","homeCategorySelectionActions","actions","hsGetLoad","getLoad","homeTabsState","map","push","homeType","imgUrl","name"],"mappings":";;;;;;;;AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,SAAQC,IAAR,QAAmB,0BAAnB;AACA,SAAQC,kBAAR,QAAiC,oBAAjC;AACA,SAAQC,UAAR,QAAyB,mBAAzB;AACA,SAAQC,aAAR,QAA4B,qCAA5B;AAEA,SAAQC,YAAR,EAAsBC,UAAtB,QAAuC,4BAAvC;AACA,SAAQC,OAAR,QAAsB,2CAAtB;AACA,SAAQC,YAAR,QAA2B,iCAA3B;AACA,SAAQC,UAAR,QAAyB,0BAAzB;AACA,SAAQC,gBAAR,QAA+B,+BAA/B;AACA,SAAQC,YAAR,QAA2B,sCAA3B;AACA,SAAQC,SAAR,QAAwB,aAAxB;AACA,SAAQC,aAAR,QAA4B,cAA5B;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AAEA,OAAO,IAAMC,0BAA0B,GAAGJ,YAAY,CAAC,uBAAD,EAA0B;AAC9EK,EAAAA,QAAQ,EAAE,EADoE;AAE9EC,EAAAA,KAAK,EAAE,CAFuE;AAG9EC,EAAAA,KAAK,EAAE;AAHuE,CAA1B,EAInD;AACDC,EAAAA,OAAO;AAAA,4EAAE,iBAAOC,KAAP,EAAcC,MAAd;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBACWA,MAAM,CAACC,KAAP,CAAad,YAAb,EAA2B;AAC3Ce,gBAAAA,IAAI,EAAE;AACJC,kBAAAA,QAAQ,EAAE;AACRC,oBAAAA,cAAc,EAAE;AACdC,sBAAAA,EAAE,EAAEhB;AADU;AADR;AADN;AADqC,eAA3B,CADX;;AAAA;AACDiB,cAAAA,GADC;AAUPN,cAAAA,MAAM,CAACO,OAAP,CAAetB,UAAU,CAAC;AACxBU,gBAAAA,QAAQ,EAAEW,GAAF,aAAEA,GAAF,4CAAEA,GAAG,CAAEnB,YAAP,sDAAE,kBAAmBqB;AADL,eAAD,CAAzB;;AAVO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAF;;AAAA;AAAA;AAAA;;AAAA;AAAA,KADN;AAeDC,EAAAA,WAAW;AAAA,gFAAE,kBAAOV,KAAP,EAA6BC,MAA7B;AAAA;AAAA;AAAA;AAAA;AACXA,cAAAA,MAAM,CAACO,OAAP,CAAetB,UAAU,CAAC;AACxBY,gBAAAA,KAAK,EAAEE,KAAF,aAAEA,KAAF,cAAEA,KAAF,GAAW;AADQ,eAAD,CAAzB;;AADW;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAF;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAfV,CAJmD,CAA/C;AA0BP,IAAMW,aAAa,GAAGjB,MAAM,CAACX,UAAD,CAAT;AAAA;AAAA;AAAA,qOAQDF,IAAI,CAAC,GAAD,CARH,CAAnB;KAAM8B,a;AAuBN,OAAO,IAAMC,iBAAiB,GAAG,SAApBA,iBAAoB,GAAM;AAAA;;AAAA;;AACrC,MAAMC,MAAM,GAAGrB,SAAS,EAAxB;;AADqC,uBAEkER,aAAa,CAACW,0BAAD,CAF/E;AAAA,MAEvBmB,0BAFuB,kBAE9BC,KAF8B;AAAA,MAEcC,4BAFd,kBAEKC,OAFL;AAAA,MAEqDC,SAFrD,kBAE4CC,OAF5C;;AAAA,wBAGNnC,aAAa,CAACS,aAAD,CAHP;AAAA,MAGvB2B,aAHuB,mBAG9BL,KAH8B;;AAKrCnC,EAAAA,SAAS,CAAC,YAAM;AACdoC,IAAAA,4BAA4B,CAACjB,OAA7B;AACD,GAFQ,EAEN,EAFM,CAAT;AAIA,SACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACG,CAAC,CAACmB,SAAS,CAAC9B,YAAD,CAAX,IAA6B,MAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADhC,EAEG0B,0BAFH,aAEGA,0BAFH,gDAEGA,0BAA0B,CAAElB,QAF/B,0DAEG,sBAAsCyB,GAAtC,CAA0C,UAAArB,KAAK;AAAA,WAC5C,MAAC,aAAD;AACI,MAAA,OAAO,EAAE,mBAAM;AACba,QAAAA,MAAM,CAACS,IAAP,2BAA+BrC,YAAY,CAAC;AAACsC,UAAAA,QAAQ,EAAEH,aAAa,CAACG;AAAzB,SAAD,CAA3C,yBAAkGvB,KAAK,CAACM,EAAxG,SAA6GrB,YAAY,CAAC;AAACsC,UAAAA,QAAQ,EAAEH,aAAa,CAACG;AAAzB,SAAD,CAAzH;AACD,OAHL;AAII,MAAA,GAAG,uCAAgCvB,KAAK,CAACM,EAAtC,CAJP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAME;AACI,MAAA,GAAG,EAAEjB,UAAU,CAACW,KAAK,CAACwB,MAAP,CADnB;AAEI,MAAA,GAAG,EAAC,EAFR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MANF,EAUE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACGxB,KAAK,CAACyB,IADT,EAEE,MAAC,kBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,CAVF,CAD4C;AAAA,GAA/C,CAFH,CADJ;AAsBD,CA/BM;;GAAMb,iB;UACIpB,S,EACwFR,a,EACxEA,a;;;MAHpB4B,iB;AAiCb,eAAeA,iBAAf","sourcesContent":["import React, {useEffect} from 'react'\r\nimport {grey} from '@material-ui/core/colors'\r\nimport {KeyboardArrowRight} from '@material-ui/icons'\r\nimport {ButtonBase} from '@material-ui/core'\r\nimport {useStoreModel} from '../../../../../ModelAction/useStore'\r\nimport {Category, CategoryListInput, Maybe} from '../../../../../graphqlTypes/types'\r\nimport {dealUrlQuery, fpMergePre} from '../../../../../tools/utils'\r\nimport {Loading} from '../../../../../components/Loading/Loading'\r\nimport {categoryList} from '../../../../../graphqlTypes/doc'\r\nimport {dealImgUrl} from '../../../../../tools/img'\r\nimport {CategoryRootName} from '../../../../../ss_common/enum'\r\nimport {modelFactory} from '../../../../../ModelAction/modelUtil'\r\nimport {useRouter} from 'next/router'\r\nimport {homeTabsModel} from '../Tabs/Tabs'\r\nimport styled from 'styled-components'\r\n\r\nexport const homeCategorySelectionModel = modelFactory('HomeCategorySelection', {\r\n  listData: [] as Category[],\r\n  total: 0,\r\n  actId: '',\r\n}, {\r\n  getList: async (value, option) => {\r\n    const res = await option.query(categoryList, {\r\n      data: {\r\n        category: {\r\n          parentCategory: {\r\n            id: CategoryRootName,\r\n          },\r\n        },\r\n      } as CategoryListInput\r\n    })\r\n    option.setData(fpMergePre({\r\n      listData: res?.categoryList?.list,\r\n    }))\r\n  },\r\n  changeActId: async (value: Maybe<string>, option) => {\r\n    option.setData(fpMergePre({\r\n      actId: value ?? '',\r\n    }))\r\n  },\r\n})\r\n\r\nconst ButtonBaseBox = styled(ButtonBase)`\r\n  &&& {\r\n    width: 100%;\r\n    height: 60px;\r\n    display: flex;\r\n    border-radius: 8px;\r\n    overflow: hidden;\r\n    margin-bottom: 10px;\r\n    background: ${grey[700]};\r\n    > img {\r\n      height: 100%;\r\n      width: 70%;\r\n    }\r\n    > span {\r\n      flex: 1;\r\n      color: #fff;\r\n      display: flex;\r\n      align-items: center;\r\n      justify-content: center;\r\n    }\r\n  }\r\n`\r\n\r\nexport const CategorySelection = () => {\r\n  const router = useRouter()\r\n  const {state: homeCategorySelectionState, actions: homeCategorySelectionActions, getLoad: hsGetLoad} = useStoreModel(homeCategorySelectionModel)\r\n  const {state: homeTabsState} = useStoreModel(homeTabsModel)\r\n\r\n  useEffect(() => {\r\n    homeCategorySelectionActions.getList()\r\n  }, [])\r\n\r\n  return (\r\n      <div>\r\n        {!!hsGetLoad(categoryList) && <Loading/>}\r\n        {homeCategorySelectionState?.listData?.map(value => (\r\n            <ButtonBaseBox\r\n                onClick={() => {\r\n                  router.push(`/m/category/[id]${dealUrlQuery({homeType: homeTabsState.homeType})}`, `/m/category/${value.id}${dealUrlQuery({homeType: homeTabsState.homeType})}`)\r\n                }}\r\n                key={`homeCategorySelectionState_${value.id}`}\r\n            >\r\n              <img\r\n                  src={dealImgUrl(value.imgUrl)}\r\n                  alt=''\r\n              />\r\n              <span>\r\n                {value.name}\r\n                <KeyboardArrowRight/>\r\n              </span>\r\n            </ButtonBaseBox>\r\n        ))}\r\n      </div>\r\n  )\r\n}\r\n\r\nexport default CategorySelection\r\n"]},"metadata":{},"sourceType":"module"}