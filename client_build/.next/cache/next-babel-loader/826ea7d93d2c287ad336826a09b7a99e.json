{"ast":null,"code":"var __jsx = React.createElement;\nimport React, { useEffect } from 'react';\nimport { modelFactory } from '../../../../../ModelAction/modelUtil';\nimport { doc } from '../../../../../graphqlTypes/doc';\nimport { fpMergePre } from '../../../../../tools/utils';\nimport { useStoreModel } from '../../../../../ModelAction/useStore';\nimport styled from 'styled-components';\nimport { ls } from '../../../../../tools/dealKey';\nimport { grey } from '@material-ui/core/colors';\nimport { ProductItemOneRow } from '../../../../../components/ProductItem/ProductItem';\nimport { differenceInHours, differenceInMinutes } from 'date-fns';\n\nconst getNowSale = list => {\n  var _list$find;\n\n  const now = new Date().getTime();\n  const saleOne = (_list$find = list === null || list === void 0 ? void 0 : list.find(v => {\n    return now > new Date(v.startTime).getTime() && now < new Date(v.endTime).getTime();\n  })) !== null && _list$find !== void 0 ? _list$find : {};\n\n  if (saleOne === null || saleOne === void 0 ? void 0 : saleOne.id) {\n    return {\n      data: saleOne,\n      isNext: false\n    };\n  } else {\n    var _list$filter$sort$, _list$filter, _list$filter$sort;\n\n    return {\n      data: (_list$filter$sort$ = list === null || list === void 0 ? void 0 : (_list$filter = list.filter(v => new Date(v.startTime).getTime() > now)) === null || _list$filter === void 0 ? void 0 : (_list$filter$sort = _list$filter.sort((a, b) => new Date(a.startTime).getTime() - new Date(b.startTime).getTime())) === null || _list$filter$sort === void 0 ? void 0 : _list$filter$sort[0]) !== null && _list$filter$sort$ !== void 0 ? _list$filter$sort$ : {},\n      isNext: true\n    };\n  }\n};\n\nexport const promotionFlashSaleModel = modelFactory('promotionFlashSaleModel', {\n  limitTimeData: [],\n  nowLimitData: {},\n  productList: [],\n  isNext: false\n}, {\n  calcDifferenceHours: (value, option) => {\n    var _option$data$nowLimit, _option$data, _option$data$nowLimit2;\n\n    return differenceInHours(new Date((_option$data$nowLimit = (_option$data = option.data) === null || _option$data === void 0 ? void 0 : (_option$data$nowLimit2 = _option$data.nowLimitData) === null || _option$data$nowLimit2 === void 0 ? void 0 : _option$data$nowLimit2.endTime) !== null && _option$data$nowLimit !== void 0 ? _option$data$nowLimit : ''), new Date());\n  },\n  calcDifferenceMinutes: (value, option) => {\n    var _option$data$nowLimit3, _option$data$nowLimit4;\n\n    return differenceInMinutes(new Date((_option$data$nowLimit3 = (_option$data$nowLimit4 = option.data.nowLimitData) === null || _option$data$nowLimit4 === void 0 ? void 0 : _option$data$nowLimit4.endTime) !== null && _option$data$nowLimit3 !== void 0 ? _option$data$nowLimit3 : ''), new Date()) % 60;\n  },\n  getData: async (value, option) => {\n    var _res$limitTimeData, _res$limitTimeData$va, _nowSaleData$data$sel, _nowSaleData$data, _res$limitTimeData2, _res$limitTimeData2$v, _ref, _productRes$productLi;\n\n    const res = await option.query(doc.limitTimeData);\n    const nowSaleData = getNowSale(res === null || res === void 0 ? void 0 : (_res$limitTimeData = res.limitTimeData) === null || _res$limitTimeData === void 0 ? void 0 : (_res$limitTimeData$va = _res$limitTimeData.value) === null || _res$limitTimeData$va === void 0 ? void 0 : _res$limitTimeData$va.list);\n    const productRes = await option.query(doc.productListByIds, {\n      ids: (_nowSaleData$data$sel = nowSaleData === null || nowSaleData === void 0 ? void 0 : (_nowSaleData$data = nowSaleData.data) === null || _nowSaleData$data === void 0 ? void 0 : _nowSaleData$data.selectProductList) !== null && _nowSaleData$data$sel !== void 0 ? _nowSaleData$data$sel : []\n    });\n    option.setData(fpMergePre({\n      nowLimitData: nowSaleData.data,\n      isNext: nowSaleData.isNext,\n      limitTimeData: (res === null || res === void 0 ? void 0 : (_res$limitTimeData2 = res.limitTimeData) === null || _res$limitTimeData2 === void 0 ? void 0 : (_res$limitTimeData2$v = _res$limitTimeData2.value) === null || _res$limitTimeData2$v === void 0 ? void 0 : _res$limitTimeData2$v.list) || [],\n      productList: (_ref = [// ...productRes?.productListByIds?.list,\n      // ...productRes?.productListByIds?.list,\n      ...((productRes === null || productRes === void 0 ? void 0 : (_productRes$productLi = productRes.productListByIds) === null || _productRes$productLi === void 0 ? void 0 : _productRes$productLi.list) || [])]) !== null && _ref !== void 0 ? _ref : []\n    }));\n  }\n});\nconst Tip = styled.div.withConfig({\n  displayName: \"PromotionFlashSale__Tip\",\n  componentId: \"a25igu-0\"\n})([\"display:flex;align-items:center;margin-bottom:8px;> main{font-size:16px;font-weight:bold;margin-right:8px;}> span{padding:4px 2px;margin:0 2px;background:\", \";color:white;border-radius:6px;}\"], grey[800]);\nexport const PromotionFlashSale = () => {\n  var _statePromotionFlashS;\n\n  const {\n    state: statePromotionFlashSale,\n    actions: actionsPromotionFlashSale\n  } = useStoreModel(promotionFlashSaleModel);\n  useEffect(() => {\n    actionsPromotionFlashSale.getData();\n  }, []);\n  return __jsx(\"div\", null, ((_statePromotionFlashS = statePromotionFlashSale.nowLimitData) === null || _statePromotionFlashS === void 0 ? void 0 : _statePromotionFlashS.id) && __jsx(React.Fragment, null, __jsx(Tip, null, __jsx(\"main\", null, statePromotionFlashSale.isNext && ls('距离下次抢购') || ls('限时选购')), __jsx(\"section\", null, ls('剩余')), __jsx(\"span\", null, `${actionsPromotionFlashSale.calcDifferenceHours()}`), __jsx(\"section\", null, ls('小时')), __jsx(\"span\", null, `${actionsPromotionFlashSale.calcDifferenceMinutes()}`), __jsx(\"section\", null, ls('分钟'))), statePromotionFlashSale.productList.map(product => __jsx(ProductItemOneRow, {\n    key: `ProductItemOneRow_${product.id}`,\n    product: product,\n    hideAction: statePromotionFlashSale.isNext\n  }))) || __jsx(\"div\", null, \"\\u6682\\u65E0\\u9650\\u65F6\\u62A2\\u8D2D\\uFF0C\\u656C\\u8BF7\\u671F\\u5F85\"));\n};","map":null,"metadata":{},"sourceType":"module"}