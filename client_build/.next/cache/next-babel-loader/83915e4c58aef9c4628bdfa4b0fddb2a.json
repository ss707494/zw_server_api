{"ast":null,"code":"import { gql } from 'apollo-boost';\nimport { fragment } from './fragment';\nimport { DictTypeEnum } from '../../ss_common/enum';\nexport const getUserListDoc = gql`\n    query refactored643($data: UserListInput!) {\n        userList(userListInput: $data) {\n            list {\n                orderCoinNextMonth\n                orderCoinCurrentMonth\n                orderAmountCurrentYear\n                ...userInfo\n                ...UserFields\n                ...orderInfo\n            }\n            total\n        }\n    }\n    fragment orderInfo on User{\n        orderInfo{\n            id\n            name\n            createTime\n            updateTime\n            isDelete\n            number\n            state\n            actuallyPaid\n            addressId\n            paymentMethodCardId\n            subtotal\n            couponDiscount\n            vipDiscount\n            transportationCosts\n            saleTax\n            orderId\n            discountProductTotal\n            finishTime\n            pickUpTime\n            pickUpType\n        }\n    }\n    fragment UserFields on User {\n        id\n        name\n        createTime\n        updateTime\n        isDelete\n        password\n        type\n    }\n    fragment userInfo on User{\n        userInfo{\n            id\n            name\n            createTime\n            updateTime\n            isDelete\n            userId\n            phone\n            email\n            userLevel\n        }\n    }\n`;\nexport const getDataConfig = gql`\n    query ($data: DataConfigItemInput) {\n        getDataConfig(dataConfigInput: $data) {\n            id\n            name\n            createTime\n            updateTime\n            isDelete\n            type\n            value\n            remark\n        }\n    }\n`;\nexport const homeCarouselImgs = gql`\n    query query_query_testLong137($data: DataConfigItemInput) {\n        homeCarouselImgs(dataConfigInput: $data) {\n            id\n            name\n            createTime\n            updateTime\n            isDelete\n            type\n            value\n            remark\n        }\n    }\n`;\nexport const categoryList = gql`\n    query query_query_testLong565($data: CategoryListInput) {\n        categoryList(data: $data) {\n            total\n            list {\n                ...Category\n            }\n        }\n    }\n    ${fragment.CategoryFields}\n`;\nexport const doc = {\n  getUserListDoc,\n  categoryList,\n  getDataConfig,\n  homeCarouselImgs,\n  registerUser: gql`\n      mutation mutation_registerUse998($data: UserItemInput) {\n          registerUser(data: $data) {\n              token\n              refreshtoken\n              user {\n                  id\n                  name\n                  createTime\n                  updateTime\n                  isDelete\n                  password\n                  type\n                  userInfo {\n                      name\n                  }\n              }\n          }\n      }\n  `,\n  refreshToken: gql`\n      query refreshToken($data: String!) {\n          refreshToken(refreshtoken: $data) {\n              refreshtoken\n              token\n          }\n      }\n  `,\n  login: gql`\n      query login($data: UserItemInput) {\n          login(user: $data) {\n              token\n              refreshtoken\n          }\n      }\n  `,\n  oneUser: gql`\n      query oneUser {\n          oneUser {\n              ...UserFields\n              userInfo {\n                  ...UserInfoFields\n              }\n          }\n      }\n      ${fragment.UserInfoFields}\n      ${fragment.UserFields}\n  `,\n  orderList: gql`\n      query orderList($data: OrderInput){\n          orderList (orderInput: $data, fromUser: true) {\n              list {\n                  ...OrderInfoFields\n                  rOrderProduct {\n                      ...ROrderProductFields\n                      product {\n                          ...ProductFields\n                          img {\n                              ...ImgFields\n                          }\n                      }\n                  }\n              }\n          }\n      }\n      ${fragment.OrderInfoFields}\n      ${fragment.ROrderProductFields}\n      ${fragment.ProductFields}\n      ${fragment.ImgFields}\n  `,\n  orderDetail: gql`\n      query orderDetail($id: String) {\n          orderDetail(id: $id) {\n              ...OrderInfoFields\n              rOrderProduct {\n                  ...ROrderProductFields\n                  product {\n                      ...ProductFields\n                      img {\n                          ...ImgFields\n                      }\n                  }\n              }\n              user {\n                  ...UserFields\n                  userInfo {\n                      ...UserInfoFields\n                  }\n              }\n              userAddress {\n                  ...UserAddressFields\n              }\n              userPayCard {\n                  ...UserPayCardFields\n              }\n          }\n      }\n      ${fragment.OrderInfoFields}\n      ${fragment.ROrderProductFields}\n      ${fragment.ProductFields}\n      ${fragment.ImgFields}\n      ${fragment.UserFields}\n      ${fragment.UserInfoFields}\n      ${fragment.UserPayCardFields}\n      ${fragment.UserAddressFields}\n  `,\n  updatePassword: gql`\n      mutation ($data: UpdatePasswordInput) {\n          updatePassword (data: $data) {\n              user {\n                  ...UserFields\n              }\n              authBody {\n                  token\n                  refreshtoken\n              }\n          }\n      }\n      ${fragment.UserFields}\n  `,\n  payCardListOneUser: gql`\n      query {\n          payCardListOneUser {\n              ...UserPayCardFields\n          }\n      }\n      ${fragment.UserPayCardFields}\n  `,\n  userPayCard: gql`\n      query ($data: UserPayCardItemInput) {\n          userPayCard (userPayCard: $data) {\n              ...UserPayCardFields\n          }\n      }\n      ${fragment.UserPayCardFields}\n  `,\n  saveUserPayCard: gql`\n      mutation ($data: UserPayCardItemInput){\n          saveUserPayCard (userPayCard: $data) {\n              ...UserPayCardFields\n          }\n      }\n      ${fragment.UserPayCardFields}\n  `,\n  setUserPayCardDefault: gql`\n      mutation ($data: UserPayCardItemInput) {\n          setUserPayCardDefault (userPayCard: $data) {\n              ...UserPayCardFields\n          }\n      }\n      ${fragment.UserPayCardFields}\n  `,\n  pickupAddress: gql`\n      query {\n          getDataConfig(dataConfigInput: {\n              type: \"${DictTypeEnum.SelfAddress}\"\n          }) {\n              ...DataConfigFields\n          }\n          oneUser {\n              ...UserFields\n              userInfo {\n                  ...UserInfoFields\n              }\n          }\n      }\n      ${fragment.UserInfoFields}\n      ${fragment.DataConfigFields}\n      ${fragment.UserFields}\n  `,\n  updateUserInfo: gql`\n      mutation ($userInfo: UserInfoItemInput) {\n          updateUserInfo (userInfo: $userInfo) {\n              ...UserInfoFields\n          }\n      }\n      ${fragment.UserInfoFields}\n  `,\n  userAddressListOneUser: gql`\n      query {\n          userAddressListOneUser {\n              ...UserAddressFields\n          }\n      }\n      ${fragment.UserAddressFields}\n  `,\n  userAddress: gql`\n      query ($data: UserAddressItemInput) {\n          userAddress (userAddress: $data) {\n              ...UserAddressFields\n          }\n      }\n      ${fragment.UserAddressFields}\n  `,\n  saveUserAddress: gql`\n      mutation ($data: UserAddressItemInput){\n          saveUserAddress (userAddress: $data) {\n              ...UserAddressFields\n          }\n      }\n      ${fragment.UserAddressFields}\n  `,\n  setUserAddressDefault: gql`\n      mutation ($data: UserAddressItemInput) {\n          setUserAddressDefault (userAddress: $data) {\n              ...UserAddressFields\n          }\n      }\n      ${fragment.UserAddressFields}\n  `,\n  productsInCategory: gql`\n      query ($data: CategoryItemInput) {\n          productsInCategory(categoryItemInput: $data) {\n              ...ProductFields\n              img {\n                  ...ImgFields\n              }\n          }\n          categoryList(data: {\n              category: {\n                  parentCategory: $data\n              }\n          }) {\n              total\n              list {\n                  ...Category\n              }\n          }\n      }\n      ${fragment.ProductFields}\n      ${fragment.ImgFields}\n      ${fragment.CategoryFields}\n  `,\n  categoryLevel: gql`\n      query ($data: CategoryItemInput) {\n          categoryLevel(categoryItemInput: $data)\n      }\n  `,\n  oneCategory: gql`\n      query ($data: CategoryItemInput) {\n          oneCategory(data: $data) {\n              ...Category\n          }\n      }\n      ${fragment.CategoryFields}\n  `,\n  productsList: gql`\n      query ($data: CategoryItemInput) {\n          productsInCategory(categoryItemInput: $data) {\n              ...ProductFields\n              img {\n                  ...ImgFields\n              }\n          }\n      }\n      ${fragment.ProductFields}\n      ${fragment.ImgFields}\n  `,\n  updateNumShopCart: gql`\n      mutation ($shopCart: ShopCartItemInput, $updateNum: Float) {\n          updateNumShopCart (shopCart: $shopCart, updateNum: $updateNum) {\n              id\n              number\n              product {\n                  ...ProductFields\n              }\n              user {\n                  ...UserFields\n              }\n          }\n      }\n      ${fragment.ProductFields}\n      ${fragment.UserFields}\n  `,\n  userShopCartList: gql`\n      query {\n          shopCartList {\n              ...ShopCartFields\n              product {\n                  ...ProductFields\n                  img {\n                      ...ImgFields\n                  }\n              }\n          }\n      }\n      ${fragment.ShopCartFields}\n      ${fragment.ProductFields}\n      ${fragment.ImgFields}\n  `,\n  updateShopCart: gql`\n      mutation ($shopCart: ShopCartItemInput){\n          updateShopCart (shopCart: $shopCart) {\n              ...ShopCartFields\n          }\n      }\n      ${fragment.ShopCartFields}\n  `,\n  orderConfirmInfo: gql`\n    query {\n        getDataConfig(dataConfigInput: {\n            type: \"${DictTypeEnum.SelfAddress}\"\n        }) {\n            ...DataConfigFields\n        }\n        oneUser {\n            ...UserFields\n            userInfo {\n                ...UserInfoFields\n            }\n        }\n        payCardListOneUser {\n            ...UserPayCardFields\n        }\n        userAddressListOneUser {\n            ...UserAddressFields\n        }\n    }\n    ${fragment.UserAddressFields}\n    ${fragment.UserPayCardFields}\n    ${fragment.UserInfoFields}\n    ${fragment.UserFields}\n    ${fragment.DataConfigFields}\n  `,\n  saveOrder: gql`\n    mutation ($orderInfoItemInput: OrderInfoItemInput) {\n        saveOrder (orderInfoItemInput: $orderInfoItemInput) {\n            ...OrderInfoFields\n        }\n    }\n    ${fragment.OrderInfoFields}\n  `\n};","map":{"version":3,"sources":["D:/code/zw/zw_client_web/utils/graphqlTypes/doc/index.ts"],"names":["gql","fragment","DictTypeEnum","getUserListDoc","getDataConfig","homeCarouselImgs","categoryList","CategoryFields","doc","registerUser","refreshToken","login","oneUser","UserInfoFields","UserFields","orderList","OrderInfoFields","ROrderProductFields","ProductFields","ImgFields","orderDetail","UserPayCardFields","UserAddressFields","updatePassword","payCardListOneUser","userPayCard","saveUserPayCard","setUserPayCardDefault","pickupAddress","SelfAddress","DataConfigFields","updateUserInfo","userAddressListOneUser","userAddress","saveUserAddress","setUserAddressDefault","productsInCategory","categoryLevel","oneCategory","productsList","updateNumShopCart","userShopCartList","ShopCartFields","updateShopCart","orderConfirmInfo","saveOrder"],"mappings":"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","sourcesContent":["import {gql} from 'apollo-boost'\r\nimport {fragment} from './fragment'\r\nimport {DictTypeEnum} from '../../ss_common/enum'\r\n\r\nexport const getUserListDoc = gql`\r\n    query refactored643($data: UserListInput!) {\r\n        userList(userListInput: $data) {\r\n            list {\r\n                orderCoinNextMonth\r\n                orderCoinCurrentMonth\r\n                orderAmountCurrentYear\r\n                ...userInfo\r\n                ...UserFields\r\n                ...orderInfo\r\n            }\r\n            total\r\n        }\r\n    }\r\n    fragment orderInfo on User{\r\n        orderInfo{\r\n            id\r\n            name\r\n            createTime\r\n            updateTime\r\n            isDelete\r\n            number\r\n            state\r\n            actuallyPaid\r\n            addressId\r\n            paymentMethodCardId\r\n            subtotal\r\n            couponDiscount\r\n            vipDiscount\r\n            transportationCosts\r\n            saleTax\r\n            orderId\r\n            discountProductTotal\r\n            finishTime\r\n            pickUpTime\r\n            pickUpType\r\n        }\r\n    }\r\n    fragment UserFields on User {\r\n        id\r\n        name\r\n        createTime\r\n        updateTime\r\n        isDelete\r\n        password\r\n        type\r\n    }\r\n    fragment userInfo on User{\r\n        userInfo{\r\n            id\r\n            name\r\n            createTime\r\n            updateTime\r\n            isDelete\r\n            userId\r\n            phone\r\n            email\r\n            userLevel\r\n        }\r\n    }\r\n`\r\n\r\nexport const getDataConfig = gql`\r\n    query ($data: DataConfigItemInput) {\r\n        getDataConfig(dataConfigInput: $data) {\r\n            id\r\n            name\r\n            createTime\r\n            updateTime\r\n            isDelete\r\n            type\r\n            value\r\n            remark\r\n        }\r\n    }\r\n`\r\n\r\nexport const homeCarouselImgs = gql`\r\n    query query_query_testLong137($data: DataConfigItemInput) {\r\n        homeCarouselImgs(dataConfigInput: $data) {\r\n            id\r\n            name\r\n            createTime\r\n            updateTime\r\n            isDelete\r\n            type\r\n            value\r\n            remark\r\n        }\r\n    }\r\n`\r\n\r\nexport const categoryList = gql`\r\n    query query_query_testLong565($data: CategoryListInput) {\r\n        categoryList(data: $data) {\r\n            total\r\n            list {\r\n                ...Category\r\n            }\r\n        }\r\n    }\r\n    ${fragment.CategoryFields}\r\n`\r\n\r\nexport const doc = {\r\n  getUserListDoc,\r\n  categoryList,\r\n  getDataConfig,\r\n  homeCarouselImgs,\r\n  registerUser: gql`\r\n      mutation mutation_registerUse998($data: UserItemInput) {\r\n          registerUser(data: $data) {\r\n              token\r\n              refreshtoken\r\n              user {\r\n                  id\r\n                  name\r\n                  createTime\r\n                  updateTime\r\n                  isDelete\r\n                  password\r\n                  type\r\n                  userInfo {\r\n                      name\r\n                  }\r\n              }\r\n          }\r\n      }\r\n  `,\r\n  refreshToken: gql`\r\n      query refreshToken($data: String!) {\r\n          refreshToken(refreshtoken: $data) {\r\n              refreshtoken\r\n              token\r\n          }\r\n      }\r\n  `,\r\n  login: gql`\r\n      query login($data: UserItemInput) {\r\n          login(user: $data) {\r\n              token\r\n              refreshtoken\r\n          }\r\n      }\r\n  `,\r\n  oneUser: gql`\r\n      query oneUser {\r\n          oneUser {\r\n              ...UserFields\r\n              userInfo {\r\n                  ...UserInfoFields\r\n              }\r\n          }\r\n      }\r\n      ${fragment.UserInfoFields}\r\n      ${fragment.UserFields}\r\n  `,\r\n  orderList: gql`\r\n      query orderList($data: OrderInput){\r\n          orderList (orderInput: $data, fromUser: true) {\r\n              list {\r\n                  ...OrderInfoFields\r\n                  rOrderProduct {\r\n                      ...ROrderProductFields\r\n                      product {\r\n                          ...ProductFields\r\n                          img {\r\n                              ...ImgFields\r\n                          }\r\n                      }\r\n                  }\r\n              }\r\n          }\r\n      }\r\n      ${fragment.OrderInfoFields}\r\n      ${fragment.ROrderProductFields}\r\n      ${fragment.ProductFields}\r\n      ${fragment.ImgFields}\r\n  `,\r\n  orderDetail: gql`\r\n      query orderDetail($id: String) {\r\n          orderDetail(id: $id) {\r\n              ...OrderInfoFields\r\n              rOrderProduct {\r\n                  ...ROrderProductFields\r\n                  product {\r\n                      ...ProductFields\r\n                      img {\r\n                          ...ImgFields\r\n                      }\r\n                  }\r\n              }\r\n              user {\r\n                  ...UserFields\r\n                  userInfo {\r\n                      ...UserInfoFields\r\n                  }\r\n              }\r\n              userAddress {\r\n                  ...UserAddressFields\r\n              }\r\n              userPayCard {\r\n                  ...UserPayCardFields\r\n              }\r\n          }\r\n      }\r\n      ${fragment.OrderInfoFields}\r\n      ${fragment.ROrderProductFields}\r\n      ${fragment.ProductFields}\r\n      ${fragment.ImgFields}\r\n      ${fragment.UserFields}\r\n      ${fragment.UserInfoFields}\r\n      ${fragment.UserPayCardFields}\r\n      ${fragment.UserAddressFields}\r\n  `,\r\n  updatePassword: gql`\r\n      mutation ($data: UpdatePasswordInput) {\r\n          updatePassword (data: $data) {\r\n              user {\r\n                  ...UserFields\r\n              }\r\n              authBody {\r\n                  token\r\n                  refreshtoken\r\n              }\r\n          }\r\n      }\r\n      ${fragment.UserFields}\r\n  `,\r\n  payCardListOneUser: gql`\r\n      query {\r\n          payCardListOneUser {\r\n              ...UserPayCardFields\r\n          }\r\n      }\r\n      ${fragment.UserPayCardFields}\r\n  `,\r\n  userPayCard: gql`\r\n      query ($data: UserPayCardItemInput) {\r\n          userPayCard (userPayCard: $data) {\r\n              ...UserPayCardFields\r\n          }\r\n      }\r\n      ${fragment.UserPayCardFields}\r\n  `,\r\n  saveUserPayCard: gql`\r\n      mutation ($data: UserPayCardItemInput){\r\n          saveUserPayCard (userPayCard: $data) {\r\n              ...UserPayCardFields\r\n          }\r\n      }\r\n      ${fragment.UserPayCardFields}\r\n  `,\r\n  setUserPayCardDefault: gql`\r\n      mutation ($data: UserPayCardItemInput) {\r\n          setUserPayCardDefault (userPayCard: $data) {\r\n              ...UserPayCardFields\r\n          }\r\n      }\r\n      ${fragment.UserPayCardFields}\r\n  `,\r\n  pickupAddress: gql`\r\n      query {\r\n          getDataConfig(dataConfigInput: {\r\n              type: \"${DictTypeEnum.SelfAddress}\"\r\n          }) {\r\n              ...DataConfigFields\r\n          }\r\n          oneUser {\r\n              ...UserFields\r\n              userInfo {\r\n                  ...UserInfoFields\r\n              }\r\n          }\r\n      }\r\n      ${fragment.UserInfoFields}\r\n      ${fragment.DataConfigFields}\r\n      ${fragment.UserFields}\r\n  `,\r\n  updateUserInfo: gql`\r\n      mutation ($userInfo: UserInfoItemInput) {\r\n          updateUserInfo (userInfo: $userInfo) {\r\n              ...UserInfoFields\r\n          }\r\n      }\r\n      ${fragment.UserInfoFields}\r\n  `,\r\n  userAddressListOneUser: gql`\r\n      query {\r\n          userAddressListOneUser {\r\n              ...UserAddressFields\r\n          }\r\n      }\r\n      ${fragment.UserAddressFields}\r\n  `,\r\n  userAddress: gql`\r\n      query ($data: UserAddressItemInput) {\r\n          userAddress (userAddress: $data) {\r\n              ...UserAddressFields\r\n          }\r\n      }\r\n      ${fragment.UserAddressFields}\r\n  `,\r\n  saveUserAddress: gql`\r\n      mutation ($data: UserAddressItemInput){\r\n          saveUserAddress (userAddress: $data) {\r\n              ...UserAddressFields\r\n          }\r\n      }\r\n      ${fragment.UserAddressFields}\r\n  `,\r\n  setUserAddressDefault: gql`\r\n      mutation ($data: UserAddressItemInput) {\r\n          setUserAddressDefault (userAddress: $data) {\r\n              ...UserAddressFields\r\n          }\r\n      }\r\n      ${fragment.UserAddressFields}\r\n  `,\r\n  productsInCategory: gql`\r\n      query ($data: CategoryItemInput) {\r\n          productsInCategory(categoryItemInput: $data) {\r\n              ...ProductFields\r\n              img {\r\n                  ...ImgFields\r\n              }\r\n          }\r\n          categoryList(data: {\r\n              category: {\r\n                  parentCategory: $data\r\n              }\r\n          }) {\r\n              total\r\n              list {\r\n                  ...Category\r\n              }\r\n          }\r\n      }\r\n      ${fragment.ProductFields}\r\n      ${fragment.ImgFields}\r\n      ${fragment.CategoryFields}\r\n  `,\r\n  categoryLevel: gql`\r\n      query ($data: CategoryItemInput) {\r\n          categoryLevel(categoryItemInput: $data)\r\n      }\r\n  `,\r\n  oneCategory: gql`\r\n      query ($data: CategoryItemInput) {\r\n          oneCategory(data: $data) {\r\n              ...Category\r\n          }\r\n      }\r\n      ${fragment.CategoryFields}\r\n  `,\r\n  productsList: gql`\r\n      query ($data: CategoryItemInput) {\r\n          productsInCategory(categoryItemInput: $data) {\r\n              ...ProductFields\r\n              img {\r\n                  ...ImgFields\r\n              }\r\n          }\r\n      }\r\n      ${fragment.ProductFields}\r\n      ${fragment.ImgFields}\r\n  `,\r\n  updateNumShopCart: gql`\r\n      mutation ($shopCart: ShopCartItemInput, $updateNum: Float) {\r\n          updateNumShopCart (shopCart: $shopCart, updateNum: $updateNum) {\r\n              id\r\n              number\r\n              product {\r\n                  ...ProductFields\r\n              }\r\n              user {\r\n                  ...UserFields\r\n              }\r\n          }\r\n      }\r\n      ${fragment.ProductFields}\r\n      ${fragment.UserFields}\r\n  `,\r\n  userShopCartList: gql`\r\n      query {\r\n          shopCartList {\r\n              ...ShopCartFields\r\n              product {\r\n                  ...ProductFields\r\n                  img {\r\n                      ...ImgFields\r\n                  }\r\n              }\r\n          }\r\n      }\r\n      ${fragment.ShopCartFields}\r\n      ${fragment.ProductFields}\r\n      ${fragment.ImgFields}\r\n  `,\r\n  updateShopCart: gql`\r\n      mutation ($shopCart: ShopCartItemInput){\r\n          updateShopCart (shopCart: $shopCart) {\r\n              ...ShopCartFields\r\n          }\r\n      }\r\n      ${fragment.ShopCartFields}\r\n  `,\r\n  orderConfirmInfo: gql`\r\n    query {\r\n        getDataConfig(dataConfigInput: {\r\n            type: \"${DictTypeEnum.SelfAddress}\"\r\n        }) {\r\n            ...DataConfigFields\r\n        }\r\n        oneUser {\r\n            ...UserFields\r\n            userInfo {\r\n                ...UserInfoFields\r\n            }\r\n        }\r\n        payCardListOneUser {\r\n            ...UserPayCardFields\r\n        }\r\n        userAddressListOneUser {\r\n            ...UserAddressFields\r\n        }\r\n    }\r\n    ${fragment.UserAddressFields}\r\n    ${fragment.UserPayCardFields}\r\n    ${fragment.UserInfoFields}\r\n    ${fragment.UserFields}\r\n    ${fragment.DataConfigFields}\r\n  `,\r\n  saveOrder: gql`\r\n    mutation ($orderInfoItemInput: OrderInfoItemInput) {\r\n        saveOrder (orderInfoItemInput: $orderInfoItemInput) {\r\n            ...OrderInfoFields\r\n        }\r\n    }\r\n    ${fragment.OrderInfoFields}\r\n  `,\r\n}\r\n\r\n"]},"metadata":{},"sourceType":"module"}