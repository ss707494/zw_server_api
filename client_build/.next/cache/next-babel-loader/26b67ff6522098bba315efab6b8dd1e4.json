{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\n\nvar _this = this,\n    _jsxFileName = \"D:\\\\code\\\\zw\\\\zw_client_web\\\\utils\\\\view\\\\me\\\\myAddress\\\\edit\\\\[id].tsx\",\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { useEffect } from 'react';\nimport { modelFactory } from '../../../../ModelAction/modelUtil';\nimport { useStoreModel } from '../../../../ModelAction/useStore';\nimport { fpMergePre } from '../../../../tools/utils';\nimport { SigninInput } from '../../../register';\nimport { FieldContain } from '../../myInfo/updatePassword';\nimport { HeaderTitle } from '../../../../components/HeaderTitle/HeaderTitle';\nimport { setForm } from '../../../../tools/commonAction';\nimport { ls } from '../../../../tools/dealKey';\nimport { useRouter } from 'next/router';\nimport { ButtonLoad } from '../../../../components/ButtonLoad/ButtonLoad';\nimport { doc } from '../../../../graphqlTypes/doc';\nimport { showMessage } from '../../../../components/Message/Message';\nexport var myAddressEditModel = modelFactory('myAddressEditModel', {\n  form: {\n    name: '',\n    address: '',\n    province: '',\n    zip: '',\n    city: '',\n    district: '',\n    contactInformation: ''\n  }\n}, {\n  setForm: setForm,\n  clearForm: function clearForm(value, option) {\n    return option.setData(fpMergePre({\n      form: {\n        name: '',\n        address: '',\n        province: '',\n        zip: '',\n        city: '',\n        district: '',\n        contactInformation: ''\n      }\n    }));\n  },\n  submit: function submit(value, option) {\n    var form = option.data.form;\n    return option.mutate(doc.saveUserAddress, {\n      data: _objectSpread({}, form)\n    });\n  },\n  getOne: function () {\n    var _getOne = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(value, option) {\n      var _res$userPayCard;\n\n      var res;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return option.query(doc.userPayCard, {\n                data: _objectSpread({}, value)\n              });\n\n            case 2:\n              res = _context.sent;\n              option.setData(fpMergePre({\n                form: _objectSpread({}, (_res$userPayCard = res === null || res === void 0 ? void 0 : res.userPayCard) !== null && _res$userPayCard !== void 0 ? _res$userPayCard : {})\n              }));\n\n            case 4:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    function getOne(_x, _x2) {\n      return _getOne.apply(this, arguments);\n    }\n\n    return getOne;\n  }()\n});\nexport var MyAddressEdit = function MyAddressEdit() {\n  _s();\n\n  var _ref, _router$query;\n\n  var router = useRouter();\n  var id = (_ref = (_router$query = router.query) === null || _router$query === void 0 ? void 0 : _router$query.id) !== null && _ref !== void 0 ? _ref : '';\n\n  var _useStoreModel = useStoreModel(myAddressEditModel),\n      stateMAEM = _useStoreModel.state,\n      actionsMAEM = _useStoreModel.actions;\n\n  useEffect(function () {\n    if (id && id !== '0') {\n      actionsMAEM.getOne({\n        id: id\n      });\n    }\n  }, [id]);\n  return __jsx(\"div\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 10\n    }\n  }, __jsx(HeaderTitle, {\n    title: \"\".concat(id === '0' ? '新增' : '编辑', \"\\u5730\\u5740\"),\n    backCall: actionsMAEM.clearForm,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 5\n    }\n  }), __jsx(FieldContain, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 5\n    }\n  }, [['信用卡号', 'number'], ['四位号码', 'code'], ['姓名', 'userName'], ['详细地址', 'addressDetail'], ['邮政编码', 'zipCode'], ['城市', 'city'], ['联系方式', 'contact']].map(function (v) {\n    var _stateMAEM$form;\n\n    return __jsx(SigninInput, {\n      key: \"myAddressEdit_\".concat(v[1]),\n      label: ls(v[0]),\n      value: (_stateMAEM$form = stateMAEM.form[v[1]]) !== null && _stateMAEM$form !== void 0 ? _stateMAEM$form : '',\n      onChange: function onChange(event) {\n        return actionsMAEM.setForm([v[1], event.target.value]);\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 18\n      }\n    });\n  }), __jsx(\"section\", {\n    style: {\n      width: '100%',\n      height: '20px'\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 7\n    }\n  }), __jsx(ButtonLoad, {\n    fullWidth: true,\n    variant: 'contained',\n    color: 'secondary',\n    onClick: /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2() {\n      var _yield$actionsMAEM$su, _yield$actionsMAEM$su2;\n\n      return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              _context2.next = 2;\n              return actionsMAEM.submit();\n\n            case 2:\n              _context2.t1 = _yield$actionsMAEM$su = _context2.sent;\n              _context2.t0 = _context2.t1 === null;\n\n              if (_context2.t0) {\n                _context2.next = 6;\n                break;\n              }\n\n              _context2.t0 = _yield$actionsMAEM$su === void 0;\n\n            case 6:\n              if (!_context2.t0) {\n                _context2.next = 10;\n                break;\n              }\n\n              _context2.t2 = void 0;\n              _context2.next = 11;\n              break;\n\n            case 10:\n              _context2.t2 = (_yield$actionsMAEM$su2 = _yield$actionsMAEM$su.saveUserPayCard) === null || _yield$actionsMAEM$su2 === void 0 ? void 0 : _yield$actionsMAEM$su2.id;\n\n            case 11:\n              if (!_context2.t2) {\n                _context2.next = 15;\n                break;\n              }\n\n              showMessage('操作成功');\n              actionsMAEM.clearForm();\n              router.back();\n\n            case 15:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2);\n    })),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 7\n    }\n  }, \"\\u4FDD\\u5B58\")));\n};\n\n_s(MyAddressEdit, \"iZ9/J5yKYmvO2UVrQACEHsxLX1U=\", false, function () {\n  return [useRouter, useStoreModel];\n});\n\n_c = MyAddressEdit;\n\nvar _c;\n\n$RefreshReg$(_c, \"MyAddressEdit\");","map":{"version":3,"sources":["D:/code/zw/zw_client_web/utils/view/me/myAddress/edit/[id].tsx"],"names":["React","useEffect","modelFactory","useStoreModel","fpMergePre","SigninInput","FieldContain","HeaderTitle","setForm","ls","useRouter","ButtonLoad","doc","showMessage","myAddressEditModel","form","name","address","province","zip","city","district","contactInformation","clearForm","value","option","setData","submit","data","mutate","saveUserAddress","getOne","query","userPayCard","res","MyAddressEdit","router","id","stateMAEM","state","actionsMAEM","actions","map","v","event","target","width","height","saveUserPayCard","back"],"mappings":"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","sourcesContent":["import React, {useEffect} from 'react'\r\nimport {modelFactory} from '../../../../ModelAction/modelUtil'\r\nimport {useStoreModel} from '../../../../ModelAction/useStore'\r\nimport {fpMergePre} from '../../../../tools/utils'\r\nimport {SigninInput} from '../../../register'\r\nimport {FieldContain} from '../../myInfo/updatePassword'\r\nimport {HeaderTitle} from '../../../../components/HeaderTitle/HeaderTitle'\r\nimport {UserAddress, UserAddressItemInput, UserPayCard, UserPayCardItemInput} from '../../../../graphqlTypes/types'\r\nimport {setForm} from '../../../../tools/commonAction'\r\nimport {ls} from '../../../../tools/dealKey'\r\nimport {useRouter} from 'next/router'\r\nimport {ButtonLoad} from '../../../../components/ButtonLoad/ButtonLoad'\r\nimport {doc} from '../../../../graphqlTypes/doc'\r\nimport {showMessage} from '../../../../components/Message/Message'\r\n\r\nexport const myAddressEditModel = modelFactory('myAddressEditModel', {\r\n  form: {\r\n    name: '',\r\n    address: '',\r\n    province: '',\r\n    zip: '',\r\n    city: '',\r\n    district: '',\r\n    contactInformation: '',\r\n  } as UserAddressItemInput,\r\n}, {\r\n  setForm: setForm,\r\n  clearForm: (value, option) => option.setData(fpMergePre({\r\n    form: {\r\n      name: '',\r\n      address: '',\r\n      province: '',\r\n      zip: '',\r\n      city: '',\r\n      district: '',\r\n      contactInformation: '',\r\n    },\r\n  })),\r\n  submit: (value, option) => {\r\n    const form = option.data.form\r\n    return option.mutate(doc.saveUserAddress, {\r\n      data: {\r\n        ...form,\r\n      },\r\n    })\r\n  },\r\n  getOne: async (value: UserAddressItemInput, option) => {\r\n    const res = await option.query(doc.userPayCard, {\r\n      data: {\r\n        ...value,\r\n      },\r\n    })\r\n    option.setData(fpMergePre({\r\n      form: {\r\n        ...res?.userPayCard ?? {},\r\n      },\r\n    }))\r\n  },\r\n})\r\n\r\nexport const MyAddressEdit = () => {\r\n  const router = useRouter()\r\n  const id = (router.query?.id as string) ?? ''\r\n\r\n  const {state: stateMAEM, actions: actionsMAEM} = useStoreModel(myAddressEditModel)\r\n  useEffect(() => {\r\n    if (id && id !== '0') {\r\n      actionsMAEM.getOne({\r\n        id,\r\n      })\r\n    }\r\n  }, [id])\r\n\r\n  return <div>\r\n    <HeaderTitle\r\n        title={`${id === '0' ? '新增' : '编辑'}地址`}\r\n        backCall={actionsMAEM.clearForm}\r\n    />\r\n    <FieldContain>\r\n      {[\r\n        ['信用卡号', 'number'],\r\n        ['四位号码', 'code'],\r\n        ['姓名', 'userName'],\r\n        ['详细地址', 'addressDetail'],\r\n        ['邮政编码', 'zipCode'],\r\n        ['城市', 'city'],\r\n        ['联系方式', 'contact'],\r\n      ].map(v => <SigninInput\r\n          key={`myAddressEdit_${v[1]}`}\r\n          label={ls(v[0])}\r\n          value={stateMAEM.form[v[1] as keyof UserAddressItemInput] ?? ''}\r\n          onChange={event => actionsMAEM.setForm([v[1], event.target.value])}\r\n      />)}\r\n      <section style={{width: '100%', height: '20px'}}/>\r\n      <ButtonLoad\r\n          fullWidth\r\n          variant={'contained'}\r\n          color={'secondary'}\r\n          onClick={async () => {\r\n            if ((await actionsMAEM.submit())?.saveUserPayCard?.id) {\r\n              showMessage('操作成功')\r\n              actionsMAEM.clearForm()\r\n              router.back()\r\n            }\r\n          }}\r\n      >\r\n        保存\r\n      </ButtonLoad>\r\n    </FieldContain>\r\n  </div>\r\n}\r\n"]},"metadata":{},"sourceType":"module"}