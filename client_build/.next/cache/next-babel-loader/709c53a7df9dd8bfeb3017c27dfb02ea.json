{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nvar __jsx = React.createElement;\nimport React, { useEffect } from 'react';\nimport SortIcon from '@material-ui/icons/Sort';\nimport FilterListIcon from '@material-ui/icons/FilterList';\nimport { modelFactory } from '../../ModelAction/modelUtil';\nimport { useRouter } from 'next/router';\nimport { fpMergePre } from '../../tools/utils';\nimport { doc } from '../../graphqlTypes/doc';\nimport { useStoreModel } from '../../ModelAction/useStore';\nimport { HeaderTitle } from '../../components/HeaderTitle/HeaderTitle';\nimport styled from 'styled-components';\nimport { Button } from '@material-ui/core';\nimport { ls } from '../../tools/dealKey';\nimport { ProductItem } from '../../components/ProductItem/ProductItem';\nimport { BScroller } from '../../components/BScroll/BScroller';\nexport var productListModel = modelFactory('productListModel', {\n  category: {},\n  productList: []\n}, {\n  getCategory: function () {\n    var _getCategory = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(value, option) {\n      var _res$oneCategory;\n\n      var res;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return option.query(doc.oneCategory, {\n                data: value\n              });\n\n            case 2:\n              res = _context.sent;\n              option.setData(fpMergePre({\n                category: (_res$oneCategory = res === null || res === void 0 ? void 0 : res.oneCategory) !== null && _res$oneCategory !== void 0 ? _res$oneCategory : {}\n              }));\n\n            case 4:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    function getCategory(_x, _x2) {\n      return _getCategory.apply(this, arguments);\n    }\n\n    return getCategory;\n  }(),\n  getData: function () {\n    var _getData = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2(value, option) {\n      var _res$productsInCatego;\n\n      var res;\n      return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              _context2.next = 2;\n              return option.query(doc.productsList, {\n                data: value\n              });\n\n            case 2:\n              res = _context2.sent;\n              option.setData(fpMergePre({\n                productList: (_res$productsInCatego = res === null || res === void 0 ? void 0 : res.productsInCategory[0]) !== null && _res$productsInCatego !== void 0 ? _res$productsInCatego : []\n              }));\n\n            case 4:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2);\n    }));\n\n    function getData(_x3, _x4) {\n      return _getData.apply(this, arguments);\n    }\n\n    return getData;\n  }()\n});\nvar HeaderTab = styled.div.withConfig({\n  displayName: \"id__HeaderTab\",\n  componentId: \"sc-1l2qjuw-0\"\n})([\"display:flex;justify-content:space-evenly;\"]);\nvar ListBox = styled.div.withConfig({\n  displayName: \"id__ListBox\",\n  componentId: \"sc-1l2qjuw-1\"\n})([\"padding:20px;display:grid;grid-template-columns:repeat(2,1fr);grid-gap:15px;\"]);\nexport var ProductList = function ProductList() {\n  var _ref, _router$query, _statePLM$category;\n\n  var router = useRouter();\n  var id = (_ref = (_router$query = router.query) === null || _router$query === void 0 ? void 0 : _router$query.id) !== null && _ref !== void 0 ? _ref : '';\n\n  var _useStoreModel = useStoreModel(productListModel),\n      actionsPLM = _useStoreModel.actions,\n      statePLM = _useStoreModel.state;\n\n  useEffect(function () {\n    if (!!id) {\n      actionsPLM.getCategory({\n        id: id\n      });\n      actionsPLM.getData({\n        id: id\n      });\n    }\n  }, [id]);\n  return __jsx(\"div\", null, __jsx(HeaderTitle, {\n    title: (_statePLM$category = statePLM.category) === null || _statePLM$category === void 0 ? void 0 : _statePLM$category.name\n  }), __jsx(HeaderTab, null, __jsx(Button, {\n    fullWidth: true\n  }, ls('排序'), __jsx(SortIcon, null)), __jsx(Button, {\n    fullWidth: true\n  }, ls('筛选'), __jsx(FilterListIcon, null))), __jsx(BScroller, {\n    boxHeight: 'calc(100vh - 100px)'\n  }, __jsx(ListBox, null, statePLM.productList.map(function (value) {\n    return __jsx(ProductItem, {\n      key: \"ProductItem_\".concat(value.id),\n      product: value\n    });\n  }))));\n};","map":null,"metadata":{},"sourceType":"module"}