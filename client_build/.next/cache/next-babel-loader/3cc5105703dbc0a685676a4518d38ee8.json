{"ast":null,"code":"var __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport styled from 'styled-components';\nimport StarRoundedIcon from '@material-ui/icons/StarRounded';\nimport StarBorderRoundedIcon from '@material-ui/icons/StarBorderRounded';\nimport AddCircleOutlineIcon from '@material-ui/icons/AddCircleOutline';\nimport ShoppingCartIcon from '@material-ui/icons/ShoppingCart';\nimport React, { useEffect } from 'react';\nimport { dealImgUrl } from '../../tools/img';\nimport { Button, Card, IconButton } from '@material-ui/core';\nimport { dealMoney } from '../../tools/utils';\nimport { mpStyle } from '../../style/common';\nimport { modelFactory } from '../../ModelAction/modelUtil';\nimport { useStoreModel } from '../../ModelAction/useStore';\nimport { meModel } from '../../view/me/model';\nimport { doc } from '../../graphqlTypes/doc';\nimport { showMessage } from '../Message/Message';\nimport { ls } from '../../tools/dealKey';\nimport { grey } from '@material-ui/core/colors';\nimport { shopCartModel } from '../../view/cart';\nimport { useRouter } from 'next/router';\nimport { updateShopCartModel } from './UpdateShopCart';\nimport { Space } from '../Box/Box';\nexport const productModel = modelFactory('productModel', {}, {\n  updateNumShopCart: async (value, option) => {\n    return await option.mutate(doc.updateNumShopCart, _objectSpread({\n      shopCart: value\n    }, value.number ? {\n      updateNum: value.number\n    } : {}));\n  },\n  updateShopCart: async (value, option) => {\n    return await option.mutate(doc.updateShopCart, {\n      shopCart: value\n    });\n  }\n});\nconst Box = styled(Card).withConfig({\n  displayName: \"ProductItem__Box\",\n  componentId: \"sc-1cef71f-0\"\n})([\"padding:10px 10px 0;> header{width:100%;height:40vw;> img{border-radius:8px;width:100%;height:40vw;}}> main{margin-top:10px;}> footer{margin-top:4px;display:flex;align-items:center;> main{flex-grow:1;}> .MuiButtonBase-root{padding:5px;}}\"]);\nexport const ProductPrice = ({\n  product,\n  priceOutTip\n}) => {\n  return __jsx(React.Fragment, null, __jsx(\"aside\", {\n    style: {\n      display: 'inline-block',\n      fontSize: '12px',\n      textDecoration: 'line-through',\n      flexShrink: 0\n    }\n  }, dealMoney(product === null || product === void 0 ? void 0 : product.priceMarket)), __jsx(\"main\", {\n    style: {\n      display: 'inline-block',\n      fontSize: '14px',\n      marginLeft: '6px',\n      color: mpStyle.red,\n      flexShrink: 0\n    }\n  }, priceOutTip !== null && priceOutTip !== void 0 ? priceOutTip : '', dealMoney(product === null || product === void 0 ? void 0 : product.priceOut)));\n};\nexport const ProductItem = ({\n  product\n}) => {\n  var _product$img, _product$img$, _stateMe$user;\n\n  const {\n    actions: actionsUpdateShopCartModel\n  } = useStoreModel(updateShopCartModel);\n  const {\n    actions: actionsShopCart\n  } = useStoreModel(shopCartModel);\n  const {\n    state: stateMe,\n    actions: actionsMe\n  } = useStoreModel(meModel);\n  useEffect(() => {\n    if (!stateMe.user.id) {\n      actionsMe.getLoginUser();\n    }\n  }, []);\n  const {\n    actions: actionsPM\n  } = useStoreModel(productModel);\n  return __jsx(Box, null, __jsx(\"header\", null, __jsx(\"img\", {\n    src: dealImgUrl(product === null || product === void 0 ? void 0 : (_product$img = product.img) === null || _product$img === void 0 ? void 0 : (_product$img$ = _product$img[0]) === null || _product$img$ === void 0 ? void 0 : _product$img$.url),\n    alt: \"\"\n  })), __jsx(\"main\", null, product.name, product.weight, product.unit), __jsx(\"footer\", null, __jsx(ProductPrice, {\n    product: product\n  }), ((_stateMe$user = stateMe.user) === null || _stateMe$user === void 0 ? void 0 : _stateMe$user.id) && __jsx(IconButton, {\n    onClick: async () => {\n      const res = await actionsUpdateShopCartModel.openClick();\n\n      if ((res === null || res === void 0 ? void 0 : res.num) > 0) {\n        var _await$actionsPM$upda, _await$actionsPM$upda2;\n\n        if ((_await$actionsPM$upda = await actionsPM.updateNumShopCart({\n          product,\n          number: ~~(res === null || res === void 0 ? void 0 : res.num)\n        })) === null || _await$actionsPM$upda === void 0 ? void 0 : (_await$actionsPM$upda2 = _await$actionsPM$upda.updateNumShopCart) === null || _await$actionsPM$upda2 === void 0 ? void 0 : _await$actionsPM$upda2.id) {\n          showMessage('操作成功');\n          actionsShopCart.getList();\n        }\n      }\n    }\n  }, __jsx(ShoppingCartIcon, {\n    color: 'secondary'\n  }))));\n};\nconst RowBox = styled.div.withConfig({\n  displayName: \"ProductItem__RowBox\",\n  componentId: \"sc-1cef71f-1\"\n})([\"display:flex;padding:8px;box-shadow:\", \";border-radius:8px;margin-bottom:8px;\"], mpStyle.shadow['1']);\nconst Img = styled.div.withConfig({\n  displayName: \"ProductItem__Img\",\n  componentId: \"sc-1cef71f-2\"\n})([\"width:35vw;height:35vw;margin-right:8px;> img{width:35vw;height:35vw;}\"]);\nconst LeftBox = styled.div.withConfig({\n  displayName: \"ProductItem__LeftBox\",\n  componentId: \"sc-1cef71f-3\"\n})([\"display:flex;flex-direction:column;flex-grow:1;\"]);\nconst Stock = styled.div.withConfig({\n  displayName: \"ProductItem__Stock\",\n  componentId: \"sc-1cef71f-4\"\n})([\"margin-top:16px;border-radius:8px;padding:2px 6px;background:\", \";color:white;width:max-content;\"], grey[800]);\nconst Price = styled.div.withConfig({\n  displayName: \"ProductItem__Price\",\n  componentId: \"sc-1cef71f-5\"\n})([\"margin-top:16px;flex-grow:1;\"]);\nconst Bun = styled.div.withConfig({\n  displayName: \"ProductItem__Bun\",\n  componentId: \"sc-1cef71f-6\"\n})([\"&&&{.MuiButtonBase-root{padding:4px 0;}}\"]);\nexport const ProductItemOneRow = ({\n  product\n}) => {\n  var _product$img2, _product$img2$, _stateMe$user2;\n\n  const {\n    actions: actionsUpdateShopCartModel\n  } = useStoreModel(updateShopCartModel);\n  const {\n    state: stateMe,\n    actions: actionsMe\n  } = useStoreModel(meModel);\n  const {\n    actions: actionsPM\n  } = useStoreModel(productModel);\n  const {\n    actions: actionsShopCart\n  } = useStoreModel(shopCartModel);\n  useEffect(() => {\n    if (!stateMe.user.id) {\n      actionsMe.getLoginUser();\n    }\n  }, []);\n  return __jsx(RowBox, {\n    key: `ProductItemOneRow_${product.id}`\n  }, __jsx(Img, null, __jsx(\"img\", {\n    src: dealImgUrl(product === null || product === void 0 ? void 0 : (_product$img2 = product.img) === null || _product$img2 === void 0 ? void 0 : (_product$img2$ = _product$img2[0]) === null || _product$img2$ === void 0 ? void 0 : _product$img2$.url),\n    alt: \"\"\n  })), __jsx(LeftBox, null, __jsx(\"main\", null, product.name, product.weight, product.unit), __jsx(Price, null, __jsx(ProductPrice, {\n    product: product\n  })), ((_stateMe$user2 = stateMe.user) === null || _stateMe$user2 === void 0 ? void 0 : _stateMe$user2.id) && __jsx(Bun, null, __jsx(Button, {\n    fullWidth: true,\n    color: 'secondary',\n    variant: 'contained',\n    onClick: async () => {\n      const res = await actionsUpdateShopCartModel.openClick();\n\n      if ((res === null || res === void 0 ? void 0 : res.num) > 0) {\n        var _await$actionsPM$upda3, _await$actionsPM$upda4;\n\n        if ((_await$actionsPM$upda3 = await actionsPM.updateNumShopCart({\n          product,\n          number: ~~(res === null || res === void 0 ? void 0 : res.num)\n        })) === null || _await$actionsPM$upda3 === void 0 ? void 0 : (_await$actionsPM$upda4 = _await$actionsPM$upda3.updateNumShopCart) === null || _await$actionsPM$upda4 === void 0 ? void 0 : _await$actionsPM$upda4.id) {\n          showMessage('操作成功');\n          actionsShopCart.getList();\n        }\n      }\n    }\n  }, __jsx(ShoppingCartIcon, null), ls('加入购物车')))));\n};\nconst GroupBox = styled.div.withConfig({\n  displayName: \"ProductItem__GroupBox\",\n  componentId: \"sc-1cef71f-7\"\n})([\"display:flex;\"]);\nconst GroupImg = styled.div.withConfig({\n  displayName: \"ProductItem__GroupImg\",\n  componentId: \"sc-1cef71f-8\"\n})([\"width:35vw;height:35vw;margin-right:16px;> img{width:35vw;height:35vw;border-radius:8px;}\"]);\nconst RightBox = styled.div.withConfig({\n  displayName: \"ProductItem__RightBox\",\n  componentId: \"sc-1cef71f-9\"\n})([\"display:flex;flex-direction:column;\"]);\nconst Title = styled.div.withConfig({\n  displayName: \"ProductItem__Title\",\n  componentId: \"sc-1cef71f-10\"\n})([\"font-weight:bold;\"]);\nconst MarketPrice = styled.div.withConfig({\n  displayName: \"ProductItem__MarketPrice\",\n  componentId: \"sc-1cef71f-11\"\n})([\"margin-top:8px;color:\", \";> span{text-decoration:line-through;}\"], grey[700]);\nconst OutPrice = styled.div.withConfig({\n  displayName: \"ProductItem__OutPrice\",\n  componentId: \"sc-1cef71f-12\"\n})([\"margin-top:8px;color:\", \";flex-grow:1;\"], mpStyle.red);\nconst Action = styled.div.withConfig({\n  displayName: \"ProductItem__Action\",\n  componentId: \"sc-1cef71f-13\"\n})([\"\"]);\nexport const GroupProductItem = ({\n  product,\n  groupQueue\n}) => {\n  var _product$img3, _product$img3$;\n\n  const {\n    state: stateMe,\n    actions: actionsMe\n  } = useStoreModel(meModel);\n  const router = useRouter();\n  useEffect(() => {\n    if (!stateMe.user.id) {\n      actionsMe.getLoginUser();\n    }\n  }, []);\n  return __jsx(GroupBox, {\n    key: `GroupBox_${product.id}`\n  }, __jsx(GroupImg, null, __jsx(\"img\", {\n    src: dealImgUrl(product === null || product === void 0 ? void 0 : (_product$img3 = product.img) === null || _product$img3 === void 0 ? void 0 : (_product$img3$ = _product$img3[0]) === null || _product$img3$ === void 0 ? void 0 : _product$img3$.url),\n    alt: \"\"\n  })), __jsx(RightBox, null, __jsx(Title, null, product.name, \"(\", product.groupRemark, \"/\", product.groupAmount, product.groupAmountUnitString, \"/\", product.groupPrecisionString, \")\"), (groupQueue === null || groupQueue === void 0 ? void 0 : groupQueue.id) && __jsx(\"div\", null, __jsx(Space, {\n    h: 8\n  }), [...Array(product.groupPrecision)].map((v, i) => i).map(value => {\n    var _groupQueue$sumFillAm;\n\n    return value + 1 > ((_groupQueue$sumFillAm = groupQueue.sumFillAmount) !== null && _groupQueue$sumFillAm !== void 0 ? _groupQueue$sumFillAm : 0) ? __jsx(StarBorderRoundedIcon, {\n      key: `clickStar${value}`,\n      fontSize: 'small',\n      style: {\n        color: grey[700]\n      }\n    }) : __jsx(StarRoundedIcon, {\n      key: `clickStar${value}`,\n      style: {\n        color: '#FDD334'\n      },\n      fontSize: 'small'\n    });\n  })), __jsx(MarketPrice, null, ls('市场价'), __jsx(\"span\", null, dealMoney(product.priceMarket))), __jsx(OutPrice, null, ls('基准价格'), __jsx(\"span\", null, dealMoney(product.priceOut))), __jsx(Action, null, __jsx(Button, {\n    variant: 'contained',\n    color: 'secondary',\n    fullWidth: true,\n    onClick: () => {\n      router.push(`/groupProduct/[id]`, `/groupProduct/${product.id}`);\n    }\n  }, __jsx(AddCircleOutlineIcon, null), ls('拼一个')))));\n};","map":null,"metadata":{},"sourceType":"module"}