{"ast":null,"code":"var __jsx = React.createElement;\nimport React from 'react';\nimport styled from 'styled-components';\nimport { ls } from '../../../../tools/dealKey';\nimport { Space } from '../../../../components/Box/Box';\nimport { mpStyle } from '../../../../style/common';\nimport { CategorySelection, CategorySelectionModel } from './categorySelection';\nimport { modelFactory } from '../../../../ModelAction/modelUtil';\nimport { fpMergePre } from '../../../../tools/utils';\nimport { useStoreModel } from '../../../../ModelAction/useStore';\nimport KeyboardArrowDownIcon from '@material-ui/icons/KeyboardArrowDown';\nimport { Button } from '@material-ui/core';\nexport const HeaderTabModel = modelFactory('HeaderTabModel', {\n  isCategory: false\n}, {\n  switchIsCategory: async (value, option) => {\n    option.setData(fpMergePre({\n      isCategory: value\n    }));\n  }\n});\nconst Box = styled.div.withConfig({\n  displayName: \"headerTab__Box\",\n  componentId: \"sc-4pqp2k-0\"\n})([\"display:flex;\"]);\nconst CategorySelectionBox = styled(CategorySelection).withConfig({\n  displayName: \"headerTab__CategorySelectionBox\",\n  componentId: \"sc-4pqp2k-1\"\n})([\"\"]);\nconst CategoryBox = styled.div.withConfig({\n  displayName: \"headerTab__CategoryBox\",\n  componentId: \"sc-4pqp2k-2\"\n})([\"position:relative;&&&{\", \";.MuiButton-label{\", \";color:\", \";\", \";}}\", \"{position:absolute;background:white;top:40px;width:800px;height:25vw;z-index:9;box-shadow:\", \";}\"], mpStyle.fontType.xxl, mpStyle.fontType.l, mpStyle.black, prop => prop.isAct ? `\n        color: ${mpStyle.red};\n      ` : '', CategorySelectionBox, mpStyle.shadow['1']);\nconst PointBox = styled.a.withConfig({\n  displayName: \"headerTab__PointBox\",\n  componentId: \"sc-4pqp2k-3\"\n})([\"\", \";color:\", \";text-decoration:none;height:43px;display:grid;align-items:center;\"], mpStyle.fontType.l, mpStyle.black);\nconst spaceNum = 60;\nexport const HeaderTab = () => {\n  const {\n    state: stateHeaderTabModel\n  } = useStoreModel(HeaderTabModel);\n  const {\n    actions: actionsCategorySelectionModel,\n    state: stateCategorySelectionModel\n  } = useStoreModel(CategorySelectionModel);\n  return __jsx(Box, null, __jsx(CategoryBox, {\n    isAct: stateHeaderTabModel.isCategory || stateCategorySelectionModel.isShow ? 1 : 0\n  }, __jsx(Button, {\n    onClick: () => {\n      actionsCategorySelectionModel.switchIsShow(true);\n    }\n  }, ls('分类选择'), __jsx(KeyboardArrowDownIcon, {\n    style: stateCategorySelectionModel.isShow ? {\n      transform: 'rotate(180deg)'\n    } : {}\n  })), __jsx(CategorySelectionBox, null)), __jsx(Space, {\n    w: spaceNum\n  }), [['限时抢购', 'LimitTime'], ['热门排行', 'SalesRank'], ['主题甄选', 'ThemeSelection']].map(v => __jsx(React.Fragment, {\n    key: `PointBox${v[0]}`\n  }, __jsx(PointBox, {\n    href: `/pc/home#${v[1]}`\n  }, ls(v[0])), __jsx(Space, {\n    w: spaceNum\n  }))));\n};","map":null,"metadata":{},"sourceType":"module"}