{"ast":null,"code":"import { modelFactory } from '../ModelAction/modelUtil';\nimport { fpMerge, fpSet } from '../tools/utils';\nexport const dialogModelFactory = (name, initData) => modelFactory(`${name}_dialogModelFactory`, {\n  dialogData: initData,\n  open: false,\n  isEdit: -1,\n  openResolve: () => {}\n}, {\n  openClick: (value, {\n    setData\n  }) => {\n    return new Promise(resolve => {\n      setData(preData => fpMerge(preData, {\n        open: true,\n        dialogData: value,\n        isEdit: -1,\n        openResolve: resolve\n      }));\n    });\n  },\n  openEditClick: (value, {\n    setData\n  }) => setData(pre => fpMerge(pre, {\n    open: true,\n    dialogData: value.data,\n    isEdit: value.index\n  })),\n  onClose: (value, {\n    data,\n    setData\n  }) => {\n    data.openResolve(false);\n    setData(pre => fpMerge(fpSet(pre, 'dialogData', {}), {\n      dialogData: initData,\n      open: false\n    }));\n  },\n  setdialog: (value, {\n    setData\n  }) => setData(data => fpMerge(data, {\n    dialogData: value\n  }))\n});","map":{"version":3,"sources":["D:/code/zw/zw_client_web/utils/commonModel/dialog.ts"],"names":["modelFactory","fpMerge","fpSet","dialogModelFactory","name","initData","dialogData","open","isEdit","openResolve","openClick","value","setData","Promise","resolve","preData","openEditClick","pre","data","index","onClose","setdialog"],"mappings":"AAAA,SAAQA,YAAR,QAA2B,0BAA3B;AACA,SAAQC,OAAR,EAAiBC,KAAjB,QAA6B,gBAA7B;AASA,OAAO,MAAMC,kBAAkB,GAAG,CAAIC,IAAJ,EAAkBC,QAAlB,KAAkCL,YAAY,CAAE,GAAEI,IAAK,qBAAT,EAA+B;AAC7GE,EAAAA,UAAU,EAAED,QADiG;AAE7GE,EAAAA,IAAI,EAAE,KAFuG;AAG7GC,EAAAA,MAAM,EAAE,CAAC,CAHoG;AAI7GC,EAAAA,WAAW,EAAG,MAAM,CACnB;AAL4G,CAA/B,EAM7E;AACDC,EAAAA,SAAS,EAAE,CAACC,KAAD,EAAQ;AAACC,IAAAA;AAAD,GAAR,KAAsB;AAC/B,WAAO,IAAIC,OAAJ,CAAYC,OAAO,IAAI;AAC5BF,MAAAA,OAAO,CAACG,OAAO,IAAId,OAAO,CAACc,OAAD,EAAU;AAClCR,QAAAA,IAAI,EAAE,IAD4B;AAElCD,QAAAA,UAAU,EAAEK,KAFsB;AAGlCH,QAAAA,MAAM,EAAE,CAAC,CAHyB;AAIlCC,QAAAA,WAAW,EAAEK;AAJqB,OAAV,CAAnB,CAAP;AAMD,KAPM,CAAP;AAQD,GAVA;AAWDE,EAAAA,aAAa,EAAE,CAACL,KAAD,EAAsC;AAACC,IAAAA;AAAD,GAAtC,KAAoDA,OAAO,CAACK,GAAG,IAAIhB,OAAO,CAACgB,GAAD,EAAM;AAC7FV,IAAAA,IAAI,EAAE,IADuF;AAE7FD,IAAAA,UAAU,EAAEK,KAAK,CAACO,IAF2E;AAG7FV,IAAAA,MAAM,EAAEG,KAAK,CAACQ;AAH+E,GAAN,CAAf,CAXzE;AAgBDC,EAAAA,OAAO,EAAE,CAACT,KAAD,EAAQ;AAACO,IAAAA,IAAD;AAAON,IAAAA;AAAP,GAAR,KAA4B;AACnCM,IAAAA,IAAI,CAACT,WAAL,CAAiB,KAAjB;AACAG,IAAAA,OAAO,CAACK,GAAG,IAAIhB,OAAO,CAACC,KAAK,CAACe,GAAD,EAAM,YAAN,EAAoB,EAApB,CAAN,EAA+B;AACnDX,MAAAA,UAAU,EAAED,QADuC;AAEnDE,MAAAA,IAAI,EAAE;AAF6C,KAA/B,CAAf,CAAP;AAID,GAtBA;AAuBDc,EAAAA,SAAS,EAAE,CAACV,KAAD,EAAiB;AAACC,IAAAA;AAAD,GAAjB,KAA+BA,OAAO,CAACM,IAAI,IAAIjB,OAAO,CAACiB,IAAD,EAAO;AACtEZ,IAAAA,UAAU,EAAEK;AAD0D,GAAP,CAAhB;AAvBhD,CAN6E,CAAzE","sourcesContent":["import {modelFactory} from '../ModelAction/modelUtil'\r\nimport {fpMerge, fpSet} from '../tools/utils'\r\n\r\nexport interface DialogModel<T> {\r\n  open: boolean\r\n  dialogData: T\r\n}\r\n\r\nexport type ResolverFun = (value?: any) => any\r\n\r\nexport const dialogModelFactory = <T>(name: string, initData: T) => modelFactory(`${name}_dialogModelFactory`, {\r\n  dialogData: initData,\r\n  open: false,\r\n  isEdit: -1,\r\n  openResolve: (() => {\r\n  }) as ResolverFun,\r\n}, {\r\n  openClick: (value, {setData}) => {\r\n    return new Promise(resolve => {\r\n      setData(preData => fpMerge(preData, {\r\n        open: true,\r\n        dialogData: value,\r\n        isEdit: -1,\r\n        openResolve: resolve,\r\n      }))\r\n    })\r\n  },\r\n  openEditClick: (value: { data: any; index: number }, {setData}) => setData(pre => fpMerge(pre, {\r\n    open: true,\r\n    dialogData: value.data,\r\n    isEdit: value.index,\r\n  })),\r\n  onClose: (value, {data, setData}) => {\r\n    data.openResolve(false)\r\n    setData(pre => fpMerge(fpSet(pre, 'dialogData', {}), {\r\n      dialogData: initData,\r\n      open: false,\r\n    }))\r\n  },\r\n  setdialog: (value: T | any, {setData}) => setData(data => fpMerge(data, {\r\n    dialogData: value,\r\n  })),\r\n})\r\n"]},"metadata":{},"sourceType":"module"}