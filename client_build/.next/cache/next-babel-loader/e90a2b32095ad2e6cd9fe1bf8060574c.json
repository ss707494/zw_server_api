{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\n\nvar _this = this,\n    _jsxFileName = \"D:\\\\code\\\\zw\\\\zw_client_web\\\\utils\\\\view\\\\me\\\\pickupAddress\\\\list.tsx\",\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\nimport React, { useEffect } from 'react';\nimport { HeaderTitle } from '../../../components/HeaderTitle/HeaderTitle';\nimport { modelFactory } from '../../../ModelAction/modelUtil';\nimport { doc } from '../../../graphqlTypes/doc';\nimport { useStoreModel } from '../../../ModelAction/useStore';\nimport { fpMergePre } from '../../../tools/utils';\nimport styled from 'styled-components';\nimport { Button, ButtonBase } from '@material-ui/core';\nimport { dealImgUrl } from '../../../tools/img';\nimport { grey } from '@material-ui/core/colors';\nimport { ls } from '../../../tools/dealKey';\nvar pickupAddressModel = modelFactory('pickupAddressModel', {\n  list: [],\n  user: {}\n}, {\n  getList: function () {\n    var _getList = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(value, option) {\n      var _res$getDataConfig$va, _res$getDataConfig, _res$getDataConfig$va2;\n\n      var res;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return option.query(doc.pickupAddress, {});\n\n            case 2:\n              res = _context.sent;\n              option.setData(fpMergePre({\n                list: (_res$getDataConfig$va = res === null || res === void 0 ? void 0 : (_res$getDataConfig = res.getDataConfig) === null || _res$getDataConfig === void 0 ? void 0 : (_res$getDataConfig$va2 = _res$getDataConfig.value) === null || _res$getDataConfig$va2 === void 0 ? void 0 : _res$getDataConfig$va2.list) !== null && _res$getDataConfig$va !== void 0 ? _res$getDataConfig$va : [],\n                user: res === null || res === void 0 ? void 0 : res.oneUser\n              }));\n\n            case 4:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    function getList(_x, _x2) {\n      return _getList.apply(this, arguments);\n    }\n\n    return getList;\n  }(),\n  setDefault: function () {\n    var _setDefault = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2(value, option) {\n      return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2);\n    }));\n\n    function setDefault(_x3, _x4) {\n      return _setDefault.apply(this, arguments);\n    }\n\n    return setDefault;\n  }()\n});\nvar ItemBox = styled(ButtonBase).withConfig({\n  displayName: \"list__ItemBox\",\n  componentId: \"gj9w8w-0\"\n})([\"&&&{display:flex;padding:10px 20px;> img{width:18vw;height:18vw;}> section{margin-left:9px;text-align:left;> main,footer{font-size:12px;color:\", \";}}}\"], grey[600]);\n_c = ItemBox;\nvar Box = styled.div.withConfig({\n  displayName: \"list__Box\",\n  componentId: \"gj9w8w-1\"\n})([\"display:grid;grid-template-columns:1fr 20vw;align-items:center;justify-items:start;\"]);\n_c2 = Box;\nexport var PickupAddress = function PickupAddress() {\n  _s();\n\n  var _useStoreModel = useStoreModel(pickupAddressModel),\n      actionsPAM = _useStoreModel.actions,\n      statePAM = _useStoreModel.state;\n\n  useEffect(function () {\n    if (!statePAM.list.length) {\n      actionsPAM.getList();\n    }\n  }, []);\n  console.log(statePAM.user.userInfo);\n  return __jsx(\"div\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 10\n    }\n  }, __jsx(HeaderTitle, {\n    title: '我的取货点',\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 5\n    }\n  }), __jsx(Box, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 5\n    }\n  }, statePAM.list.map(function (value) {\n    var _statePAM$user$userIn;\n\n    return __jsx(React.Fragment, {\n      key: \"PickupAddress_\".concat(value.id),\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 42\n      }\n    }, __jsx(ItemBox, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 9\n      }\n    }, __jsx(\"img\", {\n      src: dealImgUrl(value.imgUrl),\n      alt: \"\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 11\n      }\n    }), __jsx(\"section\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 11\n      }\n    }, __jsx(\"header\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 13\n      }\n    }, value.fullName), __jsx(\"main\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 13\n      }\n    }, \"\".concat(value.province, \" \").concat(value.city)), __jsx(\"footer\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 13\n      }\n    }, \"\".concat(value.streetAddress)))), ((_statePAM$user$userIn = statePAM.user.userInfo) === null || _statePAM$user$userIn === void 0 ? void 0 : _statePAM$user$userIn.pickupAddressId) === value.id && __jsx(\"section\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 67\n      }\n    }, ls('默认地址')) || __jsx(Button, {\n      onClick: function onClick() {\n        return actionsPAM.setDefault(value);\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 9\n      }\n    }, ls('设为默认')));\n  })));\n};\n\n_s(PickupAddress, \"b0Y6TRZ1AuVhP5jqpKnGk1ik1NA=\", false, function () {\n  return [useStoreModel];\n});\n\n_c3 = PickupAddress;\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"ItemBox\");\n$RefreshReg$(_c2, \"Box\");\n$RefreshReg$(_c3, \"PickupAddress\");","map":{"version":3,"sources":["D:/code/zw/zw_client_web/utils/view/me/pickupAddress/list.tsx"],"names":["React","useEffect","HeaderTitle","modelFactory","doc","useStoreModel","fpMergePre","styled","Button","ButtonBase","dealImgUrl","grey","ls","pickupAddressModel","list","user","getList","value","option","query","pickupAddress","res","setData","getDataConfig","oneUser","setDefault","ItemBox","Box","div","PickupAddress","actionsPAM","actions","statePAM","state","length","console","log","userInfo","map","id","imgUrl","fullName","province","city","streetAddress","pickupAddressId"],"mappings":"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","sourcesContent":["import React, {useEffect} from 'react'\r\nimport {HeaderTitle} from '../../../components/HeaderTitle/HeaderTitle'\r\nimport {modelFactory} from '../../../ModelAction/modelUtil'\r\nimport {doc} from '../../../graphqlTypes/doc'\r\nimport {useStoreModel} from '../../../ModelAction/useStore'\r\nimport {fpMergePre} from '../../../tools/utils'\r\nimport styled from 'styled-components'\r\nimport {Button, ButtonBase} from '@material-ui/core'\r\nimport {dealImgUrl} from '../../../tools/img'\r\nimport {grey} from '@material-ui/core/colors'\r\nimport {User} from '../../../graphqlTypes/types'\r\nimport {ls} from '../../../tools/dealKey'\r\n\r\nconst pickupAddressModel = modelFactory('pickupAddressModel', {\r\n  list: [],\r\n  user: {} as User,\r\n}, {\r\n  getList: async (value, option) => {\r\n    const res = await option.query(doc.pickupAddress, {})\r\n    option.setData(fpMergePre({\r\n      list: res?.getDataConfig?.value?.list ?? [],\r\n      user: res?.oneUser,\r\n    }))\r\n  },\r\n  setDefault: async (value, option) => {\r\n\r\n  },\r\n\r\n})\r\n\r\nconst ItemBox = styled(ButtonBase)`\r\n  &&& {\r\n    display: flex;\r\n    padding: 10px 20px;\r\n    > img {\r\n      width: 18vw;\r\n      height: 18vw;\r\n    }\r\n    > section {\r\n      margin-left: 9px;\r\n      text-align: left;\r\n      > main, footer {\r\n        font-size: 12px;\r\n        color: ${grey[600]};\r\n      }\r\n    }\r\n  }\r\n`\r\nconst Box = styled.div`\r\n  display: grid;\r\n  grid-template-columns: 1fr 20vw;\r\n  align-items: center;\r\n  justify-items: start;\r\n`\r\n\r\nexport const PickupAddress = () => {\r\n  const {actions: actionsPAM, state: statePAM} = useStoreModel(pickupAddressModel)\r\n  useEffect(() => {\r\n    if (!statePAM.list.length) {\r\n      actionsPAM.getList()\r\n    }\r\n  }, [])\r\n\r\n  console.log(statePAM.user.userInfo)\r\n\r\n  return <div>\r\n    <HeaderTitle\r\n        title={'我的取货点'}\r\n    />\r\n    <Box>\r\n      {statePAM.list.map((value: any) => <React.Fragment key={`PickupAddress_${value.id}`}>\r\n        <ItemBox>\r\n          <img src={dealImgUrl(value.imgUrl)}\r\n               alt=\"\"/>\r\n          <section>\r\n            <header>{value.fullName}</header>\r\n            <main>{`${value.province} ${value.city}`}</main>\r\n            <footer>\r\n              {`${value.streetAddress}`}\r\n            </footer>\r\n          </section>\r\n        </ItemBox>\r\n        {(statePAM.user.userInfo?.pickupAddressId === value.id && <section>{ls('默认地址')}</section>) ||\r\n        <Button\r\n            onClick={() => actionsPAM.setDefault(value)}\r\n        >{ls('设为默认')}</Button>\r\n        }\r\n      </React.Fragment>)}\r\n    </Box>\r\n  </div>\r\n}\r\n"]},"metadata":{},"sourceType":"module"}