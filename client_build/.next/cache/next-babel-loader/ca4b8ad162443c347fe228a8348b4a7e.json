{"ast":null,"code":"var __jsx = React.createElement;\nimport styled from 'styled-components';\nimport { mpStyle, RedBox } from '../../../../style/common';\nimport { useStoreModel } from '../../../../ModelAction/useStore';\nimport { shopCartModel } from '../../../m/cart';\nimport { productModel } from '../../../../components/ProductItem/ProductItem';\nimport { ll } from '../../../../tools/dealKey';\nimport React from 'react';\nimport { Space } from '../../../../components/Box/Box';\nimport { dealImgUrl } from '../../../../tools/img';\nimport { dealMaybeNumber, dealMoney } from '../../../../tools/utils';\nimport { Button, IconButton } from '@material-ui/core';\nimport RemoveIcon from '@material-ui/icons/Remove';\nimport AddIcon from '@material-ui/icons/Add';\nconst CartProductTableBox = styled.div.withConfig({\n  displayName: \"cartProductTable__CartProductTableBox\",\n  componentId: \"r9h8n9-0\"\n})([\"display:grid;grid-template-columns:minmax(max-content,3fr) repeat(5,1fr);align-items:center;justify-items:center;\"]);\nconst TableHeader = styled.div.withConfig({\n  displayName: \"cartProductTable__TableHeader\",\n  componentId: \"r9h8n9-1\"\n})([\"height:\", \";display:flex;align-items:center;\"], mpStyle.spacePx.l);\nconst UpdateNumber = styled.div.withConfig({\n  displayName: \"cartProductTable__UpdateNumber\",\n  componentId: \"r9h8n9-2\"\n})([\"\"]);\nconst InfoBox = styled.div.withConfig({\n  displayName: \"cartProductTable__InfoBox\",\n  componentId: \"r9h8n9-3\"\n})([\"height:120px;justify-self:start;display:flex;align-items:center;> img{width:60px;height:80px;}\"]);\nexport const CartProductTable = () => {\n  const {\n    actions: actionsShopCartModel,\n    state: stateShopCartModel\n  } = useStoreModel(shopCartModel);\n  const {\n    actions: actionsProductModel\n  } = useStoreModel(productModel);\n  return __jsx(CartProductTableBox, null, ['商品信息', '单价', '数量', '重量', '小计', '操作'].map(v => __jsx(TableHeader, {\n    key: `TableHeader${v}`\n  }, ll(v))), stateShopCartModel.shopCartList.map(shopCart => {\n    var _shopCart$product, _shopCart$product$img, _shopCart$product$img2, _shopCart$number;\n\n    const product = shopCart.product;\n    return __jsx(React.Fragment, {\n      key: `stateShopCartModel${shopCart.id}`\n    }, __jsx(InfoBox, null, __jsx(Space, {\n      w: mpStyle.space.xxl\n    }), __jsx(\"img\", {\n      src: dealImgUrl((_shopCart$product = shopCart.product) === null || _shopCart$product === void 0 ? void 0 : (_shopCart$product$img = _shopCart$product.img) === null || _shopCart$product$img === void 0 ? void 0 : (_shopCart$product$img2 = _shopCart$product$img[0]) === null || _shopCart$product$img2 === void 0 ? void 0 : _shopCart$product$img2.url),\n      alt: \"\"\n    }), __jsx(Space, {\n      w: mpStyle.space.l\n    }), __jsx(\"main\", null, product === null || product === void 0 ? void 0 : product.name)), __jsx(RedBox, null, dealMoney(product === null || product === void 0 ? void 0 : product.priceOut)), __jsx(UpdateNumber, null, __jsx(IconButton, {\n      disabled: ((_shopCart$number = shopCart === null || shopCart === void 0 ? void 0 : shopCart.number) !== null && _shopCart$number !== void 0 ? _shopCart$number : 0) <= 1,\n      size: 'small',\n      onClick: async () => {\n        await actionsProductModel.updateNumShopCart({\n          product,\n          number: -1\n        });\n        actionsShopCartModel.getList();\n      }\n    }, __jsx(RemoveIcon, null)), shopCart.number, __jsx(IconButton, {\n      size: 'small',\n      onClick: async () => {\n        await actionsProductModel.updateNumShopCart({\n          product\n        });\n        actionsShopCartModel.getList();\n      }\n    }, __jsx(AddIcon, null))), __jsx(RedBox, null, product === null || product === void 0 ? void 0 : product.weight, product === null || product === void 0 ? void 0 : product.unit), __jsx(RedBox, null, dealMoney(dealMaybeNumber(product === null || product === void 0 ? void 0 : product.priceOut) * dealMaybeNumber(shopCart === null || shopCart === void 0 ? void 0 : shopCart.number))), __jsx(Button, {\n      size: 'small',\n      variant: 'outlined',\n      onClick: async () => {\n        await actionsShopCartModel.moveToNext({\n          shopCart\n        });\n        actionsShopCartModel.getList();\n      }\n    }, ll('下次购买')));\n  }));\n};","map":null,"metadata":{},"sourceType":"module"}