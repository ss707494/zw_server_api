{"ast":null,"code":"var __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { useEffect, useRef } from 'react';\nimport BetterScroll from 'better-scroll';\nimport { useStoreModel } from '../../ModelAction/useStore';\nimport { fpMergePre } from '../../tools/utils';\nimport { modelFactory } from '../../ModelAction/modelUtil';\nimport styled from 'styled-components';\nconst Box = styled.div.withConfig({\n  displayName: \"BScroller__Box\",\n  componentId: \"sc-9ed2ib-0\"\n})([\"\", \"\"], ({\n  boxHeight,\n  isX,\n  boxWidth\n}) => `\n    height: ${boxHeight || '100vh'};\n    width: ${isX && boxWidth ? `${boxWidth}` : 'auto'};\n    overflow: hidden;\n  `);\nexport const bScrollModel = modelFactory('bScrollModel', {\n  scroll: {}\n}, {\n  setScroll: (value, option) => {\n    option.setData(fpMergePre({\n      scroll: value\n    }));\n  }\n});\nexport const BScroller = ({\n  isX,\n  children,\n  boxHeight,\n  boxWidth\n}) => {\n  const {\n    state: bsState,\n    actions: bsActions\n  } = useStoreModel(bScrollModel);\n  const scrollRef = useRef(null);\n  useEffect(() => {\n    // @ts-ignore\n    const scroll = new BetterScroll(scrollRef.current, _objectSpread(_objectSpread({\n      click: true,\n      scrollY: true,\n      taps: true\n    }, isX ? {\n      scrollX: true,\n      scrollY: false\n    } : {}), {}, {\n      preventDefaultException: {\n        tagName: /^(INPUT|TEXTAREA|BUTTON|SELECT)$/,\n        className: /(^|\\s).*(MuiTextField-root|MuiSelect-select).*(\\s|$)/\n      }\n    }));\n    bsActions.setScroll(scroll);\n    return () => {\n      scroll.stop();\n      scroll.destroy();\n    };\n  }, []);\n  return __jsx(Box, {\n    isX: isX,\n    boxHeight: boxHeight,\n    boxWidth: boxWidth,\n    ref: scrollRef\n  }, __jsx(\"div\", {\n    style: isX ? {\n      display: 'inline-block'\n    } : {}\n  }, children));\n};","map":null,"metadata":{},"sourceType":"module"}