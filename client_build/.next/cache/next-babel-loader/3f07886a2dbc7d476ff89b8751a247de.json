{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/esm/toConsumableArray\";\nimport format from 'date-fns/format';\nimport set from 'lodash/set';\nimport { cloneDeep, isFunction, get, isArray, mergeWith, isString } from 'lodash';\nexport var getObjectURL = function getObjectURL(file) {\n  var _ref, _window$createObjectU, _window, _window$createObjectU2, _window2, _window2$URL, _window2$URL$createOb, _window3, _window3$webkitURL, _window3$webkitURL$cr;\n\n  // @ts-ignore\n  return (_ref = (_window$createObjectU = (_window = window) === null || _window === void 0 ? void 0 : (_window$createObjectU2 = _window.createObjectURL) === null || _window$createObjectU2 === void 0 ? void 0 : _window$createObjectU2.call(_window, file)) !== null && _window$createObjectU !== void 0 ? _window$createObjectU : (_window2 = window) === null || _window2 === void 0 ? void 0 : (_window2$URL = _window2.URL) === null || _window2$URL === void 0 ? void 0 : (_window2$URL$createOb = _window2$URL.createObjectURL) === null || _window2$URL$createOb === void 0 ? void 0 : _window2$URL$createOb.call(_window2$URL, file)) !== null && _ref !== void 0 ? _ref : (_window3 = window) === null || _window3 === void 0 ? void 0 : (_window3$webkitURL = _window3.webkitURL) === null || _window3$webkitURL === void 0 ? void 0 : (_window3$webkitURL$cr = _window3$webkitURL.createObjectURL) === null || _window3$webkitURL$cr === void 0 ? void 0 : _window3$webkitURL$cr.call(_window3$webkitURL, file);\n};\nexport var parseFloatForInput = function parseFloatForInput(value) {\n  if (value === '-' || value === '') return value;\n\n  try {\n    return parseFloat(value);\n  } catch (e) {\n    console.error(e);\n  }\n};\nexport var fpSet = function fpSet(origin, path, value) {\n  var newData = cloneDeep(origin);\n\n  if (isFunction(value)) {\n    var oldData = get(origin, path);\n    set(newData, path, value(oldData));\n  } else {\n    set(newData, path, value);\n  }\n\n  return newData;\n};\nexport var delay = function delay(time) {\n  return new Promise(function (resolve) {\n    return setTimeout(resolve, time);\n  });\n};\nexport var fpSetPre = function fpSetPre(path, value) {\n  return function (origin) {\n    var newData = cloneDeep(origin);\n\n    if (isFunction(value)) {\n      var oldData = get(origin, path);\n      set(newData, path, value(oldData));\n    } else {\n      set(newData, path, value);\n    }\n\n    return newData;\n  };\n};\n\nvar customizer = function customizer(objValue, srcValue) {\n  if (isArray(srcValue)) {\n    return srcValue;\n  }\n};\n\nexport var fpMerge = function fpMerge(origin, newValue) {\n  return mergeWith({}, origin, newValue, customizer);\n};\nexport var fpMergePre = function fpMergePre(newValue) {\n  return function (pre) {\n    return mergeWith({}, pre, newValue, customizer);\n  };\n};\nexport var fpRemove = function fpRemove(arr, index) {\n  if (!arr) return [];\n  return [].concat(_toConsumableArray(arr === null || arr === void 0 ? void 0 : arr.slice(0, index)), _toConsumableArray(arr === null || arr === void 0 ? void 0 : arr.slice(index + 1, arr === null || arr === void 0 ? void 0 : arr.length)));\n};\nexport var dealNumberZero = function dealNumberZero(length) {\n  return function (num) {\n    var _s = \"\".concat(num !== null && num !== void 0 ? num : '');\n\n    return Array(length - _s.length).fill('0').join('') + _s;\n  };\n};\nexport var formatDate = function formatDate() {\n  var date = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : '';\n  var formatString = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 'YYYY-MM-dd HH:mm:ss';\n\n  if (!date) {\n    return '';\n  }\n\n  if (isString(date)) {\n    return format(new Date(date), formatString, {\n      useAdditionalDayOfYearTokens: true,\n      useAdditionalWeekYearTokens: true\n    });\n  }\n\n  return isNaN(date) ? '' : format(date, formatString, {\n    useAdditionalDayOfYearTokens: true,\n    useAdditionalWeekYearTokens: true\n  });\n};\nexport var dealNonBooleanProps = function dealNonBooleanProps(value) {\n  return !!value ? 1 : 0;\n};\nexport var formatMoney = function formatMoney(amount) {\n  var decimalCount = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 2;\n  var decimal = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : \".\";\n  var thousands = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : \",\";\n\n  try {\n    decimalCount = Math.abs(decimalCount);\n    decimalCount = isNaN(decimalCount) ? 2 : decimalCount;\n    var negativeSign = amount < 0 ? \"-\" : \"\";\n    var i = parseInt(amount = Math.abs(Number(amount) || 0).toFixed(decimalCount)).toString();\n    var j = i.length > 3 ? i.length % 3 : 0; // @ts-ignore\n\n    return negativeSign + (j ? i.substr(0, j) + thousands : '') + i.substr(j).replace(/(\\d{3})(?=\\d)/g, \"$1\" + thousands) + (decimalCount ? decimal + Math.abs(amount - i).toFixed(decimalCount).slice(2) : \"\");\n  } catch (e) {\n    console.log(e);\n  }\n};\nexport var dealMoney = function dealMoney(amount) {\n  var pre = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : '';\n  return \"\".concat(pre, \"$ \").concat(formatMoney(amount));\n};\nexport var dealMaybeNumber = function dealMaybeNumber(num) {\n  return num !== null && num !== void 0 ? num : 0;\n};\nexport var getLastNumber = function getLastNumber(str, num) {\n  return str.slice(str.length - num);\n};\nexport default {\n  getObjectURL: getObjectURL\n};\nexport var dealUrlQuery = function dealUrlQuery(queryObj) {\n  return \"?\".concat(Object.keys(queryObj).map(function (value) {\n    return \"\".concat(value, \"=\").concat(queryObj[value]);\n  }).join('&'));\n};\nexport var isPc = function isPc() {\n  return /\\/pc\\//.test(location.href);\n};","map":null,"metadata":{},"sourceType":"module"}