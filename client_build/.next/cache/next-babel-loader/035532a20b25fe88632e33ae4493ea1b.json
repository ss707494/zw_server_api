{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport Router from 'next/router';\nimport { fpSetPre } from '../../tools/utils';\nimport { setToken } from '../../tools/token';\nimport { showMessage } from '../../components/Message/Message';\nimport { doc } from '../../graphqlTypes/doc';\nimport { modelFactory } from '../../ModelAction/modelUtil';\nimport { ls } from '../../tools/dealKey';\nexport var loginModel = modelFactory('loginModel', {\n  form: {\n    name: '',\n    password: ''\n  }\n}, {\n  setForm: function setForm(_ref, option) {\n    var _ref2 = _slicedToArray(_ref, 2),\n        path = _ref2[0],\n        value = _ref2[1];\n\n    option.setData(fpSetPre(\"form.\".concat(path), value));\n  },\n  login: function login(value, option) {\n    var _res$login;\n\n    var form, res, _res$login2, _res$login3;\n\n    return _regeneratorRuntime.async(function login$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            form = option.data.form;\n\n            if (!(!(form === null || form === void 0 ? void 0 : form.name) || !(form === null || form === void 0 ? void 0 : form.password))) {\n              _context.next = 3;\n              break;\n            }\n\n            return _context.abrupt(\"return\", showMessage(ls('请填写表单')));\n\n          case 3:\n            _context.next = 5;\n            return _regeneratorRuntime.awrap(option.query(doc.login, {\n              data: _objectSpread({}, form)\n            }));\n\n          case 5:\n            res = _context.sent;\n\n            if (!(res === null || res === void 0 ? void 0 : (_res$login = res.login) === null || _res$login === void 0 ? void 0 : _res$login.token)) {\n              _context.next = 11;\n              break;\n            }\n\n            setToken(res === null || res === void 0 ? void 0 : (_res$login2 = res.login) === null || _res$login2 === void 0 ? void 0 : _res$login2.token);\n            setToken(res === null || res === void 0 ? void 0 : (_res$login3 = res.login) === null || _res$login3 === void 0 ? void 0 : _res$login3.refreshtoken, 'refreshtoken');\n            _context.next = 11;\n            return _regeneratorRuntime.awrap(Router.push('/home'));\n\n          case 11:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  },\n  goToSignin: function goToSignin(value, option) {\n    return _regeneratorRuntime.async(function goToSignin$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            _context2.next = 2;\n            return _regeneratorRuntime.awrap(Router.push('/register'));\n\n          case 2:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  },\n  goHome: function goHome(value, option) {\n    return _regeneratorRuntime.async(function goHome$(_context3) {\n      while (1) {\n        switch (_context3.prev = _context3.next) {\n          case 0:\n            _context3.next = 2;\n            return _regeneratorRuntime.awrap(Router.push('/home/[appModule]', '/home/categorySelection'));\n\n          case 2:\n          case \"end\":\n            return _context3.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  }\n});","map":null,"metadata":{},"sourceType":"module"}