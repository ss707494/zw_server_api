{"ast":null,"code":"var _jsxFileName = \"D:\\\\code\\\\zw\\\\zw_client_web\\\\utils\\\\view\\\\home\\\\components\\\\ThemeSelection\\\\ThemeSelection.tsx\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { useEffect } from 'react';\nimport { modelFactory } from '../../../../ModelAction/modelUtil';\nimport { doc } from '../../../../graphqlTypes/doc';\nimport { fpMergePre } from '../../../../tools/utils';\nimport { useStoreModel } from '../../../../ModelAction/useStore';\nimport { ProductItem } from '../../../../components/ProductItem/ProductItem';\nimport { DictTypeEnum } from '../../../../ss_common/enum';\nimport { ls } from '../../../../tools/dealKey';\nimport styled from 'styled-components';\nimport { dealImgUrl } from '../../../../tools/img';\nconst themeSelectionModel = modelFactory('themeSelectionModel', {\n  themeSelectionData: [],\n  productListForTheme: {}\n}, {\n  getData: async (value, option) => {\n    var _res$getDataConfig$va, _res$getDataConfig, _res$getDataConfig$va2;\n\n    const res = await option.query(doc.getDataConfig, {\n      data: {\n        type: DictTypeEnum.PromotionThemeSelect\n      }\n    });\n    const themeList = (_res$getDataConfig$va = res === null || res === void 0 ? void 0 : (_res$getDataConfig = res.getDataConfig) === null || _res$getDataConfig === void 0 ? void 0 : (_res$getDataConfig$va2 = _res$getDataConfig.value) === null || _res$getDataConfig$va2 === void 0 ? void 0 : _res$getDataConfig$va2.list) !== null && _res$getDataConfig$va !== void 0 ? _res$getDataConfig$va : [];\n    const productRes = await option.query(doc.productListByIds, {\n      ids: themeList.reduce((pre, cur) => {\n        var _cur$selectProductLis;\n\n        return [...pre, ...((_cur$selectProductLis = cur === null || cur === void 0 ? void 0 : cur.selectProductList) !== null && _cur$selectProductLis !== void 0 ? _cur$selectProductLis : [])];\n      }, [])\n    });\n    option.setData(fpMergePre({\n      themeSelectionData: themeList,\n      productListForTheme: themeList.reduce((pre, cur) => {\n        var _cur$selectProductLis2;\n\n        return _objectSpread(_objectSpread({}, pre), {}, {\n          [cur.id]: cur === null || cur === void 0 ? void 0 : (_cur$selectProductLis2 = cur.selectProductList) === null || _cur$selectProductLis2 === void 0 ? void 0 : _cur$selectProductLis2.map(id => {\n            var _productRes$productLi, _productRes$productLi2, _productRes$productLi3;\n\n            return (_productRes$productLi = productRes === null || productRes === void 0 ? void 0 : (_productRes$productLi2 = productRes.productListByIds) === null || _productRes$productLi2 === void 0 ? void 0 : (_productRes$productLi3 = _productRes$productLi2.list) === null || _productRes$productLi3 === void 0 ? void 0 : _productRes$productLi3.find(v1 => (v1 === null || v1 === void 0 ? void 0 : v1.id) === id)) !== null && _productRes$productLi !== void 0 ? _productRes$productLi : null;\n          }).filter(v => v)\n        });\n      }, {})\n    }));\n  }\n});\nconst Title = styled.div`\n  font-size: 18px;\n  font-weight: bold;\n  padding-left: 20px;\n`;\nconst Theme = styled.div`\n  width: 100vw;\n  position: relative;\n  left: -3.125vw;\n  margin-top: 16px;\n  > img {\n    width: 100vw;\n    height: 30vw;\n  }\n  > main, aside {\n    color: white;\n    text-shadow: 0.1em 0.1em 0.2em black;\n    position: absolute;\n  }\n  > main {\n    top: 8vw;\n    left: 20px;\n    font-size: 20px;\n    font-weight: bold;\n  }\n  > aside {\n    top: 16vw;\n    left: 20px;\n    font-size: 16px;\n  }\n`;\nconst ProductList = styled.div`\n  display: flex;\n  overflow-x: auto;\n  width: 100vw;\n  position: relative;\n  left: -3.125vw;\n  > * {\n    margin: 8px 16px 8px 0;\n    flex-shrink: 0;\n    flex-basis: 60vw;\n  }\n`;\nexport const ThemeSelection = () => {\n  const {\n    state: statePromotionFlashSale,\n    actions: actionsPromotionFlashSale\n  } = useStoreModel(themeSelectionModel);\n  useEffect(() => {\n    actionsPromotionFlashSale.getData();\n  }, []);\n  console.log(statePromotionFlashSale.productListForTheme);\n  console.log(statePromotionFlashSale.themeSelectionData[0]);\n  return __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 10\n    }\n  }, __jsx(Title, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 5\n    }\n  }, ls('主题甄选')), statePromotionFlashSale.themeSelectionData.map(v => __jsx(React.Fragment, {\n    key: `themeSelectionDataImg${v.id}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 58\n    }\n  }, __jsx(Theme, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 7\n    }\n  }, __jsx(\"img\", {\n    src: dealImgUrl(v.imgUrl),\n    alt: '',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 9\n    }\n  }), __jsx(\"main\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 9\n    }\n  }, v.title), __jsx(\"aside\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 9\n    }\n  }, v.remark)), __jsx(ProductList, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 7\n    }\n  }, statePromotionFlashSale.productListForTheme[v.id].map(v => __jsx(ProductItem, {\n    key: `statePromotionFlashSaleProductItem_${v.id}`,\n    product: v,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 69\n    }\n  }))))));\n};","map":{"version":3,"sources":["D:/code/zw/zw_client_web/utils/view/home/components/ThemeSelection/ThemeSelection.tsx"],"names":["React","useEffect","modelFactory","doc","fpMergePre","useStoreModel","ProductItem","DictTypeEnum","ls","styled","dealImgUrl","themeSelectionModel","themeSelectionData","productListForTheme","getData","value","option","res","query","getDataConfig","data","type","PromotionThemeSelect","themeList","list","productRes","productListByIds","ids","reduce","pre","cur","selectProductList","setData","id","map","find","v1","filter","v","Title","div","Theme","ProductList","ThemeSelection","state","statePromotionFlashSale","actions","actionsPromotionFlashSale","console","log","imgUrl","title","remark"],"mappings":"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","sourcesContent":["import React, {useEffect} from 'react'\r\nimport {modelFactory} from '../../../../ModelAction/modelUtil'\r\nimport {doc} from '../../../../graphqlTypes/doc'\r\nimport {fpMergePre} from '../../../../tools/utils'\r\nimport {useStoreModel} from '../../../../ModelAction/useStore'\r\nimport {DataConfigItemInput, Product} from '../../../../graphqlTypes/types'\r\nimport {ProductItem, ProductItemOneRow} from '../../../../components/ProductItem/ProductItem'\r\nimport {DictTypeEnum} from '../../../../ss_common/enum'\r\nimport {ls} from '../../../../tools/dealKey'\r\nimport styled from 'styled-components'\r\nimport {dealImgUrl} from '../../../../tools/img'\r\nimport {grey} from '@material-ui/core/colors'\r\n\r\nconst themeSelectionModel = modelFactory('themeSelectionModel', {\r\n  themeSelectionData: [] as any[],\r\n  productListForTheme: {} as {\r\n    [key in string]: Product[]\r\n  },\r\n}, {\r\n  getData: async (value, option) => {\r\n    const res = await option.query(doc.getDataConfig, {\r\n      data: {\r\n        type: DictTypeEnum.PromotionThemeSelect,\r\n      } as DataConfigItemInput,\r\n    })\r\n    const themeList = res?.getDataConfig?.value?.list ?? []\r\n    const productRes = await option.query(doc.productListByIds, {\r\n      ids: themeList.reduce((pre: any, cur: any) => {\r\n        return [\r\n          ...pre,\r\n          ...cur?.selectProductList ?? [],\r\n        ]\r\n      }, []),\r\n    })\r\n    option.setData(fpMergePre({\r\n      themeSelectionData: themeList,\r\n      productListForTheme: themeList.reduce((pre: any, cur: any) => {\r\n        return {\r\n          ...pre,\r\n          [cur.id]: cur?.selectProductList?.map((id: string) => productRes?.productListByIds?.list?.find((v1: Product) => v1?.id === id) ?? null).filter((v: any) => v),\r\n        }\r\n      }, {}),\r\n    }))\r\n  },\r\n\r\n})\r\n\r\nconst Title = styled.div`\r\n  font-size: 18px;\r\n  font-weight: bold;\r\n  padding-left: 20px;\r\n`\r\nconst Theme = styled.div`\r\n  width: 100vw;\r\n  position: relative;\r\n  left: -3.125vw;\r\n  margin-top: 16px;\r\n  > img {\r\n    width: 100vw;\r\n    height: 30vw;\r\n  }\r\n  > main, aside {\r\n    color: white;\r\n    text-shadow: 0.1em 0.1em 0.2em black;\r\n    position: absolute;\r\n  }\r\n  > main {\r\n    top: 8vw;\r\n    left: 20px;\r\n    font-size: 20px;\r\n    font-weight: bold;\r\n  }\r\n  > aside {\r\n    top: 16vw;\r\n    left: 20px;\r\n    font-size: 16px;\r\n  }\r\n`\r\nconst ProductList = styled.div`\r\n  display: flex;\r\n  overflow-x: auto;\r\n  width: 100vw;\r\n  position: relative;\r\n  left: -3.125vw;\r\n  > * {\r\n    margin: 8px 16px 8px 0;\r\n    flex-shrink: 0;\r\n    flex-basis: 60vw;\r\n  }\r\n`\r\n\r\nexport const ThemeSelection = () => {\r\n  const {state: statePromotionFlashSale, actions: actionsPromotionFlashSale} = useStoreModel(themeSelectionModel)\r\n  useEffect(() => {\r\n    actionsPromotionFlashSale.getData()\r\n  }, [])\r\n  console.log(statePromotionFlashSale.productListForTheme)\r\n  console.log(statePromotionFlashSale.themeSelectionData[0])\r\n\r\n  return <div>\r\n    <Title>{ls('主题甄选')}</Title>\r\n    {statePromotionFlashSale.themeSelectionData.map(v => <React.Fragment\r\n        key={`themeSelectionDataImg${v.id}`}\r\n    >\r\n      <Theme>\r\n        <img\r\n            src={dealImgUrl(v.imgUrl)}\r\n            alt={''}\r\n        />\r\n        <main>{v.title}</main>\r\n        <aside>{v.remark}</aside>\r\n      </Theme>\r\n      <ProductList>\r\n        {statePromotionFlashSale.productListForTheme[v.id].map(v => <ProductItem\r\n            key={`statePromotionFlashSaleProductItem_${v.id}`}\r\n            product={v}/>)}\r\n      </ProductList>\r\n    </React.Fragment>)}\r\n  </div>\r\n}\r\n"]},"metadata":{},"sourceType":"module"}