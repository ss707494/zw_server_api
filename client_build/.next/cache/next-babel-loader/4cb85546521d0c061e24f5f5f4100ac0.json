{"ast":null,"code":"var _jsxFileName = \"D:\\\\code\\\\zw\\\\zw_client_web\\\\utils\\\\view\\\\me\\\\myInfo\\\\updatePassword.tsx\";\nvar __jsx = React.createElement;\nimport React from 'react';\nimport { HeaderTitle } from '../../../components/HeaderTitle/HeaderTitle';\nimport { SigninInput, SigninLabel } from '../../register';\nimport { ls } from '../../../tools/dealKey';\nimport { modelFactory } from '../../../ModelAction/modelUtil';\nimport { useStoreModel } from '../../../ModelAction/useStore';\nimport { fpSetPre } from '../../../tools/utils';\nconst updatePasswordModel = modelFactory('updatePasswordModel', {\n  form: {\n    oldPassword: '',\n    newPassword: '',\n    confirmPassword: ''\n  }\n}, {\n  setForm: ([path, value], option) => {\n    option.setData(fpSetPre(`form.${path}`, value));\n  }\n});\nexport const UpdatePassword = () => {\n  const {\n    state: stateUPM,\n    actions: actionsUPM\n  } = useStoreModel(updatePasswordModel);\n  return __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 10\n    }\n  }, __jsx(HeaderTitle, {\n    title: '修改密码',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 5\n    }\n  }), __jsx(SigninLabel, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 5\n    }\n  }, ls('原始密码')), __jsx(SigninInput, {\n    value: stateUPM.form.oldPassword,\n    onChange: event => actionsUPM.setForm(['name', event.target.value]),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 5\n    }\n  }), __jsx(SigninLabel, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 5\n    }\n  }, ls('新密码')), __jsx(SigninInput, {\n    value: stateUPM.form.newPassword,\n    onChange: event => actionsUPM.setForm(['newPassword', event.target.value]),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 5\n    }\n  }), __jsx(SigninLabel, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 5\n    }\n  }, ls('确认密码')), __jsx(SigninInput, {\n    value: stateUPM.form.confirmPassword,\n    onChange: event => actionsUPM.setForm(['confirmPassword', event.target.value]),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 5\n    }\n  }), \"UpdatePassword\");\n};","map":{"version":3,"sources":["D:/code/zw/zw_client_web/utils/view/me/myInfo/updatePassword.tsx"],"names":["React","HeaderTitle","SigninInput","SigninLabel","ls","modelFactory","useStoreModel","fpSetPre","updatePasswordModel","form","oldPassword","newPassword","confirmPassword","setForm","path","value","option","setData","UpdatePassword","state","stateUPM","actions","actionsUPM","event","target"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,WAAR,QAA0B,6CAA1B;AACA,SAAQC,WAAR,EAAqBC,WAArB,QAAuC,gBAAvC;AACA,SAAQC,EAAR,QAAiB,wBAAjB;AACA,SAAQC,YAAR,QAA2B,gCAA3B;AACA,SAAQC,aAAR,QAA4B,+BAA5B;AACA,SAAQC,QAAR,QAAuB,sBAAvB;AAEA,MAAMC,mBAAmB,GAAGH,YAAY,CAAC,qBAAD,EAAwB;AAC9DI,EAAAA,IAAI,EAAE;AACJC,IAAAA,WAAW,EAAE,EADT;AAEJC,IAAAA,WAAW,EAAE,EAFT;AAGJC,IAAAA,eAAe,EAAE;AAHb;AADwD,CAAxB,EAMrC;AACDC,EAAAA,OAAO,EAAE,CAAC,CAACC,IAAD,EAAOC,KAAP,CAAD,EAAgBC,MAAhB,KAA2B;AAClCA,IAAAA,MAAM,CAACC,OAAP,CAAeV,QAAQ,CAAE,QAAOO,IAAK,EAAd,EAAiBC,KAAjB,CAAvB;AACD;AAHA,CANqC,CAAxC;AAaA,OAAO,MAAMG,cAAc,GAAG,MAAM;AAClC,QAAM;AAACC,IAAAA,KAAK,EAAEC,QAAR;AAAkBC,IAAAA,OAAO,EAAEC;AAA3B,MAAyChB,aAAa,CAACE,mBAAD,CAA5D;AAEA,SAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACL,MAAC,WAAD;AACI,IAAA,KAAK,EAAE,MADX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADK,EAIL,MAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAcJ,EAAE,CAAC,MAAD,CAAhB,CAJK,EAKL,MAAC,WAAD;AACI,IAAA,KAAK,EAAEgB,QAAQ,CAACX,IAAT,CAAcC,WADzB;AAEI,IAAA,QAAQ,EAAEa,KAAK,IAAID,UAAU,CAACT,OAAX,CAAmB,CAAC,MAAD,EAASU,KAAK,CAACC,MAAN,CAAaT,KAAtB,CAAnB,CAFvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IALK,EASL,MAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAcX,EAAE,CAAC,KAAD,CAAhB,CATK,EAUL,MAAC,WAAD;AACI,IAAA,KAAK,EAAEgB,QAAQ,CAACX,IAAT,CAAcE,WADzB;AAEI,IAAA,QAAQ,EAAEY,KAAK,IAAID,UAAU,CAACT,OAAX,CAAmB,CAAC,aAAD,EAAgBU,KAAK,CAACC,MAAN,CAAaT,KAA7B,CAAnB,CAFvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAVK,EAcL,MAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAcX,EAAE,CAAC,MAAD,CAAhB,CAdK,EAeL,MAAC,WAAD;AACI,IAAA,KAAK,EAAEgB,QAAQ,CAACX,IAAT,CAAcG,eADzB;AAEI,IAAA,QAAQ,EAAEW,KAAK,IAAID,UAAU,CAACT,OAAX,CAAmB,CAAC,iBAAD,EAAoBU,KAAK,CAACC,MAAN,CAAaT,KAAjC,CAAnB,CAFvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAfK,mBAAP;AAqBD,CAxBM","sourcesContent":["import React from 'react'\r\nimport {HeaderTitle} from '../../../components/HeaderTitle/HeaderTitle'\r\nimport {SigninInput, SigninLabel} from '../../register'\r\nimport {ls} from '../../../tools/dealKey'\r\nimport {modelFactory} from '../../../ModelAction/modelUtil'\r\nimport {useStoreModel} from '../../../ModelAction/useStore'\r\nimport {fpSetPre} from '../../../tools/utils'\r\n\r\nconst updatePasswordModel = modelFactory('updatePasswordModel', {\r\n  form: {\r\n    oldPassword: '',\r\n    newPassword: '',\r\n    confirmPassword: '',\r\n  },\r\n}, {\r\n  setForm: ([path, value], option) => {\r\n    option.setData(fpSetPre(`form.${path}`, value))\r\n  },\r\n\r\n})\r\n\r\nexport const UpdatePassword = () => {\r\n  const {state: stateUPM, actions: actionsUPM} = useStoreModel(updatePasswordModel)\r\n\r\n  return <div>\r\n    <HeaderTitle\r\n        title={'修改密码'}\r\n    />\r\n    <SigninLabel>{ls('原始密码')}</SigninLabel>\r\n    <SigninInput\r\n        value={stateUPM.form.oldPassword}\r\n        onChange={event => actionsUPM.setForm(['name', event.target.value])}\r\n    />\r\n    <SigninLabel>{ls('新密码')}</SigninLabel>\r\n    <SigninInput\r\n        value={stateUPM.form.newPassword}\r\n        onChange={event => actionsUPM.setForm(['newPassword', event.target.value])}\r\n    />\r\n    <SigninLabel>{ls('确认密码')}</SigninLabel>\r\n    <SigninInput\r\n        value={stateUPM.form.confirmPassword}\r\n        onChange={event => actionsUPM.setForm(['confirmPassword', event.target.value])}\r\n    />\r\n    UpdatePassword\r\n  </div>\r\n}\r\n"]},"metadata":{},"sourceType":"module"}