{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\n\nvar _SaleRankTypeEnumLabe;\n\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { useEffect } from 'react';\nimport { modelFactory } from '../../../../ModelAction/modelUtil';\nimport { doc } from '../../../../graphqlTypes/doc';\nimport { useStoreModel } from '../../../../ModelAction/useStore';\nimport { GroupProductItem, ProductItemOneRow } from '../../../../components/ProductItem/ProductItem';\nimport styled from 'styled-components';\nimport { ls } from '../../../../tools/dealKey';\nimport { dealUrlQuery, fpMergePre } from '../../../../tools/utils';\nimport Router, { useRouter } from 'next/router';\nimport { SaleRankTypeEnum } from '../../../../ss_common/enum';\nimport { Tab, Tabs } from '@material-ui/core';\nimport { Space } from '../../../../components/Box/Box';\nimport { homeTabsModel } from '../Tabs/Tabs';\nimport { HomeType } from '../../appModule';\nvar SalesRankModel = modelFactory('SalesRank', {\n  listData: []\n}, {\n  getList: function () {\n    var _getList = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(value, option) {\n      var _res$productListOrder, _res$productListOrder2;\n\n      var res;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return option.query(doc.productListOrderByOrder, _objectSpread({\n                orderByType: ''\n              }, value !== null && value !== void 0 ? value : {}));\n\n            case 2:\n              res = _context.sent;\n              option.setData(fpMergePre({\n                listData: (_res$productListOrder = res === null || res === void 0 ? void 0 : (_res$productListOrder2 = res.productListOrderByOrder) === null || _res$productListOrder2 === void 0 ? void 0 : _res$productListOrder2.list) !== null && _res$productListOrder !== void 0 ? _res$productListOrder : []\n              }));\n\n            case 4:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    function getList(_x, _x2) {\n      return _getList.apply(this, arguments);\n    }\n\n    return getList;\n  }(),\n  tabChange: function tabChange(_ref, option) {\n    var _ref2 = _slicedToArray(_ref, 2),\n        value = _ref2[0],\n        homeType = _ref2[1];\n\n    var query = dealUrlQuery({\n      salesRankType: value\n    });\n    Router.push(\"/\".concat(homeType, \"/[appModule]\").concat(query), \"/\".concat(homeType, \"/salesRank\").concat(query));\n  }\n});\nvar Box = styled.div.withConfig({\n  displayName: \"SalesRank__Box\",\n  componentId: \"hmt8b7-0\"\n})([\"\"]);\nvar Title = styled.div.withConfig({\n  displayName: \"SalesRank__Title\",\n  componentId: \"hmt8b7-1\"\n})([\"font-size:18px;font-weight:bold;\"]);\nvar SaleRankTypeEnumLabel = (_SaleRankTypeEnumLabe = {}, _defineProperty(_SaleRankTypeEnumLabe, SaleRankTypeEnum.OneDay, '本日'), _defineProperty(_SaleRankTypeEnumLabe, SaleRankTypeEnum.OneWeek, '本周'), _defineProperty(_SaleRankTypeEnumLabe, SaleRankTypeEnum.OneMonth, '本月'), _SaleRankTypeEnumLabe);\nexport var SalesRank = function SalesRank() {\n  var _router$query$salesRa;\n\n  var _useStoreModel = useStoreModel(homeTabsModel),\n      homeTabsState = _useStoreModel.state;\n\n  var router = useRouter();\n  useEffect(function () {\n    var _router$query;\n\n    if (!router.query.salesRankType || ![SaleRankTypeEnum.OneMonth, SaleRankTypeEnum.OneWeek, SaleRankTypeEnum.OneDay].includes(\"\".concat(router === null || router === void 0 ? void 0 : (_router$query = router.query) === null || _router$query === void 0 ? void 0 : _router$query.salesRankType))) {\n      var query = dealUrlQuery({\n        salesRankType: SaleRankTypeEnum.OneDay\n      });\n      router.push(\"/\".concat(homeTabsState.homeType, \"/[appModule]\").concat(query), \"/\".concat(homeTabsState.homeType, \"/salesRank\").concat(query));\n    }\n  }, [router.query.salesRankType, homeTabsState.homeType]);\n\n  var _useStoreModel2 = useStoreModel(SalesRankModel),\n      actionsSalesRankModel = _useStoreModel2.actions,\n      stateSalesRankModel = _useStoreModel2.state;\n\n  useEffect(function () {\n    if (router.query.salesRankType) {\n      actionsSalesRankModel.getList({\n        productInput: {\n          isGroup: homeTabsState.homeType === HomeType.group ? 1 : 0\n        },\n        orderByType: router.query.salesRankType\n      });\n    }\n  }, [router.query.salesRankType]);\n  return __jsx(Box, null, __jsx(Tabs, {\n    variant: 'fullWidth',\n    value: (_router$query$salesRa = router.query.salesRankType) !== null && _router$query$salesRa !== void 0 ? _router$query$salesRa : SaleRankTypeEnum.OneDay,\n    onChange: function onChange(event, value) {\n      return actionsSalesRankModel.tabChange([value, homeTabsState.homeType]);\n    }\n  }, [[SaleRankTypeEnum.OneDay, '24小时排行'], [SaleRankTypeEnum.OneWeek, '本周排行'], [SaleRankTypeEnum.OneMonth, '本月排行']].map(function (v) {\n    return __jsx(Tab, {\n      key: \"SaleRankTab\".concat(v[0]),\n      value: v[0],\n      label: ls(v[1])\n    });\n  })), __jsx(Space, {\n    h: 16\n  }), stateSalesRankModel.listData.map(function (product) {\n    var _router$query2, _router$query3;\n\n    return homeTabsState.homeType === HomeType.group ? __jsx(GroupProductItem, {\n      product: product,\n      key: \"ProductItem_\".concat(product.id),\n      showSumOrder: true,\n      sumOrderTip: SaleRankTypeEnumLabel[\"\".concat((_router$query2 = router.query) === null || _router$query2 === void 0 ? void 0 : _router$query2.salesRankType)]\n    }) : __jsx(ProductItemOneRow, {\n      key: \"ProductItemOneRow_\".concat(product.id),\n      product: product,\n      showSumOrder: true,\n      sumOrderTip: SaleRankTypeEnumLabel[\"\".concat((_router$query3 = router.query) === null || _router$query3 === void 0 ? void 0 : _router$query3.salesRankType)]\n    });\n  }));\n};","map":null,"metadata":{},"sourceType":"module"}