{"ast":null,"code":"var _jsxFileName = \"D:\\\\code\\\\zw\\\\zw_client_web\\\\utils\\\\view\\\\home\\\\components\\\\ThemeSelection\\\\ThemeSelection.tsx\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { useEffect } from 'react';\nimport { modelFactory } from '../../../../ModelAction/modelUtil';\nimport { doc } from '../../../../graphqlTypes/doc';\nimport { fpMergePre } from '../../../../tools/utils';\nimport { useStoreModel } from '../../../../ModelAction/useStore';\nimport { DictTypeEnum } from '../../../../ss_common/enum';\nconst themeSelectionModel = modelFactory('themeSelectionModel', {\n  themeSelectionData: [],\n  productListForTheme: {}\n}, {\n  getData: async (value, option) => {\n    var _res$getDataConfig, _res$getDataConfig$va, _productRes$productLi, _res$limitTimeData, _res$limitTimeData$va;\n\n    const res = await option.query(doc.getDataConfig, {\n      data: {\n        type: DictTypeEnum.PromotionThemeSelect\n      }\n    });\n    const themeList = res === null || res === void 0 ? void 0 : (_res$getDataConfig = res.getDataConfig) === null || _res$getDataConfig === void 0 ? void 0 : (_res$getDataConfig$va = _res$getDataConfig.value) === null || _res$getDataConfig$va === void 0 ? void 0 : _res$getDataConfig$va.list;\n    const productRes = await option.query(doc.productListByIds, {\n      ids: themeList.reduce((pre, cur) => {\n        var _cur$selectProductLis;\n\n        return [...pre, ...((_cur$selectProductLis = cur === null || cur === void 0 ? void 0 : cur.selectProductList) !== null && _cur$selectProductLis !== void 0 ? _cur$selectProductLis : [])];\n      }, [])\n    });\n    console.log(productRes === null || productRes === void 0 ? void 0 : (_productRes$productLi = productRes.productListByIds) === null || _productRes$productLi === void 0 ? void 0 : _productRes$productLi.list);\n    console.log(themeList[0]);\n    console.log(themeList.reduce((pre, cur) => {\n      var _cur$selectProductLis2;\n\n      return _objectSpread(_objectSpread({}, pre), {}, {\n        [cur.id]: cur === null || cur === void 0 ? void 0 : (_cur$selectProductLis2 = cur.selectProductList) === null || _cur$selectProductLis2 === void 0 ? void 0 : _cur$selectProductLis2.map(id => {\n          var _productRes$productLi2, _productRes$productLi3, _productRes$productLi4;\n\n          return (_productRes$productLi2 = productRes === null || productRes === void 0 ? void 0 : (_productRes$productLi3 = productRes.productListByIds) === null || _productRes$productLi3 === void 0 ? void 0 : (_productRes$productLi4 = _productRes$productLi3.list) === null || _productRes$productLi4 === void 0 ? void 0 : _productRes$productLi4.find(v1 => (v1 === null || v1 === void 0 ? void 0 : v1.id) === id)) !== null && _productRes$productLi2 !== void 0 ? _productRes$productLi2 : null;\n        }).filter(v => v)\n      });\n    }, {}));\n    option.setData(fpMergePre({\n      themeSelectionData: (res === null || res === void 0 ? void 0 : (_res$limitTimeData = res.limitTimeData) === null || _res$limitTimeData === void 0 ? void 0 : (_res$limitTimeData$va = _res$limitTimeData.value) === null || _res$limitTimeData$va === void 0 ? void 0 : _res$limitTimeData$va.list) || [],\n      productListForTheme: themeList.reduce((pre, cur) => {\n        var _cur$selectProductLis3;\n\n        return _objectSpread(_objectSpread({}, pre), {}, {\n          [cur.id]: cur === null || cur === void 0 ? void 0 : (_cur$selectProductLis3 = cur.selectProductList) === null || _cur$selectProductLis3 === void 0 ? void 0 : _cur$selectProductLis3.map(v => {\n            var _productRes$productLi5, _productRes$productLi6, _productRes$productLi7;\n\n            return (_productRes$productLi5 = productRes === null || productRes === void 0 ? void 0 : (_productRes$productLi6 = productRes.productListByIds) === null || _productRes$productLi6 === void 0 ? void 0 : (_productRes$productLi7 = _productRes$productLi6.list) === null || _productRes$productLi7 === void 0 ? void 0 : _productRes$productLi7.find(v1 => (v1 === null || v1 === void 0 ? void 0 : v1.id) === v.id)) !== null && _productRes$productLi5 !== void 0 ? _productRes$productLi5 : null;\n          }).filter(v => v)\n        });\n      }, {}) // productList:\n      //     productRes?.productListByIds?.list ?? [],\n\n    }));\n  }\n});\nexport const ThemeSelection = () => {\n  const {\n    state: statePromotionFlashSale,\n    actions: actionsPromotionFlashSale\n  } = useStoreModel(themeSelectionModel);\n  useEffect(() => {\n    actionsPromotionFlashSale.getData();\n  }, []);\n  console.log(statePromotionFlashSale.productListForTheme);\n  return __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 10\n    }\n  });\n};","map":{"version":3,"sources":["D:/code/zw/zw_client_web/utils/view/home/components/ThemeSelection/ThemeSelection.tsx"],"names":["React","useEffect","modelFactory","doc","fpMergePre","useStoreModel","DictTypeEnum","themeSelectionModel","themeSelectionData","productListForTheme","getData","value","option","res","query","getDataConfig","data","type","PromotionThemeSelect","themeList","list","productRes","productListByIds","ids","reduce","pre","cur","selectProductList","console","log","id","map","find","v1","filter","v","setData","limitTimeData","ThemeSelection","state","statePromotionFlashSale","actions","actionsPromotionFlashSale"],"mappings":"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","sourcesContent":["import React, {useEffect} from 'react'\r\nimport {modelFactory} from '../../../../ModelAction/modelUtil'\r\nimport {doc} from '../../../../graphqlTypes/doc'\r\nimport {fpMergePre} from '../../../../tools/utils'\r\nimport {useStoreModel} from '../../../../ModelAction/useStore'\r\nimport {DataConfigItemInput, Product} from '../../../../graphqlTypes/types'\r\nimport {ProductItemOneRow} from '../../../../components/ProductItem/ProductItem'\r\nimport {DictTypeEnum} from '../../../../ss_common/enum'\r\n\r\nconst themeSelectionModel = modelFactory('themeSelectionModel', {\r\n  themeSelectionData: [] as any[],\r\n  productListForTheme: {} as {\r\n    [key in string]: Product[]\r\n  },\r\n}, {\r\n  getData: async (value, option) => {\r\n    const res = await option.query(doc.getDataConfig, {\r\n      data: {\r\n        type: DictTypeEnum.PromotionThemeSelect,\r\n      } as DataConfigItemInput,\r\n    })\r\n    const themeList = res?.getDataConfig?.value?.list\r\n    const productRes = await option.query(doc.productListByIds, {\r\n      ids: themeList.reduce((pre: any, cur: any) => {\r\n        return [\r\n          ...pre,\r\n          ...cur?.selectProductList ?? [],\r\n        ]\r\n      }, []),\r\n    })\r\n    console.log(productRes?.productListByIds?.list)\r\n    console.log(themeList[0])\r\n    console.log(themeList.reduce((pre: any, cur: any) => {\r\n      return {\r\n        ...pre,\r\n        [cur.id]: cur?.selectProductList?.map((id: string) => productRes?.productListByIds?.list?.find((v1: Product) => v1?.id === id) ?? null).filter((v: any) => v),\r\n      }\r\n    }, {}))\r\n    option.setData(fpMergePre({\r\n      themeSelectionData: res?.limitTimeData?.value?.list || [],\r\n      productListForTheme: themeList.reduce((pre: any, cur: any) => {\r\n        return {\r\n          ...pre,\r\n          [cur.id]: cur?.selectProductList?.map((v: any) => productRes?.productListByIds?.list?.find((v1: Product) => v1?.id === v.id) ?? null).filter((v: any) => v),\r\n        }\r\n      }, {}),\r\n      // productList:\r\n      //     productRes?.productListByIds?.list ?? [],\r\n    }))\r\n  },\r\n\r\n})\r\n\r\nexport const ThemeSelection = () => {\r\n  const {state: statePromotionFlashSale, actions: actionsPromotionFlashSale} = useStoreModel(themeSelectionModel)\r\n  useEffect(() => {\r\n    actionsPromotionFlashSale.getData()\r\n  }, [])\r\n  console.log(statePromotionFlashSale.productListForTheme)\r\n\r\n  return <div>\r\n    {/*{statePromotionFlashSale.productList.map(product => <ProductItemOneRow*/}\r\n    {/*    key={`ProductItemOneRow_${product.id}`}*/}\r\n    {/*    product={product}*/}\r\n    {/*/>)}*/}\r\n  </div>\r\n}\r\n"]},"metadata":{},"sourceType":"module"}