{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\n\nvar _this = this,\n    _jsxFileName = \"D:\\\\code\\\\zw\\\\zw_client_web\\\\utils\\\\view\\\\productList\\\\[id].tsx\",\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\nimport React, { useEffect } from 'react';\nimport SortIcon from '@material-ui/icons/Sort';\nimport FilterListIcon from '@material-ui/icons/FilterList';\nimport { modelFactory } from '../../ModelAction/modelUtil';\nimport { useRouter } from 'next/router';\nimport { fpMergePre } from '../../tools/utils';\nimport { doc } from '../../graphqlTypes/doc';\nimport { useStoreModel } from '../../ModelAction/useStore';\nimport { HeaderTitle } from '../../components/HeaderTitle/HeaderTitle';\nimport styled from 'styled-components';\nimport { Button } from '@material-ui/core';\nimport { ls } from '../../tools/dealKey';\nimport { ProductItem } from '../../components/ProductItem/ProductItem';\nimport { BScroller } from '../../components/BScroll/BScroller';\nexport var productListModel = modelFactory('productListModel', {\n  category: {},\n  productList: []\n}, {\n  getCategory: function () {\n    var _getCategory = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(value, option) {\n      var _res$oneCategory;\n\n      var res;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return option.query(doc.oneCategory, {\n                data: value\n              });\n\n            case 2:\n              res = _context.sent;\n              option.setData(fpMergePre({\n                category: (_res$oneCategory = res === null || res === void 0 ? void 0 : res.oneCategory) !== null && _res$oneCategory !== void 0 ? _res$oneCategory : {}\n              }));\n\n            case 4:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    function getCategory(_x, _x2) {\n      return _getCategory.apply(this, arguments);\n    }\n\n    return getCategory;\n  }(),\n  getData: function () {\n    var _getData = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2(value, option) {\n      var _res$productsInCatego;\n\n      var res;\n      return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              _context2.next = 2;\n              return option.query(doc.productsList, {\n                data: value\n              });\n\n            case 2:\n              res = _context2.sent;\n              option.setData(fpMergePre({\n                productList: (_res$productsInCatego = res === null || res === void 0 ? void 0 : res.productsInCategory) !== null && _res$productsInCatego !== void 0 ? _res$productsInCatego : []\n              }));\n\n            case 4:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2);\n    }));\n\n    function getData(_x3, _x4) {\n      return _getData.apply(this, arguments);\n    }\n\n    return getData;\n  }()\n});\nvar HeaderTab = styled.div.withConfig({\n  displayName: \"id__HeaderTab\",\n  componentId: \"sc-1l2qjuw-0\"\n})([\"display:flex;justify-content:space-evenly;\"]);\n_c = HeaderTab;\nvar ListBox = styled.div.withConfig({\n  displayName: \"id__ListBox\",\n  componentId: \"sc-1l2qjuw-1\"\n})([\"padding:20px;display:grid;grid-template-columns:repeat(2,1fr);grid-gap:15px;\"]);\n_c2 = ListBox;\nexport var ProductList = function ProductList() {\n  _s();\n\n  var _ref, _router$query, _statePLM$category;\n\n  var router = useRouter();\n  var id = (_ref = (_router$query = router.query) === null || _router$query === void 0 ? void 0 : _router$query.id) !== null && _ref !== void 0 ? _ref : '';\n\n  var _useStoreModel = useStoreModel(productListModel),\n      actionsPLM = _useStoreModel.actions,\n      statePLM = _useStoreModel.state;\n\n  useEffect(function () {\n    if (!!id) {\n      actionsPLM.getCategory({\n        id: id\n      });\n      actionsPLM.getData({\n        id: id\n      });\n    }\n  }, [id]);\n  return __jsx(\"div\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 10\n    }\n  }, __jsx(HeaderTitle, {\n    title: (_statePLM$category = statePLM.category) === null || _statePLM$category === void 0 ? void 0 : _statePLM$category.name,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 5\n    }\n  }), __jsx(HeaderTab, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 5\n    }\n  }, __jsx(Button, {\n    fullWidth: true,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }\n  }, ls('排序'), __jsx(SortIcon, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 9\n    }\n  })), __jsx(Button, {\n    fullWidth: true,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }\n  }, ls('筛选'), __jsx(FilterListIcon, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 9\n    }\n  }))), __jsx(BScroller, {\n    boxHeight: 'calc(100vh - 100px)',\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 5\n    }\n  }, __jsx(ListBox, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 7\n    }\n  }, statePLM.productList.map(function (value) {\n    return __jsx(ProductItem, {\n      key: \"ProductItem_\".concat(value.id),\n      product: value,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 44\n      }\n    });\n  }))));\n};\n\n_s(ProductList, \"sO8E6/TSlRC/n4ppHotWzdYhSo0=\", false, function () {\n  return [useRouter, useStoreModel];\n});\n\n_c3 = ProductList;\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"HeaderTab\");\n$RefreshReg$(_c2, \"ListBox\");\n$RefreshReg$(_c3, \"ProductList\");","map":{"version":3,"sources":["D:/code/zw/zw_client_web/utils/view/productList/[id].tsx"],"names":["React","useEffect","SortIcon","FilterListIcon","modelFactory","useRouter","fpMergePre","doc","useStoreModel","HeaderTitle","styled","Button","ls","ProductItem","BScroller","productListModel","category","productList","getCategory","value","option","query","oneCategory","data","res","setData","getData","productsList","productsInCategory","HeaderTab","div","ListBox","ProductList","router","id","actionsPLM","actions","statePLM","state","name","map"],"mappings":"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","sourcesContent":["import React, {useEffect} from 'react'\r\nimport SortIcon from '@material-ui/icons/Sort'\r\nimport FilterListIcon from '@material-ui/icons/FilterList'\r\nimport {modelFactory} from '../../ModelAction/modelUtil'\r\nimport {Category, CategoryItemInput, Product} from '../../graphqlTypes/types'\r\nimport {useRouter} from 'next/router'\r\nimport {fpMergePre} from '../../tools/utils'\r\nimport {doc} from '../../graphqlTypes/doc'\r\nimport {useStoreModel} from '../../ModelAction/useStore'\r\nimport {HeaderTitle} from '../../components/HeaderTitle/HeaderTitle'\r\nimport styled from 'styled-components'\r\nimport {Button, Drawer} from '@material-ui/core'\r\nimport {ls} from '../../tools/dealKey'\r\nimport {ProductItem} from '../../components/ProductItem/ProductItem'\r\nimport {BScroller} from '../../components/BScroll/BScroller'\r\n\r\nexport const productListModel = modelFactory('productListModel', {\r\n  category: {} as Category,\r\n  productList: [] as Product[],\r\n}, {\r\n  getCategory: async (value: CategoryItemInput, option) => {\r\n    const res = await option.query(doc.oneCategory, {data: value})\r\n    option.setData(fpMergePre({\r\n      category: res?.oneCategory ?? {},\r\n    }))\r\n  },\r\n  getData: async (value: CategoryItemInput, option) => {\r\n    const res = await option.query(doc.productsList, {data: value})\r\n    option.setData(fpMergePre({\r\n      productList: res?.productsInCategory ?? [],\r\n    }))\r\n  },\r\n\r\n})\r\n\r\nconst HeaderTab = styled.div`\r\n  display: flex;\r\n  justify-content: space-evenly;\r\n`\r\nconst ListBox = styled.div`\r\n  padding: 20px;\r\n  display: grid;\r\n  grid-template-columns: repeat(2, 1fr);\r\n  grid-gap: 15px;\r\n`\r\n\r\nexport const ProductList = () => {\r\n  const router = useRouter()\r\n  const id = (router.query?.id as string) ?? ''\r\n  const {actions: actionsPLM, state: statePLM} = useStoreModel(productListModel)\r\n\r\n  useEffect(() => {\r\n    if (!!id) {\r\n      actionsPLM.getCategory({id})\r\n      actionsPLM.getData({id})\r\n    }\r\n  }, [id])\r\n\r\n  return <div>\r\n    <HeaderTitle\r\n        title={statePLM.category?.name}\r\n    />\r\n    <HeaderTab>\r\n      <Button\r\n          fullWidth\r\n      >{ls('排序')}\r\n        <SortIcon/>\r\n      </Button>\r\n      <Button\r\n          fullWidth\r\n      >{ls('筛选')}\r\n        <FilterListIcon/>\r\n      </Button>\r\n    </HeaderTab>\r\n    <BScroller boxHeight={'calc(100vh - 100px)'}>\r\n      <ListBox>\r\n        {statePLM.productList.map(value => <ProductItem\r\n            key={`ProductItem_${value.id}`}\r\n            product={value}/>)}\r\n      </ListBox>\r\n    </BScroller>\r\n  </div>\r\n}\r\n"]},"metadata":{},"sourceType":"module"}