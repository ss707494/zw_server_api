{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\n\nvar _this = this,\n    _jsxFileName = \"D:\\\\code\\\\zw\\\\zw_client_web\\\\utils\\\\view\\\\me\\\\myCreditCard\\\\edit\\\\[id].tsx\";\n\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React from 'react';\nimport { modelFactory } from '../../../../ModelAction/modelUtil';\nimport { useStoreModel } from '../../../../ModelAction/useStore';\nimport { fpMergePre } from '../../../../tools/utils';\nimport { SigninInput } from '../../../register';\nimport { FieldContain } from '../../myInfo/updatePassword';\nimport { HeaderTitle } from '../../../../components/HeaderTitle/HeaderTitle';\nimport { setForm } from '../../../../tools/commonAction';\nimport { ls } from '../../../../tools/dealKey';\nimport { useRouter } from 'next/router';\nimport { ButtonLoad } from '../../../../components/ButtonLoad/ButtonLoad';\nimport { doc } from '../../../../graphqlTypes/doc';\nexport var myCreditCardEditModel = modelFactory('myCreditCardEditModel', {\n  form: {\n    number: '123',\n    code: '4321',\n    name: 'ss',\n    userName: 'ss',\n    addressDetail: '地址...',\n    zipCode: 'code',\n    city: 'city',\n    contact: 'user'\n  }\n}, {\n  setForm: setForm,\n  clearForm: function clearForm(value, option) {\n    return option.setData(fpMergePre({\n      form: {\n        number: '',\n        code: '',\n        name: '',\n        userName: '',\n        addressDetail: '',\n        zipCode: '',\n        city: '',\n        contact: ''\n      }\n    }));\n  },\n  submit: function submit(value, option) {\n    var form = option.data.form;\n    option.mutate(doc.saveUserPayCard, {\n      data: _objectSpread({}, form)\n    });\n    console.log(form);\n  }\n});\nexport var MyCreditCardEdit = function MyCreditCardEdit() {\n  var _router$query$id, _router$query;\n\n  var router = useRouter();\n  var id = (_router$query$id = (_router$query = router.query) === null || _router$query === void 0 ? void 0 : _router$query.id) !== null && _router$query$id !== void 0 ? _router$query$id : '';\n  console.log(!!id);\n\n  var _useStoreModel = useStoreModel(myCreditCardEditModel),\n      stateMCCE = _useStoreModel.state,\n      actionsMCCE = _useStoreModel.actions;\n\n  return __jsx(\"div\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 10\n    }\n  }, __jsx(HeaderTitle, {\n    title: \"\".concat(id === '0' ? '新增' : '编辑', \"\\u4FE1\\u7528\\u5361\"),\n    backCall: actionsMCCE.clearForm,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 5\n    }\n  }), __jsx(FieldContain, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 5\n    }\n  }, [['信用卡号', 'number'], ['四位号码', 'code'], ['姓名', 'userName'], ['详细地址', 'addressDetail'], ['邮政编码', 'zipCode'], ['城市', 'city'], ['联系方式', 'contact']].map(function (v) {\n    return __jsx(SigninInput, {\n      key: \"MyCreditCardEdit_\".concat(v[1]),\n      label: ls(v[0]),\n      value: stateMCCE.form[v[1]],\n      onChange: function onChange(event) {\n        return actionsMCCE.setForm([v[1], event.target.value]);\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 18\n      }\n    });\n  }), __jsx(\"section\", {\n    style: {\n      width: '100%',\n      height: '20px'\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 7\n    }\n  }), __jsx(ButtonLoad, {\n    fullWidth: true,\n    variant: 'contained',\n    color: 'secondary',\n    onClick: function onClick() {\n      actionsMCCE.submit();\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 7\n    }\n  }, \"\\u4FDD\\u5B58\")));\n};","map":{"version":3,"sources":["D:/code/zw/zw_client_web/utils/view/me/myCreditCard/edit/[id].tsx"],"names":["React","modelFactory","useStoreModel","fpMergePre","SigninInput","FieldContain","HeaderTitle","setForm","ls","useRouter","ButtonLoad","doc","myCreditCardEditModel","form","number","code","name","userName","addressDetail","zipCode","city","contact","clearForm","value","option","setData","submit","data","mutate","saveUserPayCard","console","log","MyCreditCardEdit","router","id","query","stateMCCE","state","actionsMCCE","actions","map","v","event","target","width","height"],"mappings":"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","sourcesContent":["import React from 'react'\r\nimport {modelFactory} from '../../../../ModelAction/modelUtil'\r\nimport {useStoreModel} from '../../../../ModelAction/useStore'\r\nimport {fpMergePre} from '../../../../tools/utils'\r\nimport {SigninInput} from '../../../register'\r\nimport {FieldContain} from '../../myInfo/updatePassword'\r\nimport {HeaderTitle} from '../../../../components/HeaderTitle/HeaderTitle'\r\nimport {UserPayCard} from '../../../../graphqlTypes/types'\r\nimport {setForm} from '../../../../tools/commonAction'\r\nimport {ls} from '../../../../tools/dealKey'\r\nimport {useRouter} from 'next/router'\r\nimport {ButtonLoad} from '../../../../components/ButtonLoad/ButtonLoad'\r\nimport {doc} from '../../../../graphqlTypes/doc'\r\n\r\nexport const myCreditCardEditModel = modelFactory('myCreditCardEditModel', {\r\n  form: {\r\n    number: '123',\r\n    code: '4321',\r\n    name: 'ss',\r\n    userName: 'ss',\r\n    addressDetail: '地址...',\r\n    zipCode: 'code',\r\n    city: 'city',\r\n    contact: 'user',\r\n  } as UserPayCard,\r\n}, {\r\n  setForm: setForm,\r\n  clearForm: (value, option) => option.setData(fpMergePre({\r\n    form: {\r\n      number: '',\r\n      code: '',\r\n      name: '',\r\n      userName: '',\r\n      addressDetail: '',\r\n      zipCode: '',\r\n      city: '',\r\n      contact: '',\r\n    },\r\n  })),\r\n  submit: (value, option) => {\r\n    const form = option.data.form\r\n    option.mutate(doc.saveUserPayCard, {\r\n      data: {\r\n        ...form,\r\n      },\r\n    })\r\n    console.log(form)\r\n  },\r\n})\r\n\r\nexport const MyCreditCardEdit = () => {\r\n  const router = useRouter()\r\n  const id = router.query?.id ?? ''\r\n  console.log(!!id)\r\n  const {state: stateMCCE, actions: actionsMCCE} = useStoreModel(myCreditCardEditModel)\r\n\r\n  return <div>\r\n    <HeaderTitle\r\n        title={`${id === '0' ? '新增' : '编辑'}信用卡`}\r\n        backCall={actionsMCCE.clearForm}\r\n    />\r\n    <FieldContain>\r\n      {[\r\n        ['信用卡号', 'number'],\r\n        ['四位号码', 'code'],\r\n        ['姓名', 'userName'],\r\n        ['详细地址', 'addressDetail'],\r\n        ['邮政编码', 'zipCode'],\r\n        ['城市', 'city'],\r\n        ['联系方式', 'contact'],\r\n      ].map(v => <SigninInput\r\n          key={`MyCreditCardEdit_${v[1]}`}\r\n          label={ls(v[0])}\r\n          value={stateMCCE.form[v[1] as keyof UserPayCard]}\r\n          onChange={event => actionsMCCE.setForm([v[1], event.target.value])}\r\n      />)}\r\n      <section style={{width: '100%', height: '20px'}}/>\r\n      <ButtonLoad\r\n          fullWidth\r\n          variant={'contained'}\r\n          color={'secondary'}\r\n          onClick={() => {\r\n            actionsMCCE.submit()\r\n          }}\r\n      >\r\n        保存\r\n      </ButtonLoad>\r\n    </FieldContain>\r\n  </div>\r\n}\r\n"]},"metadata":{},"sourceType":"module"}