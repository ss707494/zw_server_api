{"ast":null,"code":"import _JSXStyle from \"styled-jsx/style\";\nvar __jsx = React.createElement;\nimport { Tab, Tabs } from '@material-ui/core';\nimport React from 'react';\nimport CategorySelection from '../CategorySelection/CategorySelection';\nimport Router, { useRouter } from 'next/router';\nimport { modelFactory } from '../../../../ModelAction/modelUtil';\nimport { useStoreModel } from '../../../../ModelAction/useStore';\nimport { AppModuleTypeEnum, DictTypeEnum } from '../../../../ss_common/enum';\nimport { ls } from '../../../../tools/dealKey';\nimport { PromotionFlashSale } from '../PromotionFlashSale/PromotionFlashSale';\nimport { ThemeSelection } from '../ThemeSelection/ThemeSelection';\nimport { HomeType } from '../../appModule';\nimport { fpMergePre } from '../../../../tools/utils';\nimport { getDataConfig } from '../../../../graphqlTypes/doc';\nexport const homeTabsModel = modelFactory('HomeTabs', {\n  homeType: '',\n  appModuleConfig: {}\n}, {\n  setHomeType: (value, option) => {\n    option.setData(fpMergePre({\n      homeType: value\n    }));\n  },\n  onChange: ([name, type], option) => {\n    // @ts-ignore\n    Router.push(`/${type}/[appModule]`, `/${type}/${name}`, {\n      shallow: true\n    }); // option.setData(fpMergePre({\n    //   value,\n    // }))\n  },\n  getData: async (value, option) => {\n    var _appModuleConfig$getD, _appModuleConfig$getD2;\n\n    const appModuleConfig = await option.query(getDataConfig, {\n      data: {\n        type: DictTypeEnum.AppModule\n      }\n    }, {});\n    option.setData(fpMergePre({\n      appModuleConfig: (_appModuleConfig$getD = (_appModuleConfig$getD2 = appModuleConfig.getDataConfig) === null || _appModuleConfig$getD2 === void 0 ? void 0 : _appModuleConfig$getD2.value) !== null && _appModuleConfig$getD !== void 0 ? _appModuleConfig$getD : {}\n    }));\n  }\n});\nexport const HomeTabs = ({\n  homeType\n}) => {\n  var _router$query$appModu;\n\n  const router = useRouter();\n  const {\n    state: homeTabsState,\n    actions: homeTabsActions\n  } = useStoreModel(homeTabsModel);\n  return __jsx(\"div\", {\n    style: {\n      marginTop: '10px'\n    },\n    className: \"jsx-1221730688\"\n  }, __jsx(Tabs, {\n    variant: 'fullWidth',\n    value: (_router$query$appModu = router.query.appModule) !== null && _router$query$appModu !== void 0 ? _router$query$appModu : AppModuleTypeEnum.categorySelection,\n    onChange: (event, value) => homeTabsActions.onChange([value, homeType])\n  }, __jsx(Tab, {\n    value: AppModuleTypeEnum.categorySelection,\n    label: ls(homeType === HomeType.group ? '分类拼团' : '分类选择')\n  }), (homeType === HomeType.home && [[AppModuleTypeEnum.limitTime, '限时选购'], [AppModuleTypeEnum.salesRank, '热销排行'], [AppModuleTypeEnum.themeSelection, '主题甄选'], [AppModuleTypeEnum.mayLike, '猜你喜欢']] || homeType === HomeType.group && [[AppModuleTypeEnum.topRanking, '热门排行'], [AppModuleTypeEnum.lineRanking, '冲线排行']] || []).filter(v => {\n    var _homeTabsState$appMod;\n\n    return homeTabsState === null || homeTabsState === void 0 ? void 0 : (_homeTabsState$appMod = homeTabsState.appModuleConfig) === null || _homeTabsState$appMod === void 0 ? void 0 : _homeTabsState$appMod[v[0]];\n  }).map(v => __jsx(Tab, {\n    key: `AppModuleTypeEnum_${v[0]}`,\n    value: v[0],\n    label: ls(v[1])\n  }))), __jsx(\"main\", {\n    style: {\n      marginTop: '10px'\n    },\n    className: \"jsx-1221730688\"\n  }, router.query.appModule === AppModuleTypeEnum.categorySelection && __jsx(CategorySelection, null), router.query.appModule === AppModuleTypeEnum.limitTime && __jsx(PromotionFlashSale, null), router.query.appModule === AppModuleTypeEnum.themeSelection && __jsx(ThemeSelection, null)), __jsx(_JSXStyle, {\n    id: \"1221730688\"\n  }, [\"div.jsx-1221730688 .MuiButtonBase-root{padding:0;}\"]));\n};","map":null,"metadata":{},"sourceType":"module"}