{"ast":null,"code":"var __jsx = React.createElement;\nimport React, { useEffect } from 'react';\nimport { grey } from '@material-ui/core/colors';\nimport { KeyboardArrowRight } from '@material-ui/icons';\nimport { ButtonBase } from '@material-ui/core';\nimport { useStoreModel } from '../../../../../ModelAction/useStore';\nimport { dealUrlQuery, fpMergePre } from '../../../../../tools/utils';\nimport { Loading } from '../../../../../components/Loading/Loading';\nimport { categoryList } from '../../../../../graphqlTypes/doc';\nimport { dealImgUrl } from '../../../../../tools/img';\nimport { CategoryRootName } from '../../../../../ss_common/enum';\nimport { modelFactory } from '../../../../../ModelAction/modelUtil';\nimport { useRouter } from 'next/router';\nimport { homeTabsModel } from '../Tabs/Tabs';\nimport styled from 'styled-components';\nexport const homeCategorySelectionModel = modelFactory('HomeCategorySelection', {\n  listData: [],\n  total: 0,\n  actId: ''\n}, {\n  getList: async (value, option) => {\n    var _res$categoryList;\n\n    const res = await option.query(categoryList, {\n      data: {\n        category: {\n          parentCategory: {\n            id: CategoryRootName\n          }\n        }\n      }\n    });\n    option.setData(fpMergePre({\n      listData: res === null || res === void 0 ? void 0 : (_res$categoryList = res.categoryList) === null || _res$categoryList === void 0 ? void 0 : _res$categoryList.list\n    }));\n  },\n  changeActId: async (value, option) => {\n    option.setData(fpMergePre({\n      actId: value !== null && value !== void 0 ? value : ''\n    }));\n  }\n});\nconst ButtonBaseBox = styled(ButtonBase).withConfig({\n  displayName: \"CategorySelection__ButtonBaseBox\",\n  componentId: \"iuqsl-0\"\n})([\"&&&{width:100%;height:60px;display:flex;border-radius:8px;overflow:hidden;margin-bottom:10px;background:\", \";> img{height:100%;width:70%;}> span{flex:1;color:#fff;display:flex;align-items:center;justify-content:center;}}\"], grey[700]);\nexport const CategorySelection = () => {\n  var _homeCategorySelectio;\n\n  const router = useRouter();\n  const {\n    state: homeCategorySelectionState,\n    actions: homeCategorySelectionActions,\n    getLoad: hsGetLoad\n  } = useStoreModel(homeCategorySelectionModel);\n  const {\n    state: homeTabsState\n  } = useStoreModel(homeTabsModel);\n  useEffect(() => {\n    homeCategorySelectionActions.getList();\n  }, []);\n  return __jsx(\"div\", null, !!hsGetLoad(categoryList) && __jsx(Loading, null), homeCategorySelectionState === null || homeCategorySelectionState === void 0 ? void 0 : (_homeCategorySelectio = homeCategorySelectionState.listData) === null || _homeCategorySelectio === void 0 ? void 0 : _homeCategorySelectio.map(value => __jsx(ButtonBaseBox, {\n    onClick: () => {\n      router.push(`/m/category/[id]${dealUrlQuery({\n        homeType: homeTabsState.homeType\n      })}`, `/m/category/${value.id}${dealUrlQuery({\n        homeType: homeTabsState.homeType\n      })}`);\n    },\n    key: `homeCategorySelectionState_${value.id}`\n  }, __jsx(\"img\", {\n    src: dealImgUrl(value.imgUrl),\n    alt: \"\"\n  }), __jsx(\"span\", null, value.name, __jsx(KeyboardArrowRight, null)))));\n};\nexport default CategorySelection;","map":null,"metadata":{},"sourceType":"module"}