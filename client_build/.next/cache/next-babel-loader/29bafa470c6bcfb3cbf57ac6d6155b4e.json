{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\n\nvar _this = this,\n    _jsxFileName = \"D:\\\\code\\\\zw\\\\zw_client_web\\\\utils\\\\view\\\\me\\\\pickupAddress\\\\list.tsx\",\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\nimport React, { useEffect } from 'react';\nimport { HeaderTitle } from '../../../components/HeaderTitle/HeaderTitle';\nimport { modelFactory } from '../../../ModelAction/modelUtil';\nimport { doc } from '../../../graphqlTypes/doc';\nimport { useStoreModel } from '../../../ModelAction/useStore';\nimport { fpMergePre } from '../../../tools/utils';\nimport styled from 'styled-components';\nimport { Button, ButtonBase } from '@material-ui/core';\nimport { dealImgUrl } from '../../../tools/img';\nimport { grey } from '@material-ui/core/colors';\nvar pickupAddressModel = modelFactory('pickupAddressModel', {\n  list: [],\n  user: {}\n}, {\n  getList: function () {\n    var _getList = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(value, option) {\n      var _res$getDataConfig$va, _res$getDataConfig, _res$getDataConfig$va2;\n\n      var res;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return option.query(doc.pickupAddress, {});\n\n            case 2:\n              res = _context.sent;\n              option.setData(fpMergePre({\n                list: (_res$getDataConfig$va = res === null || res === void 0 ? void 0 : (_res$getDataConfig = res.getDataConfig) === null || _res$getDataConfig === void 0 ? void 0 : (_res$getDataConfig$va2 = _res$getDataConfig.value) === null || _res$getDataConfig$va2 === void 0 ? void 0 : _res$getDataConfig$va2.list) !== null && _res$getDataConfig$va !== void 0 ? _res$getDataConfig$va : [],\n                user: res === null || res === void 0 ? void 0 : res.oneUser\n              }));\n\n            case 4:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    function getList(_x, _x2) {\n      return _getList.apply(this, arguments);\n    }\n\n    return getList;\n  }()\n});\nvar ItemBox = styled(ButtonBase).withConfig({\n  displayName: \"list__ItemBox\",\n  componentId: \"gj9w8w-0\"\n})([\"&&&{display:flex;padding:10px 20px;> img{width:18vw;height:18vw;}> section{margin-left:9px;text-align:left;> main,footer{font-size:12px;color:\", \";}}}\"], grey[600]);\n_c = ItemBox;\nexport var PickupAddress = function PickupAddress() {\n  _s();\n\n  var _useStoreModel = useStoreModel(pickupAddressModel),\n      actionsPAM = _useStoreModel.actions,\n      statePAM = _useStoreModel.state;\n\n  useEffect(function () {\n    if (!statePAM.list.length) {\n      actionsPAM.getList();\n    }\n  }, []);\n  console.log(statePAM.user.userInfo);\n  return __jsx(\"div\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 10\n    }\n  }, __jsx(HeaderTitle, {\n    title: '我的取货点',\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 5\n    }\n  }), statePAM.list.map(function (value) {\n    return __jsx(ItemBox, {\n      key: \"PickupAddress_\".concat(value.id),\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 40\n      }\n    }, __jsx(\"img\", {\n      src: dealImgUrl(value.imgUrl),\n      alt: \"\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 7\n      }\n    }), __jsx(\"section\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 7\n      }\n    }, __jsx(\"header\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }\n    }, value.fullName), __jsx(\"main\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }\n    }, \"\".concat(value.province, \" \").concat(value.city)), __jsx(\"footer\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }\n    }, \"\".concat(value.streetAddress))), __jsx(\"aside\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 7\n      }\n    }, value.isDefault, __jsx(Button, {\n      size: 'small',\n      variant: 'text',\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 9\n      }\n    }, \"\\u8BBE\\u4E3A\\u9ED8\\u8BA4\")));\n  }));\n};\n\n_s(PickupAddress, \"b0Y6TRZ1AuVhP5jqpKnGk1ik1NA=\", false, function () {\n  return [useStoreModel];\n});\n\n_c2 = PickupAddress;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"ItemBox\");\n$RefreshReg$(_c2, \"PickupAddress\");","map":{"version":3,"sources":["D:/code/zw/zw_client_web/utils/view/me/pickupAddress/list.tsx"],"names":["React","useEffect","HeaderTitle","modelFactory","doc","useStoreModel","fpMergePre","styled","Button","ButtonBase","dealImgUrl","grey","pickupAddressModel","list","user","getList","value","option","query","pickupAddress","res","setData","getDataConfig","oneUser","ItemBox","PickupAddress","actionsPAM","actions","statePAM","state","length","console","log","userInfo","map","id","imgUrl","fullName","province","city","streetAddress","isDefault"],"mappings":"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","sourcesContent":["import React, {useEffect} from 'react'\r\nimport {HeaderTitle} from '../../../components/HeaderTitle/HeaderTitle'\r\nimport {modelFactory} from '../../../ModelAction/modelUtil'\r\nimport {doc} from '../../../graphqlTypes/doc'\r\nimport {useStoreModel} from '../../../ModelAction/useStore'\r\nimport {fpMergePre} from '../../../tools/utils'\r\nimport styled from 'styled-components'\r\nimport {Button, ButtonBase} from '@material-ui/core'\r\nimport {dealImgUrl} from '../../../tools/img'\r\nimport {grey} from '@material-ui/core/colors'\r\nimport {User} from '../../../graphqlTypes/types'\r\n\r\nconst pickupAddressModel = modelFactory('pickupAddressModel', {\r\n  list: [],\r\n  user: {} as User,\r\n}, {\r\n  getList: async (value, option) => {\r\n    const res = await option.query(doc.pickupAddress, {})\r\n    option.setData(fpMergePre({\r\n      list: res?.getDataConfig?.value?.list ?? [],\r\n      user: res?.oneUser,\r\n    }))\r\n  },\r\n\r\n})\r\n\r\nconst ItemBox = styled(ButtonBase)`\r\n  &&& {\r\n    display: flex;\r\n    padding: 10px 20px;\r\n    > img {\r\n      width: 18vw;\r\n      height: 18vw;\r\n    }\r\n    > section {\r\n      margin-left: 9px;\r\n      text-align: left;\r\n      > main, footer {\r\n        font-size: 12px;\r\n        color: ${grey[600]};\r\n      }\r\n    }\r\n  }\r\n`\r\n\r\nexport const PickupAddress = () => {\r\n  const {actions: actionsPAM, state: statePAM} = useStoreModel(pickupAddressModel)\r\n  useEffect(() => {\r\n    if (!statePAM.list.length) {\r\n      actionsPAM.getList()\r\n    }\r\n  }, [])\r\n\r\n  console.log(statePAM.user.userInfo)\r\n\r\n  return <div>\r\n    <HeaderTitle\r\n        title={'我的取货点'}\r\n    />\r\n    {statePAM.list.map((value: any) => <ItemBox key={`PickupAddress_${value.id}`}>\r\n      <img src={dealImgUrl(value.imgUrl)}\r\n           alt=\"\"/>\r\n      <section>\r\n        <header>{value.fullName}</header>\r\n        <main>{`${value.province} ${value.city}`}</main>\r\n        <footer>\r\n          {`${value.streetAddress}`}\r\n        </footer>\r\n      </section>\r\n      <aside>\r\n        {value.isDefault}\r\n        <Button\r\n            size={'small'}\r\n            variant={'text'}\r\n        >设为默认</Button>\r\n      </aside>\r\n    </ItemBox>)}\r\n  </div>\r\n}\r\n"]},"metadata":{},"sourceType":"module"}