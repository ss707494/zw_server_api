{"ast":null,"code":"var _jsxFileName = \"D:\\\\code\\\\zw\\\\zw_client_web\\\\utils\\\\view\\\\category\\\\[id].tsx\";\nvar __jsx = React.createElement;\nimport React, { useEffect } from 'react';\nimport Router, { useRouter } from 'next/router';\nimport { useStoreModel } from '../../ModelAction/useStore';\nimport { KeyboardArrowRight } from '@material-ui/icons';\nimport { ButtonBase, LinearProgress } from '@material-ui/core';\nimport { fpMergePre } from '../../tools/utils';\nimport { HeaderTitle } from '../../components/HeaderTitle/HeaderTitle';\nimport { doc } from '../../graphqlTypes/doc';\nimport { BScroller } from '../../components/BScroll/BScroller';\nimport { modelFactory } from '../../ModelAction/modelUtil';\nimport styled from 'styled-components';\nimport { grey } from '@material-ui/core/colors';\nimport { dealImgUrl } from '../../tools/img';\nimport { ProductItem } from '../../components/ProductItem/ProductItem';\nimport { ls } from '../../tools/dealKey';\nimport { NoData } from '../../components/NoData/NoData';\nimport { meModel } from '../me/model';\nexport const CategoryPageModel = modelFactory('CategoryPage', {\n  productList: [],\n  categoryList: []\n}, {\n  getProductList: async (value, option) => {\n    var _res$productsInCatego, _res$categoryList$lis, _res$categoryList;\n\n    const res = await option.query(doc.productsInCategory, {\n      data: value\n    });\n    option.setData(fpMergePre({\n      productList: (_res$productsInCatego = res === null || res === void 0 ? void 0 : res.productsInCategory) !== null && _res$productsInCatego !== void 0 ? _res$productsInCatego : [],\n      categoryList: [...((_res$categoryList$lis = res === null || res === void 0 ? void 0 : (_res$categoryList = res.categoryList) === null || _res$categoryList === void 0 ? void 0 : _res$categoryList.list) !== null && _res$categoryList$lis !== void 0 ? _res$categoryList$lis : [])]\n    }));\n  }\n});\nconst Box = styled('div').withConfig({\n  displayName: \"id__Box\",\n  componentId: \"sc-13c54cm-0\"\n})([\"padding:0 20px;> header{font-size:18px;font-weight:bold;margin:10px 0;}\"]);\nconst CategoryItemStyle = styled(ButtonBase).withConfig({\n  displayName: \"id__CategoryItemStyle\",\n  componentId: \"sc-13c54cm-1\"\n})([\"&&&{width:100%;height:60px;display:flex;border-radius:8px;overflow:hidden;margin-bottom:10px;background:\", \";> img{height:100%;width:70%;}> span{flex:1;color:#fff;display:flex;align-items:center;justify-content:center;}}\"], grey[700]);\nconst categoryItemModel = modelFactory('categoryItemModel', {\n  test: ''\n}, {\n  getLevel: async (value, option) => {\n    return await option.query(doc.categoryLevel, {\n      data: value\n    });\n  }\n});\nconst ListBox = styled.div.withConfig({\n  displayName: \"id__ListBox\",\n  componentId: \"sc-13c54cm-2\"\n})([\"display:grid;grid-template-columns:repeat(2,1fr);grid-gap:15px;\"]);\nexport const CategoryPage = () => {\n  var _ref, _router$query;\n\n  const {\n    state: stateMe,\n    actions: actionsMe\n  } = useStoreModel(meModel);\n  useEffect(() => {\n    if (!stateMe.user.id) {\n      actionsMe.getLoginUser();\n    }\n  }, []);\n  const router = useRouter();\n  const id = (_ref = (_router$query = router.query) === null || _router$query === void 0 ? void 0 : _router$query.id) !== null && _ref !== void 0 ? _ref : '';\n  const {\n    state: stateCPM,\n    actions: actionsCPM,\n    getLoad\n  } = useStoreModel(CategoryPageModel);\n  const {\n    actions: actionsCI\n  } = useStoreModel(categoryItemModel);\n\n  const CategoryItem = v => {\n    return __jsx(CategoryItemStyle, {\n      key: `CategoryItem_${v.id}`,\n      onClick: async () => {\n        var _await$actionsCI$getL;\n\n        if (((_await$actionsCI$getL = await actionsCI.getLevel({\n          id: v.id\n        })) === null || _await$actionsCI$getL === void 0 ? void 0 : _await$actionsCI$getL.categoryLevel) === 3) {\n          await Router.push('/productList/[id]', `/productList/${v.id}`);\n        } else {\n          await Router.push('/category/[id]', `/category/${v.id}`);\n        }\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 12\n      }\n    }, __jsx(\"img\", {\n      src: dealImgUrl(v.imgUrl),\n      alt: \"\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 7\n      }\n    }), __jsx(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 7\n      }\n    }, v.name, __jsx(KeyboardArrowRight, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 21\n      }\n    })));\n  };\n\n  useEffect(() => {\n    if (id) {\n      actionsCPM.getProductList({\n        id\n      });\n    }\n  }, [id]);\n  return __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 10\n    }\n  }, __jsx(HeaderTitle, {\n    title: '',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 5\n    }\n  }), !!getLoad(doc.productsInCategory) && __jsx(LinearProgress, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 43\n    }\n  }), __jsx(BScroller, {\n    boxHeight: 'calc(100vh - 60px)',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 5\n    }\n  }, __jsx(Box, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 7\n    }\n  }, stateCPM.categoryList.length === 0 && stateCPM.productList.length === 0 && __jsx(NoData, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 88\n    }\n  }) || __jsx(React.Fragment, null, stateCPM.categoryList.map(value => CategoryItem(value)), __jsx(\"header\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 15\n    }\n  }, ls('热门推荐')), stateCPM.productList.length === 0 && __jsx(NoData, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 55\n    }\n  }), __jsx(ListBox, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 15\n    }\n  }, stateCPM.productList.map(value => __jsx(ProductItem, {\n    key: `ProductItem_${value.id}`,\n    product: value,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 52\n    }\n  })))))));\n};","map":{"version":3,"sources":["D:/code/zw/zw_client_web/utils/view/category/[id].tsx"],"names":["React","useEffect","Router","useRouter","useStoreModel","KeyboardArrowRight","ButtonBase","LinearProgress","fpMergePre","HeaderTitle","doc","BScroller","modelFactory","styled","grey","dealImgUrl","ProductItem","ls","NoData","meModel","CategoryPageModel","productList","categoryList","getProductList","value","option","res","query","productsInCategory","data","setData","list","Box","CategoryItemStyle","categoryItemModel","test","getLevel","categoryLevel","ListBox","div","CategoryPage","state","stateMe","actions","actionsMe","user","id","getLoginUser","router","stateCPM","actionsCPM","getLoad","actionsCI","CategoryItem","v","push","imgUrl","name","length","map"],"mappings":";;AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,OAAOC,MAAP,IAAgBC,SAAhB,QAAgC,aAAhC;AACA,SAAQC,aAAR,QAA4B,4BAA5B;AAEA,SAAQC,kBAAR,QAAiC,oBAAjC;AACA,SAAQC,UAAR,EAAoBC,cAApB,QAAyC,mBAAzC;AACA,SAAQC,UAAR,QAAyB,mBAAzB;AACA,SAAQC,WAAR,QAA0B,0CAA1B;AACA,SAAQC,GAAR,QAAkB,wBAAlB;AACA,SAAQC,SAAR,QAAwB,oCAAxB;AACA,SAAQC,YAAR,QAA2B,6BAA3B;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,SAAQC,IAAR,QAAmB,0BAAnB;AACA,SAAQC,UAAR,QAAyB,iBAAzB;AACA,SAAQC,WAAR,QAA0B,0CAA1B;AACA,SAAQC,EAAR,QAAiB,qBAAjB;AACA,SAAQC,MAAR,QAAqB,gCAArB;AACA,SAAQC,OAAR,QAAsB,aAAtB;AAEA,OAAO,MAAMC,iBAAiB,GAAGR,YAAY,CAAC,cAAD,EAAiB;AAC5DS,EAAAA,WAAW,EAAE,EAD+C;AAE5DC,EAAAA,YAAY,EAAE;AAF8C,CAAjB,EAG1C;AACDC,EAAAA,cAAc,EAAE,OAAOC,KAAP,EAAiCC,MAAjC,KAA4C;AAAA;;AAC1D,UAAMC,GAAG,GAAG,MAAMD,MAAM,CAACE,KAAP,CAAajB,GAAG,CAACkB,kBAAjB,EAAqC;AAACC,MAAAA,IAAI,EAAEL;AAAP,KAArC,CAAlB;AACAC,IAAAA,MAAM,CAACK,OAAP,CAAetB,UAAU,CAAC;AACxBa,MAAAA,WAAW,2BAAEK,GAAF,aAAEA,GAAF,uBAAEA,GAAG,CAAEE,kBAAP,yEAA6B,EADhB;AAExBN,MAAAA,YAAY,EAAE,CACZ,6BAAGI,GAAH,aAAGA,GAAH,4CAAGA,GAAG,CAAEJ,YAAR,sDAAG,kBAAmBS,IAAtB,yEAA8B,EAA9B,CADY;AAFU,KAAD,CAAzB;AAMD;AATA,CAH0C,CAAtC;AAgBP,MAAMC,GAAG,GAAGnB,MAAM,CAAC,KAAD,CAAT;AAAA;AAAA;AAAA,+EAAT;AASA,MAAMoB,iBAAiB,GAAGpB,MAAM,CAACP,UAAD,CAAT;AAAA;AAAA;AAAA,qOAQLQ,IAAI,CAAC,GAAD,CARC,CAAvB;AAuBA,MAAMoB,iBAAiB,GAAGtB,YAAY,CAAC,mBAAD,EAAsB;AAC1DuB,EAAAA,IAAI,EAAE;AADoD,CAAtB,EAEnC;AACDC,EAAAA,QAAQ,EAAE,OAAOZ,KAAP,EAAiCC,MAAjC,KAA4C;AACpD,WAAO,MAAMA,MAAM,CAACE,KAAP,CAAajB,GAAG,CAAC2B,aAAjB,EAAgC;AAC3CR,MAAAA,IAAI,EAAEL;AADqC,KAAhC,CAAb;AAGD;AALA,CAFmC,CAAtC;AAYA,MAAMc,OAAO,GAAGzB,MAAM,CAAC0B,GAAV;AAAA;AAAA;AAAA,uEAAb;AAOA,OAAO,MAAMC,YAAY,GAAG,MAAM;AAAA;;AAChC,QAAM;AAACC,IAAAA,KAAK,EAAEC,OAAR;AAAiBC,IAAAA,OAAO,EAAEC;AAA1B,MAAuCxC,aAAa,CAACe,OAAD,CAA1D;AACAlB,EAAAA,SAAS,CAAC,MAAM;AACd,QAAI,CAACyC,OAAO,CAACG,IAAR,CAAaC,EAAlB,EAAsB;AACpBF,MAAAA,SAAS,CAACG,YAAV;AACD;AACF,GAJQ,EAIN,EAJM,CAAT;AAKA,QAAMC,MAAM,GAAG7C,SAAS,EAAxB;AACA,QAAM2C,EAAE,4BAAIE,MAAM,CAACrB,KAAX,kDAAI,cAAcmB,EAAlB,uCAAmC,EAA3C;AACA,QAAM;AAACL,IAAAA,KAAK,EAAEQ,QAAR;AAAkBN,IAAAA,OAAO,EAAEO,UAA3B;AAAuCC,IAAAA;AAAvC,MAAkD/C,aAAa,CAACgB,iBAAD,CAArE;AACA,QAAM;AAACuB,IAAAA,OAAO,EAAES;AAAV,MAAuBhD,aAAa,CAAC8B,iBAAD,CAA1C;;AAEA,QAAMmB,YAAY,GAAIC,CAAD,IAAiB;AACpC,WAAO,MAAC,iBAAD;AACH,MAAA,GAAG,EAAG,gBAAeA,CAAC,CAACR,EAAG,EADvB;AAEH,MAAA,OAAO,EAAE,YAAY;AAAA;;AACnB,YAAI,0BAAC,MAAMM,SAAS,CAAChB,QAAV,CAAmB;AAC5BU,UAAAA,EAAE,EAAEQ,CAAC,CAACR;AADsB,SAAnB,CAAP,gFAECT,aAFD,MAEmB,CAFvB,EAE0B;AACxB,gBAAMnC,MAAM,CAACqD,IAAP,CAAY,mBAAZ,EAAkC,gBAAeD,CAAC,CAACR,EAAG,EAAtD,CAAN;AACD,SAJD,MAIO;AACL,gBAAM5C,MAAM,CAACqD,IAAP,CAAY,gBAAZ,EAA+B,aAAYD,CAAC,CAACR,EAAG,EAAhD,CAAN;AACD;AACF,OAVE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAYL;AACI,MAAA,GAAG,EAAE/B,UAAU,CAACuC,CAAC,CAACE,MAAH,CADnB;AAEI,MAAA,GAAG,EAAC,EAFR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAZK,EAgBL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAOF,CAAC,CAACG,IAAT,EAAc,MAAC,kBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAd,CAhBK,CAAP;AAkBD,GAnBD;;AAqBAxD,EAAAA,SAAS,CAAC,MAAM;AACd,QAAI6C,EAAJ,EAAQ;AACNI,MAAAA,UAAU,CAAC3B,cAAX,CAA0B;AAACuB,QAAAA;AAAD,OAA1B;AACD;AACF,GAJQ,EAIN,CAACA,EAAD,CAJM,CAAT;AAMA,SAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACL,MAAC,WAAD;AACI,IAAA,KAAK,EAAE,EADX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADK,EAIJ,CAAC,CAACK,OAAO,CAACzC,GAAG,CAACkB,kBAAL,CAAT,IAAqC,MAAC,cAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAJjC,EAKL,MAAC,SAAD;AAAW,IAAA,SAAS,EAAE,oBAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKqB,QAAQ,CAAC3B,YAAT,CAAsBoC,MAAtB,KAAiC,CAAjC,IAAsCT,QAAQ,CAAC5B,WAAT,CAAqBqC,MAArB,KAAgC,CAAvE,IAA6E,MAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAA9E,IAEG,4BACGT,QAAQ,CAAC3B,YAAT,CAAsBqC,GAAtB,CAA0BnC,KAAK,IAAI6B,YAAY,CAAC7B,KAAD,CAA/C,CADH,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAASP,EAAE,CAAC,MAAD,CAAX,CAFF,EAGIgC,QAAQ,CAAC5B,WAAT,CAAqBqC,MAArB,KAAgC,CAAjC,IAAuC,MAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAH1C,EAIE,MAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGT,QAAQ,CAAC5B,WAAT,CAAqBsC,GAArB,CAAyBnC,KAAK,IAAI,MAAC,WAAD;AAC/B,IAAA,GAAG,EAAG,eAAcA,KAAK,CAACsB,EAAG,EADE;AAE/B,IAAA,OAAO,EAAEtB,KAFsB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAlC,CADH,CAJF,CAHN,CADF,CALK,CAAP;AAyBD,CAhEM","sourcesContent":["import React, {useEffect} from 'react'\r\nimport Router, {useRouter} from 'next/router'\r\nimport {useStoreModel} from '../../ModelAction/useStore'\r\nimport {Category, CategoryItemInput, Product} from '../../graphqlTypes/types'\r\nimport {KeyboardArrowRight} from '@material-ui/icons'\r\nimport {ButtonBase, LinearProgress} from '@material-ui/core'\r\nimport {fpMergePre} from '../../tools/utils'\r\nimport {HeaderTitle} from '../../components/HeaderTitle/HeaderTitle'\r\nimport {doc} from '../../graphqlTypes/doc'\r\nimport {BScroller} from '../../components/BScroll/BScroller'\r\nimport {modelFactory} from '../../ModelAction/modelUtil'\r\nimport styled from 'styled-components'\r\nimport {grey} from '@material-ui/core/colors'\r\nimport {dealImgUrl} from '../../tools/img'\r\nimport {ProductItem} from '../../components/ProductItem/ProductItem'\r\nimport {ls} from '../../tools/dealKey'\r\nimport {NoData} from '../../components/NoData/NoData'\r\nimport {meModel} from '../me/model'\r\n\r\nexport const CategoryPageModel = modelFactory('CategoryPage', {\r\n  productList: [] as Product[],\r\n  categoryList: [] as Category[],\r\n}, {\r\n  getProductList: async (value: CategoryItemInput, option) => {\r\n    const res = await option.query(doc.productsInCategory, {data: value})\r\n    option.setData(fpMergePre({\r\n      productList: res?.productsInCategory ?? [],\r\n      categoryList: [\r\n        ...res?.categoryList?.list ?? [],\r\n      ],\r\n    }))\r\n  },\r\n\r\n})\r\n\r\nconst Box = styled('div')`\r\n  padding: 0 20px;\r\n  > header {\r\n    font-size: 18px;\r\n    font-weight: bold;\r\n    margin: 10px 0;\r\n  }\r\n`\r\n\r\nconst CategoryItemStyle = styled(ButtonBase)`\r\n  &&& {\r\n    width: 100%;\r\n    height: 60px;\r\n    display: flex;\r\n    border-radius: 8px;\r\n    overflow: hidden;\r\n    margin-bottom: 10px;\r\n    background: ${grey[700]};\r\n    > img {\r\n      height: 100%;\r\n      width: 70%;\r\n    }\r\n    > span {\r\n      flex: 1;\r\n      color: #fff;\r\n      display: flex;\r\n      align-items: center;\r\n      justify-content: center;\r\n    }\r\n  }\r\n`\r\n\r\nconst categoryItemModel = modelFactory('categoryItemModel', {\r\n  test: '',\r\n}, {\r\n  getLevel: async (value: CategoryItemInput, option) => {\r\n    return await option.query(doc.categoryLevel, {\r\n      data: value,\r\n    })\r\n  },\r\n\r\n})\r\n\r\n\r\nconst ListBox = styled.div`\r\n  display: grid;\r\n  grid-template-columns: repeat(2, 1fr);\r\n  grid-gap: 15px;\r\n  \r\n`\r\n\r\nexport const CategoryPage = () => {\r\n  const {state: stateMe, actions: actionsMe} = useStoreModel(meModel)\r\n  useEffect(() => {\r\n    if (!stateMe.user.id) {\r\n      actionsMe.getLoginUser()\r\n    }\r\n  }, [])\r\n  const router = useRouter()\r\n  const id = (router.query?.id as string) ?? ''\r\n  const {state: stateCPM, actions: actionsCPM, getLoad} = useStoreModel(CategoryPageModel)\r\n  const {actions: actionsCI} = useStoreModel(categoryItemModel)\r\n\r\n  const CategoryItem = (v: Category) => {\r\n    return <CategoryItemStyle\r\n        key={`CategoryItem_${v.id}`}\r\n        onClick={async () => {\r\n          if ((await actionsCI.getLevel({\r\n            id: v.id,\r\n          }))?.categoryLevel === 3) {\r\n            await Router.push('/productList/[id]', `/productList/${v.id}`)\r\n          } else {\r\n            await Router.push('/category/[id]', `/category/${v.id}`)\r\n          }\r\n        }}\r\n    >\r\n      <img\r\n          src={dealImgUrl(v.imgUrl)}\r\n          alt=''\r\n      />\r\n      <span>{v.name}<KeyboardArrowRight/></span>\r\n    </CategoryItemStyle>\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (id) {\r\n      actionsCPM.getProductList({id})\r\n    }\r\n  }, [id])\r\n\r\n  return <div>\r\n    <HeaderTitle\r\n        title={''}\r\n    />\r\n    {!!getLoad(doc.productsInCategory) && <LinearProgress/>}\r\n    <BScroller boxHeight={'calc(100vh - 60px)'}>\r\n      <Box>\r\n        {((stateCPM.categoryList.length === 0 && stateCPM.productList.length === 0) && <NoData/>) ||\r\n        (\r\n            <>\r\n              {stateCPM.categoryList.map(value => CategoryItem(value))}\r\n              <header>{ls('热门推荐')}</header>\r\n              {(stateCPM.productList.length === 0) && <NoData/>}\r\n              <ListBox>\r\n                {stateCPM.productList.map(value => <ProductItem\r\n                    key={`ProductItem_${value.id}`}\r\n                    product={value}/>)}\r\n              </ListBox>\r\n            </>\r\n        )\r\n        }\r\n\r\n      </Box>\r\n    </BScroller>\r\n  </div>\r\n}\r\n"]},"metadata":{},"sourceType":"module"}