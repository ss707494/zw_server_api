{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nimport Router from 'next/router';\nimport { fpMergePre } from '../../../tools/utils';\nimport { setToken } from '../../../tools/token';\nimport { doc } from '../../../graphqlTypes/doc';\nimport { modelFactory } from '../../../ModelAction/modelUtil';\n\nvar _toLogin = /*#__PURE__*/function () {\n  var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.next = 2;\n            return Router.push('/m/login');\n\n          case 2:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n\n  return function toLogin() {\n    return _ref.apply(this, arguments);\n  };\n}();\n\nexport var meModel = modelFactory('meModel', {\n  user: {}\n}, {\n  getLoginUser: function () {\n    var _getLoginUser = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2(value, option) {\n      var _yield$option$query;\n\n      var res;\n      return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              _context2.next = 2;\n              return option.query(doc.oneUser);\n\n            case 2:\n              _context2.t1 = _yield$option$query = _context2.sent;\n              _context2.t0 = _context2.t1 === null;\n\n              if (_context2.t0) {\n                _context2.next = 6;\n                break;\n              }\n\n              _context2.t0 = _yield$option$query === void 0;\n\n            case 6:\n              if (!_context2.t0) {\n                _context2.next = 10;\n                break;\n              }\n\n              _context2.t2 = void 0;\n              _context2.next = 11;\n              break;\n\n            case 10:\n              _context2.t2 = _yield$option$query.oneUser;\n\n            case 11:\n              res = _context2.t2;\n              option.setData(fpMergePre({\n                user: res\n              }));\n              return _context2.abrupt(\"return\", res);\n\n            case 14:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2);\n    }));\n\n    function getLoginUser(_x, _x2) {\n      return _getLoginUser.apply(this, arguments);\n    }\n\n    return getLoginUser;\n  }(),\n  logout: function () {\n    var _logout = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee3(value, option) {\n      return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n        while (1) {\n          switch (_context3.prev = _context3.next) {\n            case 0:\n              setToken('');\n              setToken('', 'refreshtoken');\n              _context3.next = 4;\n              return _toLogin();\n\n            case 4:\n            case \"end\":\n              return _context3.stop();\n          }\n        }\n      }, _callee3);\n    }));\n\n    function logout(_x3, _x4) {\n      return _logout.apply(this, arguments);\n    }\n\n    return logout;\n  }(),\n  toLogin: function toLogin(value) {\n    _toLogin();\n  }\n});","map":null,"metadata":{},"sourceType":"module"}