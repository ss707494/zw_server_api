{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\n\nvar _this = this,\n    _jsxFileName = \"D:\\\\code\\\\zw\\\\zw_client_web\\\\utils\\\\view\\\\groupProduct\\\\[id].tsx\",\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { useEffect } from 'react';\nimport { useRouter } from 'next/router';\nimport { modelFactory } from '../../ModelAction/modelUtil';\nimport { doc } from '../../graphqlTypes/doc';\nimport { useStoreModel } from '../../ModelAction/useStore';\nimport { fpMergePre } from '../../tools/utils';\nimport CusCarousel from '../../components/Swipe/Swipe';\nexport var groupProductModel = modelFactory('groupProductModel', {\n  product: {}\n}, {\n  getData: function () {\n    var _getData = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(value, option) {\n      var _res$productListByIds, _res$productListByIds2;\n\n      var res;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return option.query(doc.productListByIds, {\n                ids: [value]\n              });\n\n            case 2:\n              res = _context.sent;\n              option.setData(fpMergePre({\n                product: (_res$productListByIds = res === null || res === void 0 ? void 0 : (_res$productListByIds2 = res.productListByIds) === null || _res$productListByIds2 === void 0 ? void 0 : _res$productListByIds2.list[0]) !== null && _res$productListByIds !== void 0 ? _res$productListByIds : {}\n              }));\n\n            case 4:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    function getData(_x, _x2) {\n      return _getData.apply(this, arguments);\n    }\n\n    return getData;\n  }()\n});\nexport var GroupProduct = function GroupProduct() {\n  _s();\n\n  var _ref, _router$query, _stateGroupProduct$pr, _stateGroupProduct$pr2;\n\n  var router = useRouter();\n  var id = (_ref = (_router$query = router.query) === null || _router$query === void 0 ? void 0 : _router$query.id) !== null && _ref !== void 0 ? _ref : '';\n\n  var _useStoreModel = useStoreModel(groupProductModel),\n      actionsGroupProduct = _useStoreModel.actions,\n      stateGroupProduct = _useStoreModel.state;\n\n  useEffect(function () {\n    actionsGroupProduct.getData(id);\n  }, [id]);\n  return __jsx(\"div\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 10\n    }\n  }, __jsx(CusCarousel, {\n    height: '160px',\n    dataList: (_stateGroupProduct$pr = stateGroupProduct.product) === null || _stateGroupProduct$pr === void 0 ? void 0 : (_stateGroupProduct$pr2 = _stateGroupProduct$pr.img) === null || _stateGroupProduct$pr2 === void 0 ? void 0 : _stateGroupProduct$pr2.map(function (v) {\n      return _objectSpread(_objectSpread({}, v), {}, {\n        imgUrl: v === null || v === void 0 ? void 0 : v.url\n      });\n    }),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 5\n    }\n  }), id, \"groupProduct\");\n};\n\n_s(GroupProduct, \"gQ8JdzelDC5ZvAAmPqA/NqGTkI4=\", false, function () {\n  return [useRouter, useStoreModel];\n});\n\n_c = GroupProduct;\n\nvar _c;\n\n$RefreshReg$(_c, \"GroupProduct\");","map":{"version":3,"sources":["D:/code/zw/zw_client_web/utils/view/groupProduct/[id].tsx"],"names":["React","useEffect","useRouter","modelFactory","doc","useStoreModel","fpMergePre","CusCarousel","groupProductModel","product","getData","value","option","query","productListByIds","ids","res","setData","list","GroupProduct","router","id","actionsGroupProduct","actions","stateGroupProduct","state","img","map","v","imgUrl","url"],"mappings":";;;;;;;;;;;;;;AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,SAAQC,SAAR,QAAwB,aAAxB;AACA,SAAQC,YAAR,QAA2B,6BAA3B;AAEA,SAAQC,GAAR,QAAkB,wBAAlB;AACA,SAAQC,aAAR,QAA4B,4BAA5B;AACA,SAAQC,UAAR,QAAyB,mBAAzB;AACA,OAAOC,WAAP,MAAwB,8BAAxB;AAEA,OAAO,IAAMC,iBAAiB,GAAGL,YAAY,CAAC,mBAAD,EAAsB;AACjEM,EAAAA,OAAO,EAAE;AADwD,CAAtB,EAE1C;AACDC,EAAAA,OAAO;AAAA,4EAAE,iBAAOC,KAAP,EAAsBC,MAAtB;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBACWA,MAAM,CAACC,KAAP,CAAaT,GAAG,CAACU,gBAAjB,EAAmC;AACnDC,gBAAAA,GAAG,EAAE,CAACJ,KAAD;AAD8C,eAAnC,CADX;;AAAA;AACDK,cAAAA,GADC;AAIPJ,cAAAA,MAAM,CAACK,OAAP,CAAeX,UAAU,CAAC;AACxBG,gBAAAA,OAAO,2BAAEO,GAAF,aAAEA,GAAF,iDAAEA,GAAG,CAAEF,gBAAP,2DAAE,uBAAuBI,IAAvB,CAA4B,CAA5B,CAAF,yEAAoC;AADnB,eAAD,CAAzB;;AAJO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAF;;AAAA;AAAA;AAAA;;AAAA;AAAA;AADN,CAF0C,CAAtC;AAcP,OAAO,IAAMC,YAAY,GAAG,SAAfA,YAAe,GAAM;AAAA;;AAAA;;AAChC,MAAMC,MAAM,GAAGlB,SAAS,EAAxB;AACA,MAAMmB,EAAE,4BAAID,MAAM,CAACP,KAAX,kDAAI,cAAcQ,EAAlB,uCAAmC,EAA3C;;AAFgC,uBAGiChB,aAAa,CAACG,iBAAD,CAH9C;AAAA,MAGhBc,mBAHgB,kBAGzBC,OAHyB;AAAA,MAGYC,iBAHZ,kBAGKC,KAHL;;AAIhCxB,EAAAA,SAAS,CAAC,YAAM;AACdqB,IAAAA,mBAAmB,CAACZ,OAApB,CAA4BW,EAA5B;AACD,GAFQ,EAEN,CAACA,EAAD,CAFM,CAAT;AAIA,SAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACL,MAAC,WAAD;AACI,IAAA,MAAM,EAAE,OADZ;AAEI,IAAA,QAAQ,2BAAEG,iBAAiB,CAACf,OAApB,oFAAE,sBAA2BiB,GAA7B,2DAAE,uBAAgCC,GAAhC,CAAoC,UAAAC,CAAC;AAAA,6CAC1CA,CAD0C;AAE7CC,QAAAA,MAAM,EAAED,CAAF,aAAEA,CAAF,uBAAEA,CAAC,CAAEE;AAFkC;AAAA,KAArC,CAFd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADK,EAQJT,EARI,iBAAP;AAWD,CAnBM;;GAAMF,Y;UACIjB,S,EAEkDG,a;;;KAHtDc,Y","sourcesContent":["import React, {useEffect} from 'react'\r\nimport {useRouter} from 'next/router'\r\nimport {modelFactory} from '../../ModelAction/modelUtil'\r\nimport {Product} from '../../graphqlTypes/types'\r\nimport {doc} from '../../graphqlTypes/doc'\r\nimport {useStoreModel} from '../../ModelAction/useStore'\r\nimport {fpMergePre} from '../../tools/utils'\r\nimport CusCarousel from '../../components/Swipe/Swipe'\r\n\r\nexport const groupProductModel = modelFactory('groupProductModel', {\r\n  product: {} as Product,\r\n}, {\r\n  getData: async (value: string, option) => {\r\n    const res = await option.query(doc.productListByIds, {\r\n      ids: [value],\r\n    })\r\n    option.setData(fpMergePre({\r\n      product: res?.productListByIds?.list[0] ?? {},\r\n    }))\r\n  },\r\n\r\n})\r\n\r\nexport const GroupProduct = () => {\r\n  const router = useRouter()\r\n  const id = (router.query?.id as string) ?? ''\r\n  const {actions: actionsGroupProduct, state: stateGroupProduct} = useStoreModel(groupProductModel)\r\n  useEffect(() => {\r\n    actionsGroupProduct.getData(id)\r\n  }, [id])\r\n\r\n  return <div>\r\n    <CusCarousel\r\n        height={'160px'}\r\n        dataList={stateGroupProduct.product?.img?.map(v => ({\r\n          ...v,\r\n          imgUrl: v?.url,\r\n        })) as []}\r\n    />\r\n    {id}\r\n    groupProduct\r\n  </div>\r\n}\r\n"]},"metadata":{},"sourceType":"module"}