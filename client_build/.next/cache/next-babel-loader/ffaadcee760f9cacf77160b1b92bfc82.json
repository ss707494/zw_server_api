{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\n\nvar _this = this,\n    _jsxFileName = \"D:\\\\code\\\\zw\\\\zw_client_web\\\\utils\\\\view\\\\me\\\\myInfo\\\\updatePassword.tsx\";\n\nvar __jsx = React.createElement;\nimport React from 'react';\nimport { HeaderTitle } from '../../../components/HeaderTitle/HeaderTitle';\nimport { SigninInput } from '../../register';\nimport { ls } from '../../../tools/dealKey';\nimport { modelFactory } from '../../../ModelAction/modelUtil';\nimport { useStoreModel } from '../../../ModelAction/useStore';\nimport { fpMergePre } from '../../../tools/utils';\nimport styled from 'styled-components';\nimport { ButtonLoad } from '../../../components/ButtonLoad/ButtonLoad';\nimport { doc } from '../../../graphqlTypes/doc';\nimport { showMessage } from '../../../components/Message/Message';\nimport router from 'next/router';\nimport { setToken } from '../../../tools/token';\nimport { setForm } from '../../../tools/commonAction';\nvar updatePasswordModel = modelFactory('updatePasswordModel', {\n  form: {\n    oldPassword: '',\n    newPassword: '',\n    confirmPassword: ''\n  }\n}, {\n  setForm: setForm,\n  clearForm: function clearForm(value, option) {\n    option.setData(fpMergePre({\n      form: {\n        oldPassword: '',\n        newPassword: '',\n        confirmPassword: ''\n      }\n    }));\n  },\n  submit: function submit(value, option) {\n    var _res$updatePassword, _res$updatePassword$u;\n\n    var form, res, _res$updatePassword2, _res$updatePassword2$, _res$updatePassword3, _res$updatePassword3$;\n\n    return _regeneratorRuntime.async(function submit$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            form = option.data.form;\n\n            if (!(!form.oldPassword || !form.newPassword)) {\n              _context.next = 3;\n              break;\n            }\n\n            return _context.abrupt(\"return\", showMessage('请填写表单'));\n\n          case 3:\n            if (!(form.newPassword !== form.confirmPassword)) {\n              _context.next = 5;\n              break;\n            }\n\n            return _context.abrupt(\"return\", showMessage('两次密码不一致'));\n\n          case 5:\n            _context.next = 7;\n            return _regeneratorRuntime.awrap(option.mutate(doc.updatePassword, {\n              data: form\n            }));\n\n          case 7:\n            res = _context.sent;\n\n            if (res === null || res === void 0 ? void 0 : (_res$updatePassword = res.updatePassword) === null || _res$updatePassword === void 0 ? void 0 : (_res$updatePassword$u = _res$updatePassword.user) === null || _res$updatePassword$u === void 0 ? void 0 : _res$updatePassword$u.id) {\n              setToken((_res$updatePassword2 = res.updatePassword) === null || _res$updatePassword2 === void 0 ? void 0 : (_res$updatePassword2$ = _res$updatePassword2.authBody) === null || _res$updatePassword2$ === void 0 ? void 0 : _res$updatePassword2$.token);\n              setToken((_res$updatePassword3 = res.updatePassword) === null || _res$updatePassword3 === void 0 ? void 0 : (_res$updatePassword3$ = _res$updatePassword3.authBody) === null || _res$updatePassword3$ === void 0 ? void 0 : _res$updatePassword3$.refreshtoken, 'refreshtoken');\n              showMessage('操作成功');\n            }\n\n            return _context.abrupt(\"return\", res);\n\n          case 10:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  }\n});\nexport var FieldContain = styled.div.withConfig({\n  displayName: \"updatePassword__FieldContain\",\n  componentId: \"sc-125gec2-0\"\n})([\"padding:0 22px;\", \"{margin-top:10px;}\"], SigninInput);\nexport var UpdatePassword = function UpdatePassword() {\n  var _useStoreModel = useStoreModel(updatePasswordModel),\n      stateUPM = _useStoreModel.state,\n      actionsUPM = _useStoreModel.actions;\n\n  return __jsx(\"div\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 10\n    }\n  }, __jsx(HeaderTitle, {\n    title: '修改密码',\n    backCall: actionsUPM.clearForm,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 5\n    }\n  }), __jsx(FieldContain, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 5\n    }\n  }, __jsx(SigninInput, {\n    label: ls('原始密码'),\n    type: 'password',\n    value: stateUPM.form.oldPassword,\n    onChange: function onChange(event) {\n      return actionsUPM.setForm(['oldPassword', event.target.value]);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }\n  }), __jsx(SigninInput, {\n    label: ls('新密码'),\n    type: 'password',\n    value: stateUPM.form.newPassword,\n    onChange: function onChange(event) {\n      return actionsUPM.setForm(['newPassword', event.target.value]);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 7\n    }\n  }), __jsx(SigninInput, {\n    label: ls('确认密码'),\n    type: 'password',\n    value: stateUPM.form.confirmPassword,\n    onChange: function onChange(event) {\n      return actionsUPM.setForm(['confirmPassword', event.target.value]);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 7\n    }\n  }), __jsx(ButtonLoad, {\n    style: {\n      marginTop: '20px'\n    },\n    variant: 'contained',\n    color: 'secondary',\n    fullWidth: true,\n    onClick: function _callee() {\n      var _res$updatePassword4, _res$updatePassword4$;\n\n      var res;\n      return _regeneratorRuntime.async(function _callee$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              _context2.next = 2;\n              return _regeneratorRuntime.awrap(actionsUPM.submit());\n\n            case 2:\n              res = _context2.sent;\n\n              if (res === null || res === void 0 ? void 0 : (_res$updatePassword4 = res.updatePassword) === null || _res$updatePassword4 === void 0 ? void 0 : (_res$updatePassword4$ = _res$updatePassword4.user) === null || _res$updatePassword4$ === void 0 ? void 0 : _res$updatePassword4$.id) {\n                actionsUPM.clearForm();\n                router.back();\n              }\n\n            case 4:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 7\n    }\n  }, ls('保存'))));\n};","map":{"version":3,"sources":["D:/code/zw/zw_client_web/utils/view/me/myInfo/updatePassword.tsx"],"names":["React","HeaderTitle","SigninInput","ls","modelFactory","useStoreModel","fpMergePre","styled","ButtonLoad","doc","showMessage","router","setToken","setForm","updatePasswordModel","form","oldPassword","newPassword","confirmPassword","clearForm","value","option","setData","submit","data","mutate","updatePassword","res","user","id","authBody","token","refreshtoken","FieldContain","div","UpdatePassword","stateUPM","state","actionsUPM","actions","event","target","marginTop","back"],"mappings":";;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,WAAR,QAA0B,6CAA1B;AACA,SAAQC,WAAR,QAA0B,gBAA1B;AACA,SAAQC,EAAR,QAAiB,wBAAjB;AACA,SAAQC,YAAR,QAA2B,gCAA3B;AACA,SAAQC,aAAR,QAA4B,+BAA5B;AACA,SAAQC,UAAR,QAAmC,sBAAnC;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,SAAQC,UAAR,QAAyB,2CAAzB;AACA,SAAQC,GAAR,QAAkB,2BAAlB;AACA,SAAQC,WAAR,QAA0B,qCAA1B;AACA,OAAOC,MAAP,MAAmB,aAAnB;AACA,SAAQC,QAAR,QAAuB,sBAAvB;AACA,SAASC,OAAT,QAAwB,6BAAxB;AAEA,IAAMC,mBAAmB,GAAGV,YAAY,CAAC,qBAAD,EAAwB;AAC9DW,EAAAA,IAAI,EAAE;AACJC,IAAAA,WAAW,EAAE,EADT;AAEJC,IAAAA,WAAW,EAAE,EAFT;AAGJC,IAAAA,eAAe,EAAE;AAHb;AADwD,CAAxB,EAMrC;AACDL,EAAAA,OAAO,EAAEA,OADR;AAEDM,EAAAA,SAAS,EAAE,mBAACC,KAAD,EAAQC,MAAR,EAAmB;AAC5BA,IAAAA,MAAM,CAACC,OAAP,CAAehB,UAAU,CAAC;AACxBS,MAAAA,IAAI,EAAE;AACJC,QAAAA,WAAW,EAAE,EADT;AAEJC,QAAAA,WAAW,EAAE,EAFT;AAGJC,QAAAA,eAAe,EAAE;AAHb;AADkB,KAAD,CAAzB;AAOD,GAVA;AAWDK,EAAAA,MAAM,EAAE,gBAAOH,KAAP,EAAcC,MAAd;AAAA;;AAAA;;AAAA;AAAA;AAAA;AAAA;AACAN,YAAAA,IADA,GACOM,MAAM,CAACG,IAAP,CAAYT,IADnB;;AAAA,kBAEF,CAACA,IAAI,CAACC,WAAN,IAAqB,CAACD,IAAI,CAACE,WAFzB;AAAA;AAAA;AAAA;;AAAA,6CAGGP,WAAW,CAAC,OAAD,CAHd;;AAAA;AAAA,kBAKFK,IAAI,CAACE,WAAL,KAAqBF,IAAI,CAACG,eALxB;AAAA;AAAA;AAAA;;AAAA,6CAMGR,WAAW,CAAC,SAAD,CANd;;AAAA;AAAA;AAAA,6CAQYW,MAAM,CAACI,MAAP,CAAchB,GAAG,CAACiB,cAAlB,EAAkC;AAClDF,cAAAA,IAAI,EAAET;AAD4C,aAAlC,CARZ;;AAAA;AAQAY,YAAAA,GARA;;AAWN,gBAAIA,GAAJ,aAAIA,GAAJ,8CAAIA,GAAG,CAAED,cAAT,iFAAI,oBAAqBE,IAAzB,0DAAI,sBAA2BC,EAA/B,EAAmC;AACjCjB,cAAAA,QAAQ,yBAACe,GAAG,CAACD,cAAL,kFAAC,qBAAoBI,QAArB,0DAAC,sBAA8BC,KAA/B,CAAR;AACAnB,cAAAA,QAAQ,yBAACe,GAAG,CAACD,cAAL,kFAAC,qBAAoBI,QAArB,0DAAC,sBAA8BE,YAA/B,EAA6C,cAA7C,CAAR;AACAtB,cAAAA,WAAW,CAAC,MAAD,CAAX;AACD;;AAfK,6CAgBCiB,GAhBD;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAXP,CANqC,CAAxC;AAsCA,OAAO,IAAMM,YAAY,GAAG1B,MAAM,CAAC2B,GAAV;AAAA;AAAA;AAAA,8CAErBhC,WAFqB,CAAlB;AAOP,OAAO,IAAMiC,cAAc,GAAG,SAAjBA,cAAiB,GAAM;AAAA,uBACa9B,aAAa,CAACS,mBAAD,CAD1B;AAAA,MACpBsB,QADoB,kBAC3BC,KAD2B;AAAA,MACDC,UADC,kBACVC,OADU;;AAGlC,SAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACL,MAAC,WAAD;AACI,IAAA,KAAK,EAAE,MADX;AAEI,IAAA,QAAQ,EAAED,UAAU,CAACnB,SAFzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADK,EAKL,MAAC,YAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,WAAD;AACI,IAAA,KAAK,EAAEhB,EAAE,CAAC,MAAD,CADb;AAEI,IAAA,IAAI,EAAE,UAFV;AAGI,IAAA,KAAK,EAAEiC,QAAQ,CAACrB,IAAT,CAAcC,WAHzB;AAII,IAAA,QAAQ,EAAE,kBAAAwB,KAAK;AAAA,aAAIF,UAAU,CAACzB,OAAX,CAAmB,CAAC,aAAD,EAAgB2B,KAAK,CAACC,MAAN,CAAarB,KAA7B,CAAnB,CAAJ;AAAA,KAJnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAOE,MAAC,WAAD;AACI,IAAA,KAAK,EAAEjB,EAAE,CAAC,KAAD,CADb;AAEI,IAAA,IAAI,EAAE,UAFV;AAGI,IAAA,KAAK,EAAEiC,QAAQ,CAACrB,IAAT,CAAcE,WAHzB;AAII,IAAA,QAAQ,EAAE,kBAAAuB,KAAK;AAAA,aAAIF,UAAU,CAACzB,OAAX,CAAmB,CAAC,aAAD,EAAgB2B,KAAK,CAACC,MAAN,CAAarB,KAA7B,CAAnB,CAAJ;AAAA,KAJnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAPF,EAaE,MAAC,WAAD;AACI,IAAA,KAAK,EAAEjB,EAAE,CAAC,MAAD,CADb;AAEI,IAAA,IAAI,EAAE,UAFV;AAGI,IAAA,KAAK,EAAEiC,QAAQ,CAACrB,IAAT,CAAcG,eAHzB;AAII,IAAA,QAAQ,EAAE,kBAAAsB,KAAK;AAAA,aAAIF,UAAU,CAACzB,OAAX,CAAmB,CAAC,iBAAD,EAAoB2B,KAAK,CAACC,MAAN,CAAarB,KAAjC,CAAnB,CAAJ;AAAA,KAJnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAbF,EAmBE,MAAC,UAAD;AACI,IAAA,KAAK,EAAE;AAACsB,MAAAA,SAAS,EAAE;AAAZ,KADX;AAEI,IAAA,OAAO,EAAE,WAFb;AAGI,IAAA,KAAK,EAAE,WAHX;AAII,IAAA,SAAS,MAJb;AAKI,IAAA,OAAO,EAAE;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+CACWJ,UAAU,CAACf,MAAX,EADX;;AAAA;AACDI,cAAAA,GADC;;AAEP,kBAAIA,GAAJ,aAAIA,GAAJ,+CAAIA,GAAG,CAAED,cAAT,kFAAI,qBAAqBE,IAAzB,0DAAI,sBAA2BC,EAA/B,EAAmC;AACjCS,gBAAAA,UAAU,CAACnB,SAAX;AACAR,gBAAAA,MAAM,CAACgC,IAAP;AACD;;AALM;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KALb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAYExC,EAAE,CAAC,IAAD,CAZJ,CAnBF,CALK,CAAP;AAuCD,CA1CM","sourcesContent":["import React from 'react'\r\nimport {HeaderTitle} from '../../../components/HeaderTitle/HeaderTitle'\r\nimport {SigninInput} from '../../register'\r\nimport {ls} from '../../../tools/dealKey'\r\nimport {modelFactory} from '../../../ModelAction/modelUtil'\r\nimport {useStoreModel} from '../../../ModelAction/useStore'\r\nimport {fpMergePre, fpSetPre} from '../../../tools/utils'\r\nimport styled from 'styled-components'\r\nimport {ButtonLoad} from '../../../components/ButtonLoad/ButtonLoad'\r\nimport {doc} from '../../../graphqlTypes/doc'\r\nimport {showMessage} from '../../../components/Message/Message'\r\nimport router from 'next/router'\r\nimport {setToken} from '../../../tools/token'\r\nimport { setForm } from '../../../tools/commonAction'\r\n\r\nconst updatePasswordModel = modelFactory('updatePasswordModel', {\r\n  form: {\r\n    oldPassword: '',\r\n    newPassword: '',\r\n    confirmPassword: '',\r\n  },\r\n}, {\r\n  setForm: setForm,\r\n  clearForm: (value, option) => {\r\n    option.setData(fpMergePre({\r\n      form: {\r\n        oldPassword: '',\r\n        newPassword: '',\r\n        confirmPassword: '',\r\n      },\r\n    }))\r\n  },\r\n  submit: async (value, option) => {\r\n    const form = option.data.form\r\n    if (!form.oldPassword || !form.newPassword) {\r\n      return showMessage('请填写表单')\r\n    }\r\n    if (form.newPassword !== form.confirmPassword) {\r\n      return showMessage('两次密码不一致')\r\n    }\r\n    const res = await option.mutate(doc.updatePassword, {\r\n      data: form,\r\n    })\r\n    if (res?.updatePassword?.user?.id) {\r\n      setToken(res.updatePassword?.authBody?.token)\r\n      setToken(res.updatePassword?.authBody?.refreshtoken, 'refreshtoken')\r\n      showMessage('操作成功')\r\n    }\r\n    return res\r\n  },\r\n\r\n})\r\n\r\nexport const FieldContain = styled.div`\r\n  padding: 0 22px;\r\n  ${SigninInput} {\r\n    margin-top: 10px;\r\n  }\r\n`\r\n\r\nexport const UpdatePassword = () => {\r\n  const {state: stateUPM, actions: actionsUPM} = useStoreModel(updatePasswordModel)\r\n\r\n  return <div>\r\n    <HeaderTitle\r\n        title={'修改密码'}\r\n        backCall={actionsUPM.clearForm}\r\n    />\r\n    <FieldContain>\r\n      <SigninInput\r\n          label={ls('原始密码')}\r\n          type={'password'}\r\n          value={stateUPM.form.oldPassword}\r\n          onChange={event => actionsUPM.setForm(['oldPassword', event.target.value])}\r\n      />\r\n      <SigninInput\r\n          label={ls('新密码')}\r\n          type={'password'}\r\n          value={stateUPM.form.newPassword}\r\n          onChange={event => actionsUPM.setForm(['newPassword', event.target.value])}\r\n      />\r\n      <SigninInput\r\n          label={ls('确认密码')}\r\n          type={'password'}\r\n          value={stateUPM.form.confirmPassword}\r\n          onChange={event => actionsUPM.setForm(['confirmPassword', event.target.value])}\r\n      />\r\n      <ButtonLoad\r\n          style={{marginTop: '20px'}}\r\n          variant={'contained'}\r\n          color={'secondary'}\r\n          fullWidth\r\n          onClick={async () => {\r\n            const res = await actionsUPM.submit()\r\n            if (res?.updatePassword?.user?.id) {\r\n              actionsUPM.clearForm()\r\n              router.back()\r\n            }\r\n          }}\r\n      >{ls('保存')}</ButtonLoad>\r\n    </FieldContain>\r\n  </div>\r\n}\r\n"]},"metadata":{},"sourceType":"module"}