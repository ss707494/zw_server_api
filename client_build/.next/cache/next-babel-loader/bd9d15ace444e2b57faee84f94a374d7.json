{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"D:\\\\code\\\\zw\\\\zw_client_web\\\\utils\\\\view\\\\me\\\\myInfo\\\\updatePassword.tsx\";\n\nvar __jsx = React.createElement;\nimport React from 'react';\nimport { HeaderTitle } from '../../../components/HeaderTitle/HeaderTitle';\nimport { SigninInput } from '../../register';\nimport { ls } from '../../../tools/dealKey';\nimport { modelFactory } from '../../../ModelAction/modelUtil';\nimport { useStoreModel } from '../../../ModelAction/useStore';\nimport { fpSetPre } from '../../../tools/utils';\nimport styled from 'styled-components';\nimport { ButtonLoad } from '../../../components/ButtonLoad/ButtonLoad';\nimport { doc } from '../../../graphqlTypes/doc';\nimport { showMessage } from '../../../components/Message/Message';\nimport router from 'next/router';\nvar updatePasswordModel = modelFactory('updatePasswordModel', {\n  form: {\n    oldPassword: '',\n    newPassword: '',\n    confirmPassword: ''\n  }\n}, {\n  setForm: function setForm(_ref, option) {\n    var _ref2 = _slicedToArray(_ref, 2),\n        path = _ref2[0],\n        value = _ref2[1];\n\n    option.setData(fpSetPre(\"form.\".concat(path), value));\n  },\n  submit: function submit(value, option) {\n    var _res$updatePassword;\n\n    var form, res;\n    return _regeneratorRuntime.async(function submit$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            form = option.data.form;\n\n            if (!(!form.oldPassword || !form.newPassword)) {\n              _context.next = 3;\n              break;\n            }\n\n            return _context.abrupt(\"return\", showMessage('请填写表单'));\n\n          case 3:\n            if (!(form.newPassword !== form.confirmPassword)) {\n              _context.next = 5;\n              break;\n            }\n\n            return _context.abrupt(\"return\", showMessage('两次密码不一致'));\n\n          case 5:\n            _context.next = 7;\n            return _regeneratorRuntime.awrap(option.mutate(doc.updatePassword, {\n              data: form\n            }));\n\n          case 7:\n            res = _context.sent;\n\n            if (res === null || res === void 0 ? void 0 : (_res$updatePassword = res.updatePassword) === null || _res$updatePassword === void 0 ? void 0 : _res$updatePassword.id) {\n              showMessage('操作成功');\n              router.back();\n            }\n\n          case 9:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  }\n});\nvar Contain = styled.div.withConfig({\n  displayName: \"updatePassword__Contain\",\n  componentId: \"sc-125gec2-0\"\n})([\"padding:0 22px;\", \"{margin-top:10px;}\"], SigninInput);\nexport var UpdatePassword = function UpdatePassword() {\n  var _useStoreModel = useStoreModel(updatePasswordModel),\n      stateUPM = _useStoreModel.state,\n      actionsUPM = _useStoreModel.actions;\n\n  return __jsx(\"div\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 10\n    }\n  }, __jsx(HeaderTitle, {\n    title: '修改密码',\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 5\n    }\n  }), __jsx(Contain, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 5\n    }\n  }, __jsx(SigninInput, {\n    label: ls('原始密码'),\n    type: 'password',\n    value: stateUPM.form.oldPassword,\n    onChange: function onChange(event) {\n      return actionsUPM.setForm(['name', event.target.value]);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }\n  }), __jsx(SigninInput, {\n    label: ls('新密码'),\n    type: 'password',\n    value: stateUPM.form.newPassword,\n    onChange: function onChange(event) {\n      return actionsUPM.setForm(['newPassword', event.target.value]);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }\n  }), __jsx(SigninInput, {\n    label: ls('确认密码'),\n    type: 'password',\n    value: stateUPM.form.confirmPassword,\n    onChange: function onChange(event) {\n      return actionsUPM.setForm(['confirmPassword', event.target.value]);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }\n  }), __jsx(ButtonLoad, {\n    style: {\n      marginTop: '20px'\n    },\n    variant: 'contained',\n    color: 'secondary',\n    fullWidth: true,\n    onClick: function onClick() {\n      return actionsUPM.submit();\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 7\n    }\n  }, \"\\u4FDD\\u5B58\")));\n};","map":{"version":3,"sources":["D:/code/zw/zw_client_web/utils/view/me/myInfo/updatePassword.tsx"],"names":["React","HeaderTitle","SigninInput","ls","modelFactory","useStoreModel","fpSetPre","styled","ButtonLoad","doc","showMessage","router","updatePasswordModel","form","oldPassword","newPassword","confirmPassword","setForm","option","path","value","setData","submit","data","mutate","updatePassword","res","id","back","Contain","div","UpdatePassword","stateUPM","state","actionsUPM","actions","event","target","marginTop"],"mappings":"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","sourcesContent":["import React from 'react'\r\nimport {HeaderTitle} from '../../../components/HeaderTitle/HeaderTitle'\r\nimport {SigninInput} from '../../register'\r\nimport {ls} from '../../../tools/dealKey'\r\nimport {modelFactory} from '../../../ModelAction/modelUtil'\r\nimport {useStoreModel} from '../../../ModelAction/useStore'\r\nimport {fpSetPre} from '../../../tools/utils'\r\nimport styled from 'styled-components'\r\nimport {ButtonLoad} from '../../../components/ButtonLoad/ButtonLoad'\r\nimport {doc} from '../../../graphqlTypes/doc'\r\nimport {showMessage} from '../../../components/Message/Message'\r\nimport router from 'next/router'\r\n\r\nconst updatePasswordModel = modelFactory('updatePasswordModel', {\r\n  form: {\r\n    oldPassword: '',\r\n    newPassword: '',\r\n    confirmPassword: '',\r\n  },\r\n}, {\r\n  setForm: ([path, value], option) => {\r\n    option.setData(fpSetPre(`form.${path}`, value))\r\n  },\r\n  submit: async (value, option) => {\r\n    const form = option.data.form\r\n    if (!form.oldPassword || !form.newPassword) {\r\n      return showMessage('请填写表单')\r\n    }\r\n    if (form.newPassword !== form.confirmPassword) {\r\n      return showMessage('两次密码不一致')\r\n    }\r\n    const res = await option.mutate(doc.updatePassword, {\r\n      data: form,\r\n    })\r\n    if (res?.updatePassword?.id) {\r\n      showMessage('操作成功')\r\n      router.back()\r\n    }\r\n  },\r\n\r\n})\r\n\r\nconst Contain = styled.div`\r\n  padding: 0 22px;\r\n  ${SigninInput} {\r\n    margin-top: 10px;\r\n  }\r\n`\r\n\r\nexport const UpdatePassword = () => {\r\n  const {state: stateUPM, actions: actionsUPM} = useStoreModel(updatePasswordModel)\r\n\r\n  return <div>\r\n    <HeaderTitle\r\n        title={'修改密码'}\r\n    />\r\n    <Contain>\r\n      <SigninInput\r\n          label={ls('原始密码')}\r\n          type={'password'}\r\n          value={stateUPM.form.oldPassword}\r\n          onChange={event => actionsUPM.setForm(['name', event.target.value])}\r\n      />\r\n      <SigninInput\r\n          label={ls('新密码')}\r\n          type={'password'}\r\n          value={stateUPM.form.newPassword}\r\n          onChange={event => actionsUPM.setForm(['newPassword', event.target.value])}\r\n      />\r\n      <SigninInput\r\n          label={ls('确认密码')}\r\n          type={'password'}\r\n          value={stateUPM.form.confirmPassword}\r\n          onChange={event => actionsUPM.setForm(['confirmPassword', event.target.value])}\r\n      />\r\n      <ButtonLoad\r\n          style={{marginTop: '20px'}}\r\n          variant={'contained'}\r\n          color={'secondary'}\r\n          fullWidth\r\n          onClick={() => actionsUPM.submit()}\r\n      >保存</ButtonLoad>\r\n    </Contain>\r\n  </div>\r\n}\r\n"]},"metadata":{},"sourceType":"module"}