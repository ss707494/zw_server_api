{"ast":null,"code":"var __jsx = React.createElement;\nimport styled from 'styled-components';\nimport React from 'react';\nimport { dealImgUrl } from '../../../../tools/img';\nimport { dealMoney } from '../../../../tools/utils';\nimport { mpStyle } from '../../../../style/common';\nimport { Space } from '../../../../components/Box/Box';\nimport { Button, Card } from '@material-ui/core';\nimport { ShoppingCart } from '@material-ui/icons';\nimport { useStoreModel } from '../../../../ModelAction/useStore';\nimport { updateShopCartModel } from '../../../../components/ProductItem/UpdateShopCart';\nimport { showMessage } from '../../../../components/Message/Message';\nimport { productModel } from '../../../../components/ProductItem/ProductItem';\nimport { shopCartModel } from '../../../m/cart';\nconst Box = styled(Card).withConfig({\n  displayName: \"productItemBox__Box\",\n  componentId: \"sc-1i837b0-0\"\n})([\"display:flex;flex-direction:column;width:\", \";padding:\", \";\"], props => {\n  var _props$width;\n\n  return `${(_props$width = props.width) !== null && _props$width !== void 0 ? _props$width : 322}px`;\n}, mpStyle.spacePx.xs);\nconst ImgBox = styled.div.withConfig({\n  displayName: \"productItemBox__ImgBox\",\n  componentId: \"sc-1i837b0-1\"\n})([\"align-self:center;> img{width:\", \";height:\", \";}\"], props => {\n  var _props$width2;\n\n  return `${((_props$width2 = props.width) !== null && _props$width2 !== void 0 ? _props$width2 : 322) - 82}px`;\n}, props => {\n  var _props$width3;\n\n  return `${(((_props$width3 = props.width) !== null && _props$width3 !== void 0 ? _props$width3 : 322) - 82) * 4 / 3}px`;\n});\nconst Price = styled.div.withConfig({\n  displayName: \"productItemBox__Price\",\n  componentId: \"sc-1i837b0-2\"\n})([\"display:flex;align-items:center;> aside{\", \";color:\", \";}> main{\", \";text-decoration:line-through;color:\", \";}\"], mpStyle.fontType.n, mpStyle.red, mpStyle.fontType.s, mpStyle.grey);\nconst Footer = styled.div.withConfig({\n  displayName: \"productItemBox__Footer\",\n  componentId: \"sc-1i837b0-3\"\n})([\"display:flex;\"]);\nconst Name = styled.div.withConfig({\n  displayName: \"productItemBox__Name\",\n  componentId: \"sc-1i837b0-4\"\n})([\"flex-grow:1;\"]);\nexport const ProductItemBox = ({\n  product,\n  width = 322\n}) => {\n  var _product$img, _product$img$;\n\n  const {\n    actions: actionsUpdateShopCartModel\n  } = useStoreModel(updateShopCartModel);\n  const {\n    actions: actionsProductModel\n  } = useStoreModel(productModel);\n  const {\n    actions: actionsShopCartModel,\n    state: stateSCM\n  } = useStoreModel(shopCartModel);\n  return __jsx(Box, {\n    width: width\n  }, __jsx(ImgBox, {\n    width: width\n  }, __jsx(\"img\", {\n    src: dealImgUrl(product === null || product === void 0 ? void 0 : (_product$img = product.img) === null || _product$img === void 0 ? void 0 : (_product$img$ = _product$img[0]) === null || _product$img$ === void 0 ? void 0 : _product$img$.url),\n    alt: ''\n  })), __jsx(Space, {\n    h: 8\n  }), __jsx(Price, null, __jsx(\"aside\", null, dealMoney(product === null || product === void 0 ? void 0 : product.priceOut)), __jsx(Space, {\n    w: 16\n  }), __jsx(\"main\", null, dealMoney(product === null || product === void 0 ? void 0 : product.priceMarket))), __jsx(Space, {\n    h: 8\n  }), __jsx(Footer, null, __jsx(Name, null, product.name), __jsx(Button, {\n    variant: 'contained',\n    color: 'secondary',\n    onClick: async () => {\n      const res = await actionsUpdateShopCartModel.openClick();\n\n      if ((res === null || res === void 0 ? void 0 : res.num) > 0) {\n        var _await$actionsProduct, _await$actionsProduct2;\n\n        if ((_await$actionsProduct = await actionsProductModel.updateNumShopCart({\n          product,\n          number: ~~(res === null || res === void 0 ? void 0 : res.num)\n        })) === null || _await$actionsProduct === void 0 ? void 0 : (_await$actionsProduct2 = _await$actionsProduct.updateNumShopCart) === null || _await$actionsProduct2 === void 0 ? void 0 : _await$actionsProduct2.id) {\n          showMessage('操作成功');\n          actionsShopCartModel.getList();\n        }\n      }\n    }\n  }, __jsx(ShoppingCart, null))));\n};","map":null,"metadata":{},"sourceType":"module"}