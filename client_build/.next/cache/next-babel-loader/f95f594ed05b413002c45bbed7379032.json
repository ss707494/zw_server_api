{"ast":null,"code":"var __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { useEffect } from 'react';\nimport { PcHeader } from '../pcComponents/header/header';\nimport { TopAction } from '../pcComponents/topAction/topAction';\nimport { Space } from '../../../components/Box/Box';\nimport { MainBox } from '../pcComponents/mainBox/mainBox';\nimport { PcContentBox } from '../home/pcHome';\nimport { styled } from '@material-ui/styles';\nimport { ll } from '../../../tools/dealKey';\nimport { mpStyle } from '../../../style/common';\nimport { useRouter } from 'next/router';\nimport { useStoreModel } from '../../../ModelAction/useStore';\nimport { dealGroupNumbers, groupProductModel, GroupSubmit, YellowStar } from '../../m/groupProduct/[id]';\nimport CusCarousel from '../../../components/Swipe/Swipe';\nimport { dealMoney } from '../../../tools/utils';\nimport StarBorderRoundedIcon from '@material-ui/icons/StarBorderRounded';\nimport StarRoundedIcon from '@material-ui/icons/StarRounded';\nimport { GroupQueueList } from '../../m/groupProduct/groupQueueList';\nimport { Divider } from '@material-ui/core';\nimport { HomeType } from '../../m/home/appModule';\nconst HeadTab = styled('div')(_objectSpread({}, mpStyle.fontTypeObj.xl));\nconst Box = styled('div')({\n  display: 'grid',\n  gridTemplateColumns: '500px 1fr',\n  gridColumnGap: 85\n});\nconst RightBox = styled('div')({});\nconst Info = styled('div')({\n  padding: '21px 24px',\n  background: '#EBEBEB',\n  borderRadius: '6px',\n  '& >header': {\n    display: 'grid',\n    gridAutoFlow: 'column',\n    justifyContent: 'start',\n    alignItems: 'center',\n    fontWeight: 600,\n    fontSize: 18,\n    '&>span': {\n      background: 'linear-gradient(270deg, #696969 0%, #373737 100%)',\n      borderRadius: '4px',\n      display: 'inline-grid',\n      gridAutoFlow: 'column',\n      justifyContent: 'start',\n      alignItems: 'center',\n      margin: '0 20px'\n    }\n  }\n});\nconst InfoFooter = styled('div')({\n  display: 'grid',\n  gridTemplateColumns: '1fr max-content',\n  '&>aside': {\n    display: 'grid',\n    gridAutoFlow: 'column'\n  }\n});\nconst Title = styled('div')({\n  fontSize: '16px',\n  fontWeight: 600,\n  color: '#4A4A4A'\n});\nconst GroupQueueBox = styled('div')({\n  display: 'grid',\n  gridTemplateColumns: 'repeat(2, 1fr)',\n  gridColumnGap: 21,\n  gridRowGap: 14,\n  '& .GroupQueueListBox': {\n    marginTop: 0\n  }\n});\nconst PleaseClick = styled('div')({\n  display: 'grid',\n  gridAutoFlow: 'column',\n  justifyContent: 'start',\n  alignItems: 'center'\n});\nconst SelectNum = styled('div')({\n  '& .MuiSvgIcon-root': {\n    fontSize: 60\n  }\n});\nconst Price = styled('div')({\n  marginTop: '8px',\n  display: 'flex',\n  justifyContent: 'space-between',\n  alignItems: 'center',\n  '&> main': {\n    'fontSize': '18px',\n    fontWeight: 'bold'\n  },\n  '&> main, section': {\n    '&> *': {\n      textAlign: 'center'\n    }\n  }\n});\nexport const PriceBox = () => {\n  var _product$priceOut;\n\n  const {\n    state: stateGroupProduct\n  } = useStoreModel(groupProductModel);\n  const product = stateGroupProduct.product;\n  return __jsx(Price, null, __jsx(\"main\", null, __jsx(\"header\", null, dealMoney(stateGroupProduct.dealDiscountAmountUnit(stateGroupProduct))), __jsx(\"footer\", null, ll('折后价格'))), __jsx(\"div\", null, \"=\"), __jsx(\"section\", null, __jsx(\"header\", null, dealMoney((_product$priceOut = product.priceOut) !== null && _product$priceOut !== void 0 ? _product$priceOut : 0)), __jsx(\"footer\", null, ll('基准价格'))), __jsx(\"div\", null, \"x\"), __jsx(\"section\", null, __jsx(\"header\", null, stateGroupProduct.numDiscount), __jsx(\"footer\", null, ll('份数折扣'))), __jsx(\"div\", null, \"x\"), __jsx(\"section\", null, __jsx(\"header\", null, stateGroupProduct.groupDiscount), __jsx(\"footer\", null, ll('成团折上折'))));\n};\nconst GroupSubmitBox = styled(props => __jsx(GroupSubmit, props))({\n  height: 64\n});\nexport const PcGroupProduct = () => {\n  var _ref, _router$query, _product$img;\n\n  const router = useRouter();\n  const id = (_ref = (_router$query = router.query) === null || _router$query === void 0 ? void 0 : _router$query.id) !== null && _ref !== void 0 ? _ref : '';\n  const {\n    actions: actionsGroupProduct,\n    state: stateGroupProduct\n  } = useStoreModel(groupProductModel);\n  const product = stateGroupProduct.product;\n  useEffect(() => {\n    actionsGroupProduct.getData(id);\n  }, [actionsGroupProduct, id]);\n  return __jsx(MainBox, null, __jsx(PcHeader, null), __jsx(PcContentBox, null, __jsx(TopAction, null), __jsx(HeadTab, null, ll('拼团商品详情')), __jsx(Space, {\n    h: 40\n  }), __jsx(Box, null, __jsx(CusCarousel, {\n    showIndicators: false,\n    showThumbs: true,\n    height: '500px',\n    dataList: product === null || product === void 0 ? void 0 : (_product$img = product.img) === null || _product$img === void 0 ? void 0 : _product$img.map(v => _objectSpread(_objectSpread({}, v), {}, {\n      imgUrl: v === null || v === void 0 ? void 0 : v.url\n    }))\n  }), __jsx(RightBox, null, __jsx(Info, null, __jsx(\"header\", null, product.name, \" (\", product.groupRemark, \" / \", product.groupAmount, product.groupAmountUnitString, \" \", `每一份${dealGroupNumbers(product)}${product.groupAmountUnitString}`, \" / \", ll('分团精度'), __jsx(\"span\", null, [...Array(product.groupPrecision)].map((v, i) => i).map(value => __jsx(YellowStar, {\n    key: value\n  }))), \" )\"), __jsx(Space, {\n    h: 14\n  }), __jsx(InfoFooter, null, __jsx(\"section\", null, ll('基准价格'), __jsx(\"span\", null, __jsx(\"strong\", null, \" \", dealMoney(product.priceOut)), \"/\", product.groupAmountUnitString)), __jsx(\"aside\", null, ll('已成团'), \": \", stateGroupProduct.groupQueueList.filter(v => v.sumFillAmount === (product === null || product === void 0 ? void 0 : product.groupPrecision)).length, ll('单'), __jsx(Space, {\n    w: 8\n  }), \"|\", __jsx(Space, {\n    w: 8\n  }), ll('拼团中'), \": \", stateGroupProduct.groupQueueList.filter(v => {\n    var _v$sumFillAmount, _product$groupPrecisi;\n\n    return ((_v$sumFillAmount = v.sumFillAmount) !== null && _v$sumFillAmount !== void 0 ? _v$sumFillAmount : 0) < ((_product$groupPrecisi = product === null || product === void 0 ? void 0 : product.groupPrecision) !== null && _product$groupPrecisi !== void 0 ? _product$groupPrecisi : 0);\n  }).length, ll('单')))), __jsx(Space, {\n    h: 16\n  }), __jsx(Title, null, ll('拼团中')), __jsx(Space, {\n    h: 16\n  }), __jsx(GroupQueueBox, null, __jsx(GroupQueueList, null)), __jsx(Space, {\n    h: 33\n  }), __jsx(Divider, null), __jsx(Space, {\n    h: 24\n  }), __jsx(Title, null, ll('智能匹配')), __jsx(Space, {\n    h: 16\n  }), __jsx(PleaseClick, null, ll('请点击'), __jsx(StarBorderRoundedIcon, null), ll('确定您需要的份数')), __jsx(Space, {\n    h: 16\n  }), __jsx(SelectNum, null, [...Array(product.groupPrecision)].map((v, i) => i).map(value => value + 1 > stateGroupProduct.selectNum ? __jsx(StarBorderRoundedIcon, {\n    key: `clickStar${value}`,\n    fontSize: 'large',\n    onClick: () => actionsGroupProduct.updateSelectNum(value + 1)\n  }) : __jsx(StarRoundedIcon, {\n    key: `clickStar${value}`,\n    style: {\n      color: '#FDD334'\n    },\n    fontSize: 'large',\n    onClick: () => actionsGroupProduct.updateSelectNum(value + 1)\n  }))), __jsx(PriceBox, null), __jsx(Space, {\n    h: 20\n  }), __jsx(GroupSubmitBox, {\n    submitCall: () => {\n      router.push({\n        pathname: '/pc/cart/orderPage',\n        query: {\n          homeType: HomeType.group\n        }\n      });\n    }\n  })))), __jsx(Space, {\n    h: 120\n  }));\n};","map":null,"metadata":{},"sourceType":"module"}