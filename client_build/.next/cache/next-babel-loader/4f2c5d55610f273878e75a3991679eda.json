{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/esm/toConsumableArray\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport { useCallback, useEffect, useState } from \"react\";\nimport { graphQLMutate, graphQLQuery } from '../client';\nimport { baseActionOption } from './modelUtil';\nexport var originStore = {};\n\nvar isFunction = function isFunction(functionToCheck) {\n  return functionToCheck && {}.toString.call(functionToCheck) === '[object Function]';\n};\n\nexport var dealNameSpace = function dealNameSpace(key, nameSpace) {\n  if (nameSpace) {\n    return \"\".concat(key, \"_\").concat(nameSpace);\n  }\n\n  return \"\".concat(key);\n};\nexport var useStoreModel = function useStoreModel(model, key) {\n  var _model$name;\n\n  var _key = (_model$name = model.name) !== null && _model$name !== void 0 ? _model$name : !key ? '' : Array.isArray(key) ? dealNameSpace(key[0], key[1]) : key;\n\n  var actions = model.actions,\n      state = model.state;\n\n  var _useState = useState(Object.create(null)),\n      setState = _useState[1];\n\n  if (!_key) {\n    throw Error('no key');\n  }\n\n  if (!originStore[_key]) {\n    originStore[_key] = {\n      keys: _key,\n      state: state,\n      actions: {},\n      setData: []\n    };\n  }\n\n  var notice = useCallback(function (data) {\n    originStore[_key].setData.forEach(function (value) {\n      value === null || value === void 0 ? void 0 : value(data);\n    });\n  }, [_key]);\n  var setData = useCallback(function (data) {\n    var oldState = originStore[_key].state;\n    var newData = isFunction(data) ? data(oldState) : data;\n    originStore[_key].state = newData;\n    notice(newData);\n  }, [_key, notice]);\n  var setLoad = useCallback(function (query, flag) {\n    setData(function (prevState) {\n      var _prevState$fetchLoad, _query$loc, _query$loc$source;\n\n      return _objectSpread({}, prevState, {\n        fetchLoad: _objectSpread({}, (_prevState$fetchLoad = prevState.fetchLoad) !== null && _prevState$fetchLoad !== void 0 ? _prevState$fetchLoad : {}, _defineProperty({}, query === null || query === void 0 ? void 0 : (_query$loc = query.loc) === null || _query$loc === void 0 ? void 0 : (_query$loc$source = _query$loc.source) === null || _query$loc$source === void 0 ? void 0 : _query$loc$source.body, flag))\n      });\n    });\n  }, [setData]);\n  var setError = useCallback(function (query, err) {\n    setData(function (prevState) {\n      var _prevState$fetchError, _query$loc2, _query$loc2$source;\n\n      return _objectSpread({}, prevState, {\n        fetchError: _objectSpread({}, (_prevState$fetchError = prevState.fetchError) !== null && _prevState$fetchError !== void 0 ? _prevState$fetchError : {}, _defineProperty({}, query === null || query === void 0 ? void 0 : (_query$loc2 = query.loc) === null || _query$loc2 === void 0 ? void 0 : (_query$loc2$source = _query$loc2.source) === null || _query$loc2$source === void 0 ? void 0 : _query$loc2$source.body, err))\n      });\n    });\n  }, [setData]);\n  var query = useCallback(function _callee(query, params, option) {\n    var res;\n    return _regeneratorRuntime.async(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            setLoad(query, true);\n            _context.next = 3;\n            return _regeneratorRuntime.awrap(graphQLQuery()(query, params, option)[\"catch\"](function (e) {\n              setError(query, e);\n            })[\"finally\"](function () {\n              setLoad(query, false);\n            }));\n\n          case 3:\n            res = _context.sent;\n            return _context.abrupt(\"return\", res === null || res === void 0 ? void 0 : res.data);\n\n          case 5:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  }, [setError, setLoad]);\n  var mutate = useCallback(function _callee2(mutation, params, option) {\n    var res;\n    return _regeneratorRuntime.async(function _callee2$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            setLoad(mutation, true);\n            _context2.next = 3;\n            return _regeneratorRuntime.awrap(graphQLMutate()(mutation, params, option)[\"catch\"](function (e) {\n              setError(mutation, e);\n            })[\"finally\"](function () {\n              setLoad(mutation, false);\n            }));\n\n          case 3:\n            res = _context2.sent;\n            return _context2.abrupt(\"return\", res === null || res === void 0 ? void 0 : res.data);\n\n          case 5:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  }, [setError, setLoad]);\n\n  if (Object.keys(originStore[_key].actions).length === 0 && originStore[_key].actions.constructor === Object) {\n    Object.keys(actions).forEach(function (value) {\n      originStore[_key].actions[value] = function (v) {\n        return actions[value](v, _objectSpread({}, baseActionOption, {\n          data: originStore[_key].state,\n          notice: notice,\n          setData: setData,\n          query: query,\n          mutate: mutate,\n          store: originStore\n        }));\n      };\n    });\n  }\n\n  useEffect(function () {\n    Object.keys(actions).forEach(function (value) {\n      originStore[_key].actions[value] = function (v) {\n        return actions[value](v, _objectSpread({}, baseActionOption, {\n          data: originStore[_key].state,\n          notice: notice,\n          setData: setData,\n          query: query,\n          mutate: mutate,\n          store: originStore\n        }));\n      };\n    });\n  }, [_key, actions, mutate, notice, query, setData]);\n  useEffect(function () {\n    var _originStore$_key$set;\n\n    originStore[_key].setData = [].concat(_toConsumableArray((_originStore$_key$set = originStore[_key].setData) !== null && _originStore$_key$set !== void 0 ? _originStore$_key$set : []), [setState]);\n    return function () {\n      originStore[_key].setData = originStore[_key].setData.filter(function (value) {\n        return value !== setState;\n      });\n    };\n  }, [_key]);\n  return {\n    state: originStore[_key].state,\n    actions: originStore[_key].actions,\n    store: originStore,\n    getLoad: function getLoad(query) {\n      var _query$loc3, _query$loc3$source;\n\n      return originStore[_key].state.fetchLoad[query === null || query === void 0 ? void 0 : (_query$loc3 = query.loc) === null || _query$loc3 === void 0 ? void 0 : (_query$loc3$source = _query$loc3.source) === null || _query$loc3$source === void 0 ? void 0 : _query$loc3$source.body] ? 1 : 0;\n    }\n  };\n};","map":null,"metadata":{},"sourceType":"module"}