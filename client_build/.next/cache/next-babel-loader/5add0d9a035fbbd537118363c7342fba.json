{"ast":null,"code":"var _jsxFileName = \"D:\\\\code\\\\zw\\\\zw_client_web\\\\utils\\\\view\\\\groupProduct\\\\[id].tsx\";\nvar __jsx = React.createElement;\nimport React, { useEffect } from 'react';\nimport { useRouter } from 'next/router';\nimport { modelFactory } from '../../ModelAction/modelUtil';\nimport { doc } from '../../graphqlTypes/doc';\nimport { useStoreModel } from '../../ModelAction/useStore';\nexport const groupProductModel = modelFactory('groupProductModel', {\n  product: {}\n}, {\n  getData: async (value, option) => {\n    const res = await option.query(doc.productListByIds, {\n      ids: [value]\n    });\n    console.log(res);\n  }\n});\nexport const GroupProduct = () => {\n  var _ref, _router$query;\n\n  const router = useRouter();\n  const id = (_ref = (_router$query = router.query) === null || _router$query === void 0 ? void 0 : _router$query.id) !== null && _ref !== void 0 ? _ref : '';\n  const {\n    actions: actionsGroupProduct,\n    state: stateGroupProduct\n  } = useStoreModel(groupProductModel);\n  useEffect(() => {\n    actionsGroupProduct.getData(id);\n  }, [id]);\n  return __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 10\n    }\n  }, id, \"groupProduct\");\n};","map":{"version":3,"sources":["D:/code/zw/zw_client_web/utils/view/groupProduct/[id].tsx"],"names":["React","useEffect","useRouter","modelFactory","doc","useStoreModel","groupProductModel","product","getData","value","option","res","query","productListByIds","ids","console","log","GroupProduct","router","id","actions","actionsGroupProduct","state","stateGroupProduct"],"mappings":";;AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,SAAQC,SAAR,QAAwB,aAAxB;AACA,SAAQC,YAAR,QAA2B,6BAA3B;AAEA,SAAQC,GAAR,QAAkB,wBAAlB;AACA,SAAQC,aAAR,QAA4B,4BAA5B;AAEA,OAAO,MAAMC,iBAAiB,GAAGH,YAAY,CAAC,mBAAD,EAAsB;AACjEI,EAAAA,OAAO,EAAE;AADwD,CAAtB,EAE1C;AACDC,EAAAA,OAAO,EAAE,OAAOC,KAAP,EAAsBC,MAAtB,KAAiC;AACxC,UAAMC,GAAG,GAAG,MAAMD,MAAM,CAACE,KAAP,CAAaR,GAAG,CAACS,gBAAjB,EAAmC;AACnDC,MAAAA,GAAG,EAAE,CAACL,KAAD;AAD8C,KAAnC,CAAlB;AAGAM,IAAAA,OAAO,CAACC,GAAR,CAAYL,GAAZ;AACD;AANA,CAF0C,CAAtC;AAYP,OAAO,MAAMM,YAAY,GAAG,MAAM;AAAA;;AAChC,QAAMC,MAAM,GAAGhB,SAAS,EAAxB;AACA,QAAMiB,EAAE,4BAAID,MAAM,CAACN,KAAX,kDAAI,cAAcO,EAAlB,uCAAmC,EAA3C;AACA,QAAM;AAACC,IAAAA,OAAO,EAAEC,mBAAV;AAA+BC,IAAAA,KAAK,EAAEC;AAAtC,MAA2DlB,aAAa,CAACC,iBAAD,CAA9E;AACAL,EAAAA,SAAS,CAAC,MAAM;AACdoB,IAAAA,mBAAmB,CAACb,OAApB,CAA4BW,EAA5B;AACD,GAFQ,EAEN,CAACA,EAAD,CAFM,CAAT;AAIA,SAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACJA,EADI,iBAAP;AAID,CAZM","sourcesContent":["import React, {useEffect} from 'react'\r\nimport {useRouter} from 'next/router'\r\nimport {modelFactory} from '../../ModelAction/modelUtil'\r\nimport {Product} from '../../graphqlTypes/types'\r\nimport {doc} from '../../graphqlTypes/doc'\r\nimport {useStoreModel} from '../../ModelAction/useStore'\r\n\r\nexport const groupProductModel = modelFactory('groupProductModel', {\r\n  product: {} as Product,\r\n}, {\r\n  getData: async (value: string, option) => {\r\n    const res = await option.query(doc.productListByIds, {\r\n      ids: [value]\r\n    })\r\n    console.log(res)\r\n  },\r\n\r\n})\r\n\r\nexport const GroupProduct = () => {\r\n  const router = useRouter()\r\n  const id = (router.query?.id as string) ?? ''\r\n  const {actions: actionsGroupProduct, state: stateGroupProduct} = useStoreModel(groupProductModel)\r\n  useEffect(() => {\r\n    actionsGroupProduct.getData(id)\r\n  }, [id])\r\n\r\n  return <div>\r\n    {id}\r\n    groupProduct\r\n  </div>\r\n}\r\n"]},"metadata":{},"sourceType":"module"}