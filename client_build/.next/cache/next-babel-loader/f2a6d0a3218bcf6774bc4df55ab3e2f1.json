{"ast":null,"code":"var __jsx = React.createElement;\nimport React, { useEffect } from 'react';\nimport { modelFactory } from '../../ModelAction/modelUtil';\nimport { doc } from '../../graphqlTypes/doc';\nimport { dealMaybeNumber, dealMoney, fpMergePre } from '../../tools/utils';\nimport { useStoreModel } from '../../ModelAction/useStore';\nimport { ls } from '../../tools/dealKey';\nimport { HeaderTitle } from '../../components/HeaderTitle/HeaderTitle';\nimport { LinearProgress, MenuItem, TextField } from '@material-ui/core';\nimport { grey } from '@material-ui/core/colors';\nimport styled from 'styled-components';\nimport { getPickUpTypeName, PickUpTypeEnum } from '../../ss_common/enum';\nimport { CartProduct } from './CartProduct';\nimport { setForm } from '../../tools/commonAction';\nexport const shopCartModel = modelFactory('shopCartModel', {\n  shopCartList: [],\n  form: {\n    pickUpType: PickUpTypeEnum.Self\n  }\n}, {\n  clearForm: (value, option) => option.setData(fpMergePre({\n    form: {\n      pickUpType: PickUpTypeEnum.Self\n    }\n  })),\n  setForm: setForm,\n  getList: async (value, option) => {\n    var _res$shopCartList;\n\n    const res = await option.query(doc.userShopCartList);\n    option.setData(fpMergePre({\n      shopCartList: (_res$shopCartList = res === null || res === void 0 ? void 0 : res.shopCartList) !== null && _res$shopCartList !== void 0 ? _res$shopCartList : []\n    }));\n  }\n});\nconst Box = styled.section.withConfig({\n  displayName: \"cart__Box\",\n  componentId: \"sc-6jpkeq-0\"\n})([\"padding:0 20px;\"]);\nexport const ShopCartPage = () => {\n  const {\n    state: stateSCM,\n    actions: actionsSCM,\n    getLoad\n  } = useStoreModel(shopCartModel);\n  useEffect(() => {\n    actionsSCM.getList();\n  }, []);\n  console.log(stateSCM.shopCartList);\n  const productNumber = stateSCM.shopCartList.reduce((pre, cur) => {\n    var _cur$number;\n\n    return pre + ((_cur$number = cur === null || cur === void 0 ? void 0 : cur.number) !== null && _cur$number !== void 0 ? _cur$number : 0);\n  }, 0);\n  const productSubtotal = dealMoney(stateSCM.shopCartList.reduce((pre, cur) => {\n    var _cur$product;\n\n    return pre + dealMaybeNumber(cur === null || cur === void 0 ? void 0 : cur.number) * dealMaybeNumber(cur === null || cur === void 0 ? void 0 : (_cur$product = cur.product) === null || _cur$product === void 0 ? void 0 : _cur$product.priceOut);\n  }, 0));\n  return __jsx(\"div\", null, __jsx(HeaderTitle, {\n    title: '购物车'\n  }), !!getLoad(doc.userShopCartList) && __jsx(LinearProgress, null) || __jsx(\"div\", {\n    style: {\n      height: '4px'\n    }\n  }), __jsx(Box, null, __jsx(\"div\", {\n    style: {\n      fontSize: '18px',\n      textAlign: 'center'\n    }\n  }, productNumber, ls('件商品')), __jsx(\"div\", {\n    style: {\n      fontSize: '14px',\n      textAlign: 'center',\n      color: grey[600],\n      marginTop: '8px',\n      marginBottom: '10px'\n    }\n  }, ls('小计'), \":\", productSubtotal), stateSCM.shopCartList.map(value => __jsx(CartProduct, {\n    key: `CartProduct_${value.id}`,\n    shopCart: value\n  })), __jsx(TextField, {\n    style: {\n      marginTop: '10px'\n    },\n    fullWidth: true,\n    label: ls('运送方式'),\n    select: true,\n    value: stateSCM.form.pickUpType,\n    onChange: event => actionsSCM.setForm(['pickUpType', event.target.value])\n  }, __jsx(MenuItem, {\n    value: PickUpTypeEnum.Self\n  }, ls(getPickUpTypeName(PickUpTypeEnum.Self))), __jsx(MenuItem, {\n    value: PickUpTypeEnum.Delivery\n  }, ls(getPickUpTypeName(PickUpTypeEnum.Delivery))))));\n};","map":null,"metadata":{},"sourceType":"module"}