{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { useEffect } from 'react';\nimport { modelFactory } from '../../../../../ModelAction/modelUtil';\nimport { useStoreModel } from '../../../../../ModelAction/useStore';\nimport { dealLastNumber, fpMergePre } from '../../../../../tools/utils';\nimport { SigninInput } from '../../../register';\nimport { FieldContain } from '../../myInfo/updatePassword';\nimport { HeaderTitle } from '../../../../../components/HeaderTitle/HeaderTitle';\nimport { setForm } from '../../../../../tools/commonAction';\nimport { ls } from '../../../../../tools/dealKey';\nimport { useRouter } from 'next/router';\nimport { ButtonLoad } from '../../../../../components/ButtonLoad/ButtonLoad';\nimport { doc } from '../../../../../graphqlTypes/doc';\nimport { showMessage } from '../../../../../components/Message/Message';\nimport { DatePicker } from '@material-ui/pickers';\nimport { FormControl, FormControlLabel, FormLabel, MenuItem, Radio, RadioGroup, TextField } from '@material-ui/core';\nimport { Space } from '../../../../../components/Box/Box';\nimport { CreditAddressInputTypeEnum, ProvinceData } from '../../../../../ss_common/enum';\nimport styled from 'styled-components';\nimport { myAddressModel } from '../../myAddress/list';\nexport var myCreditCardEditModel = modelFactory('myCreditCardEditModel', {\n  selectId: '',\n  form: {\n    number: '',\n    code: '',\n    name: '',\n    userName: '',\n    addressDetail: '',\n    zipCode: '',\n    city: '',\n    zip: '',\n    province: '',\n    district: '',\n    address: '',\n    contact: '',\n    expirationTime: null,\n    creditAddressInputType: CreditAddressInputTypeEnum.Input\n  },\n  isEditNumber: true\n}, {\n  setForm: setForm,\n  clearForm: function clearForm(value, option) {\n    return option.setData(fpMergePre({\n      form: {\n        number: '',\n        code: '',\n        name: '',\n        userName: '',\n        addressDetail: '',\n        zipCode: '',\n        city: '',\n        zip: '',\n        province: '',\n        district: '',\n        address: '',\n        contact: '',\n        expirationTime: null,\n        creditAddressInputType: CreditAddressInputTypeEnum.Input\n      }\n    }));\n  },\n  changeSelectId: function changeSelectId(value, option) {\n    return option.setData(fpMergePre({\n      selectId: \"\".concat(value.id),\n      form: {\n        zip: value.zip,\n        province: value.province,\n        city: value.city,\n        district: value.district,\n        address: value.address\n      }\n    }));\n  },\n  submit: function submit(value, option) {\n    var form = option.data.form;\n    return option.mutate(doc.saveUserPayCard, {\n      data: _objectSpread({}, form)\n    });\n  },\n  getOne: function () {\n    var _getOne = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(value, option) {\n      var _res$userPayCard;\n\n      var res;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return option.query(doc.userPayCard, {\n                data: _objectSpread({}, value)\n              });\n\n            case 2:\n              res = _context.sent;\n              option.setData(fpMergePre({\n                isEditNumber: false,\n                form: _objectSpread({}, (_res$userPayCard = res === null || res === void 0 ? void 0 : res.userPayCard) !== null && _res$userPayCard !== void 0 ? _res$userPayCard : {})\n              }));\n\n            case 4:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    function getOne(_x, _x2) {\n      return _getOne.apply(this, arguments);\n    }\n\n    return getOne;\n  }(),\n  numberFocus: function numberFocus(value, option) {\n    if (!option.data.isEditNumber) {\n      option.setData(fpMergePre({\n        isEditNumber: true,\n        form: {\n          number: ''\n        }\n      }));\n    }\n  }\n});\nvar RadioGroupBox = styled(RadioGroup).withConfig({\n  displayName: \"id__RadioGroupBox\",\n  componentId: \"uddvah-0\"\n})([\"&&&{display:flex;flex-direction:row;}\"]);\nexport var MyCreditCardEdit = function MyCreditCardEdit() {\n  var _ref, _router$query;\n\n  var router = useRouter();\n  var id = (_ref = (_router$query = router.query) === null || _router$query === void 0 ? void 0 : _router$query.id) !== null && _ref !== void 0 ? _ref : '';\n\n  var _useStoreModel = useStoreModel(myAddressModel),\n      actionsMyAddressModel = _useStoreModel.actions,\n      stateMyAddressModel = _useStoreModel.state;\n\n  var _useStoreModel2 = useStoreModel(myCreditCardEditModel),\n      stateMCCE = _useStoreModel2.state,\n      actionsMCCE = _useStoreModel2.actions;\n\n  useEffect(function () {\n    if (id && id !== '0') {\n      actionsMCCE.getOne({\n        id: id\n      });\n    }\n  }, [id]);\n  useEffect(function () {\n    actionsMyAddressModel.getList();\n  }, []);\n  return __jsx(\"div\", null, __jsx(HeaderTitle, {\n    title: \"\".concat(id === '0' ? '新增' : '编辑', \"\\u4FE1\\u7528\\u5361\"),\n    backCall: actionsMCCE.clearForm\n  }), __jsx(FieldContain, null, [['信用卡号', 'number', function () {\n    var _dealLastNumber;\n\n    return __jsx(SigninInput, {\n      key: \"numberKey\",\n      label: ls('信用卡号'),\n      value: stateMCCE.isEditNumber ? stateMCCE.form['number'] : (_dealLastNumber = dealLastNumber(stateMCCE.form['number'])) !== null && _dealLastNumber !== void 0 ? _dealLastNumber : '',\n      onChange: function onChange(event) {\n        return actionsMCCE.setForm(['number', event.target.value]);\n      },\n      onFocus: function onFocus() {\n        return actionsMCCE.numberFocus();\n      }\n    });\n  }], ['过期日', 'expirationTime', function () {\n    return __jsx(FormControl, {\n      key: \"expirationTime\",\n      fullWidth: true,\n      size: 'small'\n    }, __jsx(Space, {\n      h: 4\n    }), __jsx(FormLabel, {\n      style: {\n        fontSize: '0.75rem'\n      }\n    }, ls('过期日')), __jsx(DatePicker, {\n      format: 'MM/yy',\n      value: stateMCCE.form.expirationTime || null,\n      onChange: function onChange(date) {\n        actionsMCCE.setForm(['expirationTime', date]);\n      }\n    }));\n  }], ['验证码', 'code', function () {\n    var _stateMCCE$form$code;\n\n    return __jsx(SigninInput, {\n      key: \"codeKey\",\n      type: \"password\",\n      label: ls('验证码'),\n      value: (_stateMCCE$form$code = stateMCCE.form['code']) !== null && _stateMCCE$form$code !== void 0 ? _stateMCCE$form$code : '',\n      onChange: function onChange(event) {\n        return actionsMCCE.setForm(['code', event.target.value]);\n      }\n    });\n  }], ['持卡人姓名', 'userName'], ['详细地址', 'addressDetail', function () {\n    var _stateMCCE$form$provi;\n\n    return __jsx(React.Fragment, {\n      key: \"addressDetail__box\"\n    }, __jsx(FormControl, {\n      key: \"addressDetail\",\n      fullWidth: true,\n      size: 'small'\n    }, __jsx(Space, {\n      h: 10\n    }), __jsx(FormLabel, {\n      style: {\n        fontSize: 'small'\n      }\n    }, ls('账单地址')), __jsx(RadioGroupBox, {\n      value: stateMCCE.form.creditAddressInputType,\n      onChange: function onChange(event, value) {\n        return actionsMCCE.setForm(['creditAddressInputType', value]);\n      }\n    }, __jsx(FormControlLabel, {\n      label: ls('收货地址中选择'),\n      value: CreditAddressInputTypeEnum.Select,\n      control: __jsx(Radio, null)\n    }), __jsx(FormControlLabel, {\n      value: CreditAddressInputTypeEnum.Input,\n      label: ls('新地址手动输入'),\n      control: __jsx(Radio, null)\n    }))), stateMCCE.form.creditAddressInputType === CreditAddressInputTypeEnum.Select && __jsx(TextField, {\n      key: 'creditAddressInputType_select',\n      style: {\n        marginTop: '10px'\n      },\n      select: true,\n      fullWidth: true,\n      value: '##',\n      onChange: function onChange(e) {\n        return actionsMCCE.changeSelectId(stateMyAddressModel.list.find(function (v) {\n          return v.id === e.target.value;\n        }));\n      }\n    }, __jsx(MenuItem, {\n      value: '##',\n      disabled: true\n    }, ls('选择地址')), stateMyAddressModel.list.map(function (item) {\n      return __jsx(MenuItem, {\n        key: \"addressSelect_\".concat(item.id),\n        value: \"\".concat(item.id)\n      }, item.name, \", \", item.address);\n    })), [['详细地址', 'address'], ['地区', 'district'], ['城市', 'city'], ['州', 'province', __jsx(TextField, {\n      key: 'myAddressEdit_province',\n      style: {\n        marginTop: '10px'\n      },\n      select: true,\n      fullWidth: true,\n      label: '州',\n      value: (_stateMCCE$form$provi = stateMCCE.form.province) !== null && _stateMCCE$form$provi !== void 0 ? _stateMCCE$form$provi : '',\n      onChange: function onChange(e) {\n        return actionsMCCE.setForm(['province', e.target.value]);\n      },\n      disabled: stateMCCE.form.creditAddressInputType === CreditAddressInputTypeEnum.Select\n    }, ProvinceData.map(function (item) {\n      return __jsx(MenuItem, {\n        key: \"provinceData_\".concat(item[0]),\n        value: item[1]\n      }, item[1]);\n    }))], ['邮政编码', 'zip']].map(function (v) {\n      var _stateMCCE$form;\n\n      return v[2] && v[2] || __jsx(SigninInput, {\n        key: \"myAddressEdit_\".concat(v[1]),\n        label: ls(v[0]),\n        value: (_stateMCCE$form = stateMCCE.form[v[1]]) !== null && _stateMCCE$form !== void 0 ? _stateMCCE$form : '',\n        onChange: function onChange(event) {\n          return actionsMCCE.setForm([v[1], event.target.value]);\n        },\n        disabled: stateMCCE.form.creditAddressInputType === CreditAddressInputTypeEnum.Select\n      });\n    }));\n  }], // ['邮政编码', 'zipCode'],\n  // ['城市', 'city'],\n  ['联系方式', 'contact']].map(function (v) {\n    var _stateMCCE$form2;\n\n    return v[2] && v[2]() || __jsx(SigninInput, {\n      key: \"MyCreditCardEdit_\".concat(v[1]),\n      label: ls(v[0]),\n      value: (_stateMCCE$form2 = stateMCCE.form[v[1]]) !== null && _stateMCCE$form2 !== void 0 ? _stateMCCE$form2 : '',\n      onChange: function onChange(event) {\n        return actionsMCCE.setForm([v[1], event.target.value]);\n      }\n    });\n  }), __jsx(\"section\", {\n    style: {\n      width: '100%',\n      height: '20px'\n    }\n  }), __jsx(ButtonLoad, {\n    fullWidth: true,\n    variant: 'contained',\n    color: 'secondary',\n    onClick: /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2() {\n      var _yield$actionsMCCE$su, _yield$actionsMCCE$su2;\n\n      return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              _context2.next = 2;\n              return actionsMCCE.submit();\n\n            case 2:\n              _context2.t1 = _yield$actionsMCCE$su = _context2.sent;\n              _context2.t0 = _context2.t1 === null;\n\n              if (_context2.t0) {\n                _context2.next = 6;\n                break;\n              }\n\n              _context2.t0 = _yield$actionsMCCE$su === void 0;\n\n            case 6:\n              if (!_context2.t0) {\n                _context2.next = 10;\n                break;\n              }\n\n              _context2.t2 = void 0;\n              _context2.next = 11;\n              break;\n\n            case 10:\n              _context2.t2 = (_yield$actionsMCCE$su2 = _yield$actionsMCCE$su.saveUserPayCard) === null || _yield$actionsMCCE$su2 === void 0 ? void 0 : _yield$actionsMCCE$su2.id;\n\n            case 11:\n              if (!_context2.t2) {\n                _context2.next = 15;\n                break;\n              }\n\n              showMessage('操作成功');\n              actionsMCCE.clearForm();\n              router.back();\n\n            case 15:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2);\n    }))\n  }, \"\\u4FDD\\u5B58\")));\n};","map":null,"metadata":{},"sourceType":"module"}