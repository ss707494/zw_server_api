{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\n\nvar _this = this,\n    _jsxFileName = \"D:\\\\code\\\\zw\\\\zw_client_web\\\\utils\\\\view\\\\me\\\\category\\\\[id].tsx\",\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\nimport React from 'react';\nimport { useRouter } from 'next/router';\nimport { HeaderTitle } from '../../../components/HeaderTitle/HeaderTitle';\nimport { modelFactory } from '../../../ModelAction/modelUtil';\nimport { doc } from '../../../graphqlTypes/doc';\nimport { fpMergePre } from '../../../tools/utils';\nexport var CategoryPageModel = modelFactory('CategoryPage', {\n  productList: []\n}, {\n  getProductList: function () {\n    var _getProductList = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(value, option) {\n      var res;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return option.query(doc.productsInCategory, value);\n\n            case 2:\n              res = _context.sent;\n              option.setData(fpMergePre({\n                productList: res === null || res === void 0 ? void 0 : res.productsInCategory\n              }));\n              console.log(res);\n\n            case 5:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    function getProductList(_x, _x2) {\n      return _getProductList.apply(this, arguments);\n    }\n\n    return getProductList;\n  }()\n});\nexport var CategoryPage = function CategoryPage() {\n  _s();\n\n  var _ref, _router$query;\n\n  var router = useRouter();\n  var id = (_ref = (_router$query = router.query) === null || _router$query === void 0 ? void 0 : _router$query.id) !== null && _ref !== void 0 ? _ref : '';\n  return __jsx(\"div\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 10\n    }\n  }, __jsx(HeaderTitle, {\n    title: '',\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 5\n    }\n  }), id, \"Category\");\n};\n\n_s(CategoryPage, \"fN7XvhJ+p5oE6+Xlo0NJmXpxjC8=\", false, function () {\n  return [useRouter];\n});\n\n_c = CategoryPage;\n\nvar _c;\n\n$RefreshReg$(_c, \"CategoryPage\");","map":{"version":3,"sources":["D:/code/zw/zw_client_web/utils/view/me/category/[id].tsx"],"names":["React","useRouter","HeaderTitle","modelFactory","doc","fpMergePre","CategoryPageModel","productList","getProductList","value","option","query","productsInCategory","res","setData","console","log","CategoryPage","router","id"],"mappings":";;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,SAAR,QAAwB,aAAxB;AACA,SAAQC,WAAR,QAA0B,6CAA1B;AACA,SAAQC,YAAR,QAA2B,gCAA3B;AAEA,SAAQC,GAAR,QAAkB,2BAAlB;AACA,SAAQC,UAAR,QAAyB,sBAAzB;AAEA,OAAO,IAAMC,iBAAiB,GAAGH,YAAY,CAAC,cAAD,EAAiB;AAC5DI,EAAAA,WAAW,EAAE;AAD+C,CAAjB,EAE1C;AACDC,EAAAA,cAAc;AAAA,mFAAE,iBAAOC,KAAP,EAAiCC,MAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBACIA,MAAM,CAACC,KAAP,CAAaP,GAAG,CAACQ,kBAAjB,EAAqCH,KAArC,CADJ;;AAAA;AACRI,cAAAA,GADQ;AAEdH,cAAAA,MAAM,CAACI,OAAP,CAAeT,UAAU,CAAC;AACxBE,gBAAAA,WAAW,EAAEM,GAAF,aAAEA,GAAF,uBAAEA,GAAG,CAAED;AADM,eAAD,CAAzB;AAGAG,cAAAA,OAAO,CAACC,GAAR,CAAYH,GAAZ;;AALc;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAF;;AAAA;AAAA;AAAA;;AAAA;AAAA;AADb,CAF0C,CAAtC;AAaP,OAAO,IAAMI,YAAY,GAAG,SAAfA,YAAe,GAAM;AAAA;;AAAA;;AAChC,MAAMC,MAAM,GAAGjB,SAAS,EAAxB;AACA,MAAMkB,EAAE,4BAAID,MAAM,CAACP,KAAX,kDAAI,cAAcQ,EAAlB,uCAAmC,EAA3C;AAGA,SAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACL,MAAC,WAAD;AACI,IAAA,KAAK,EAAE,EADX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADK,EAIJA,EAJI,aAAP;AAOD,CAZM;;GAAMF,Y;UACIhB,S;;;KADJgB,Y","sourcesContent":["import React from 'react'\r\nimport {useRouter} from 'next/router'\r\nimport {HeaderTitle} from '../../../components/HeaderTitle/HeaderTitle'\r\nimport {modelFactory} from '../../../ModelAction/modelUtil'\r\nimport {CategoryItemInput, Product} from '../../../graphqlTypes/types'\r\nimport {doc} from '../../../graphqlTypes/doc'\r\nimport {fpMergePre} from '../../../tools/utils'\r\n\r\nexport const CategoryPageModel = modelFactory('CategoryPage', {\r\n  productList: [] as Product[],\r\n}, {\r\n  getProductList: async (value: CategoryItemInput, option) => {\r\n    const res = await option.query(doc.productsInCategory, value)\r\n    option.setData(fpMergePre({\r\n      productList: res?.productsInCategory,\r\n    }))\r\n    console.log(res)\r\n  },\r\n\r\n})\r\n\r\nexport const CategoryPage = () => {\r\n  const router = useRouter()\r\n  const id = (router.query?.id as string) ?? ''\r\n\r\n\r\n  return <div>\r\n    <HeaderTitle\r\n        title={''}\r\n    />\r\n    {id}\r\n    Category\r\n  </div>\r\n}\r\n"]},"metadata":{},"sourceType":"module"}