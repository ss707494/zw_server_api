{"ast":null,"code":"var __jsx = React.createElement;\nimport React, { useEffect } from 'react';\nimport { useRouter } from 'next/router';\nimport { HeaderTitle } from '../../../components/HeaderTitle/HeaderTitle';\nimport { ls } from '../../../tools/dealKey';\nimport { FootBar } from '../../../components/FootBar/FootBar';\nimport { Button, Card, Tab, Tabs } from '@material-ui/core';\nimport { modelFactory } from '../../../ModelAction/modelUtil';\nimport { PromoCodeTypeEnum } from '../../../ss_common/enum';\nimport { doc } from '../../../graphqlTypes/doc';\nimport { useStoreModel } from '../../../ModelAction/useStore';\nimport { formatDate, fpMergePre } from '../../../tools/utils';\nimport styled from 'styled-components';\nimport { dealImgUrl } from '../../../tools/img';\nimport { grey } from '@material-ui/core/colors';\nimport { BScroller } from '../../../components/BScroll/BScroller';\nimport { Space } from '../../../components/Box/Box';\nimport { showMessage } from '../../../components/Message/Message';\nexport const cardModel = modelFactory('cardModel', {\n  promoCodeList: [],\n  user: {}\n}, {\n  getList: async (value, option) => {\n    var _res$promoCodeList, _user$oneUser;\n\n    const res = await option.query(doc.promoCodeList, {});\n    const user = await option.query(doc.oneUser);\n    option.setData(fpMergePre({\n      promoCodeList: (_res$promoCodeList = res === null || res === void 0 ? void 0 : res.promoCodeList) !== null && _res$promoCodeList !== void 0 ? _res$promoCodeList : [],\n      user: (_user$oneUser = user.oneUser) !== null && _user$oneUser !== void 0 ? _user$oneUser : {}\n    }));\n  }\n});\nconst MainBox = styled.div.withConfig({\n  displayName: \"type__MainBox\",\n  componentId: \"hycsb4-0\"\n})([\"padding:24px 24px 80px;\"]);\nconst CardBox = styled(Card).withConfig({\n  displayName: \"type__CardBox\",\n  componentId: \"hycsb4-1\"\n})([\"&&&{margin-bottom:16px;display:grid;padding:16px;grid-template-rows:24px 40px 20px max-content 1fr;grid-column-gap:8px;grid-template-columns:120px 1fr;align-items:center;> aside{grid-area:1/1/6/2;> img{width:120px;height:120px;}}}\"]);\nconst Title = styled.div.withConfig({\n  displayName: \"type__Title\",\n  componentId: \"hycsb4-2\"\n})([\"font-weight:bold;\"]);\nconst Remark = styled.div.withConfig({\n  displayName: \"type__Remark\",\n  componentId: \"hycsb4-3\"\n})([\"\"]);\nconst Number = styled.div.withConfig({\n  displayName: \"type__Number\",\n  componentId: \"hycsb4-4\"\n})([\"font-size:14px;color:\", \";\"], grey[500]);\nconst Time = styled.div.withConfig({\n  displayName: \"type__Time\",\n  componentId: \"hycsb4-5\"\n})([\"font-size:14px;color:\", \";\"], grey[500]);\nconst Action = styled.div.withConfig({\n  displayName: \"type__Action\",\n  componentId: \"hycsb4-6\"\n})([\"padding-top:8px;\"]);\nconst CardBoxPromoCode = styled(Card).withConfig({\n  displayName: \"type__CardBoxPromoCode\",\n  componentId: \"hycsb4-7\"\n})([\"&&&{padding:24px;margin-bottom:24px;background-image:url(\\\"\", \"\\\");background-color:\", \";box-shadow:inset 0 0 0 1000px rgba(0,0,0,.3);background-size:100% 100%;background-position:0 0;color:white;}\", \"{color:white;}\", \"{color:white;}\"], p => p.background, grey[200], Number, Time);\nconst CodeBox = styled.div.withConfig({\n  displayName: \"type__CodeBox\",\n  componentId: \"hycsb4-8\"\n})([\"\"]);\nexport const getPromoCodeItem = (item, user) => {\n  return item.promoCodeType === PromoCodeTypeEnum.DarenCard ? __jsx(CardBox, {\n    key: `CardBox_${item.id}`\n  }, __jsx(\"aside\", null, __jsx(\"img\", {\n    src: dealImgUrl(item.imgUrl),\n    alt: \"\"\n  })), __jsx(Title, null, item.title), __jsx(Remark, null, item.remark), __jsx(CodeBox, null, ls('优惠码'), \":\", item.code), __jsx(Time, null, ls('使用时间'), \":\", formatDate(item.effectiveDateStart, 'YYYY/MM/dd'), \" - \", formatDate(item.effectiveDateEnd, 'YYYY/MM/dd')), __jsx(Action, null, __jsx(Button, {\n    color: 'secondary',\n    variant: 'contained',\n    fullWidth: true,\n    onClick: () => {\n      if (item === null || item === void 0 ? void 0 : item.code) {\n        var _item$code;\n\n        localStorage.setItem(`promoCode_${user.id}`, `${(_item$code = item === null || item === void 0 ? void 0 : item.code) !== null && _item$code !== void 0 ? _item$code : ''}`);\n        showMessage('操作成功');\n      }\n    }\n  }, ls('应用到购物车')))) : __jsx(CardBoxPromoCode, {\n    key: `CardBoxPromoCode_${item.id}`,\n    background: dealImgUrl(item === null || item === void 0 ? void 0 : item.imgUrl)\n  }, __jsx(Title, null, item.title), __jsx(Space, {\n    h: 8\n  }), __jsx(Remark, null, item.remark), __jsx(Space, {\n    h: 8\n  }), __jsx(Time, null, ls('使用时间'), \": \", formatDate(item.effectiveDateStart, 'YYYY/MM/dd'), \" - \", formatDate(item.effectiveDateEnd, 'YYYY/MM/dd')), __jsx(Space, {\n    h: 8\n  }), __jsx(CodeBox, null, ls('优惠码'), \": \", item.code), __jsx(Space, {\n    h: 8\n  }), __jsx(Action, null, __jsx(Button, {\n    color: 'secondary',\n    variant: 'contained',\n    fullWidth: true,\n    onClick: () => {\n      if (item === null || item === void 0 ? void 0 : item.code) {\n        var _item$code2;\n\n        localStorage.setItem(`promoCode_${user.id}`, `${(_item$code2 = item === null || item === void 0 ? void 0 : item.code) !== null && _item$code2 !== void 0 ? _item$code2 : ''}`);\n        showMessage('操作成功');\n      }\n    }\n  }, ls('应用到购物车'))));\n};\nexport const CardType = () => {\n  const router = useRouter();\n  const promoCodeType = router.query.type;\n  const {\n    state: stateCardModel,\n    actions: actionsCardModel\n  } = useStoreModel(cardModel);\n  useEffect(() => {\n    actionsCardModel.getList(`${promoCodeType !== null && promoCodeType !== void 0 ? promoCodeType : ''}`);\n  }, [promoCodeType]);\n  return __jsx(\"div\", null, __jsx(HeaderTitle, {\n    title: ls('达人专区'),\n    showCart: true,\n    hideLeft: true,\n    showSearch: true\n  }), __jsx(Tabs, {\n    variant: 'fullWidth',\n    value: promoCodeType !== null && promoCodeType !== void 0 ? promoCodeType : PromoCodeTypeEnum.DarenCard,\n    onChange: (event, value) => router.push('/m/card/[type]', `/m/card/${value}`)\n  }, __jsx(Tab, {\n    value: PromoCodeTypeEnum.DarenCard,\n    label: ls('我的达人卡')\n  }), __jsx(Tab, {\n    value: PromoCodeTypeEnum.PromoCode,\n    label: ls('当前优惠促销')\n  })), __jsx(BScroller, {\n    boxHeight: 'calc(100vh - 188px)'\n  }, __jsx(MainBox, null, stateCardModel.promoCodeList.filter(v => v.promoCodeType === promoCodeType).map(v => getPromoCodeItem(v, stateCardModel.user)))), __jsx(FootBar, null));\n};","map":null,"metadata":{},"sourceType":"module"}