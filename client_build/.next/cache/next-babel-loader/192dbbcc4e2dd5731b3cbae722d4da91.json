{"ast":null,"code":"var _this = this,\n    _jsxFileName = \"D:\\\\code\\\\zw\\\\zw_client_web\\\\utils\\\\view\\\\me\\\\myCreditCard\\\\edit\\\\[id].tsx\";\n\nvar __jsx = React.createElement;\nimport React from 'react';\nimport { modelFactory } from '../../../../ModelAction/modelUtil';\nimport { useStoreModel } from '../../../../ModelAction/useStore';\nimport { fpMergePre } from '../../../../tools/utils';\nimport { SigninInput } from '../../../register';\nimport { FieldContain } from '../../myInfo/updatePassword';\nimport { HeaderTitle } from '../../../../components/HeaderTitle/HeaderTitle';\nimport { setForm } from '../../../../tools/commonAction';\nimport { ls } from '../../../../tools/dealKey';\nexport var myCreditCardEditModel = modelFactory('myCreditCardEditModel', {\n  form: {\n    number: '',\n    code: '',\n    name: '',\n    userName: '',\n    addressDetail: '',\n    zipCode: '',\n    city: '',\n    contact: ''\n  }\n}, {\n  setForm: setForm,\n  clearForm: function clearForm(value, option) {\n    return option.setData(fpMergePre({\n      form: {\n        number: '',\n        code: '',\n        name: '',\n        userName: '',\n        addressDetail: '',\n        zipCode: '',\n        city: '',\n        contact: ''\n      }\n    }));\n  }\n});\nexport var MyCreditCardEdit = function MyCreditCardEdit() {\n  var _useStoreModel = useStoreModel(myCreditCardEditModel),\n      stateMCCE = _useStoreModel.state,\n      actionsMCCE = _useStoreModel.actions;\n\n  return __jsx(\"div\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 10\n    }\n  }, __jsx(HeaderTitle, {\n    title: '编辑信用卡',\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 5\n    }\n  }), __jsx(FieldContain, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 5\n    }\n  }, __jsx(SigninInput, {\n    label: ls('信用卡号'),\n    type: 'password',\n    value: stateMCCE.form.number,\n    onChange: function onChange(event) {\n      return actionsMCCE.setForm(['number', event.target.value]);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }\n  })));\n};","map":{"version":3,"sources":["D:/code/zw/zw_client_web/utils/view/me/myCreditCard/edit/[id].tsx"],"names":["React","modelFactory","useStoreModel","fpMergePre","SigninInput","FieldContain","HeaderTitle","setForm","ls","myCreditCardEditModel","form","number","code","name","userName","addressDetail","zipCode","city","contact","clearForm","value","option","setData","MyCreditCardEdit","stateMCCE","state","actionsMCCE","actions","event","target"],"mappings":";;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,YAAR,QAA2B,mCAA3B;AACA,SAAQC,aAAR,QAA4B,kCAA5B;AACA,SAAQC,UAAR,QAAyB,yBAAzB;AACA,SAAQC,WAAR,QAA0B,mBAA1B;AACA,SAAQC,YAAR,QAA2B,6BAA3B;AACA,SAAQC,WAAR,QAA0B,gDAA1B;AAEA,SAAQC,OAAR,QAAsB,gCAAtB;AACA,SAASC,EAAT,QAAmB,2BAAnB;AAEA,OAAO,IAAMC,qBAAqB,GAAGR,YAAY,CAAC,uBAAD,EAA0B;AACzES,EAAAA,IAAI,EAAE;AACJC,IAAAA,MAAM,EAAE,EADJ;AAEJC,IAAAA,IAAI,EAAE,EAFF;AAGJC,IAAAA,IAAI,EAAE,EAHF;AAIJC,IAAAA,QAAQ,EAAE,EAJN;AAKJC,IAAAA,aAAa,EAAE,EALX;AAMJC,IAAAA,OAAO,EAAE,EANL;AAOJC,IAAAA,IAAI,EAAE,EAPF;AAQJC,IAAAA,OAAO,EAAE;AARL;AADmE,CAA1B,EAW9C;AACDX,EAAAA,OAAO,EAAEA,OADR;AAEDY,EAAAA,SAAS,EAAE,mBAACC,KAAD,EAAQC,MAAR;AAAA,WAAmBA,MAAM,CAACC,OAAP,CAAenB,UAAU,CAAC;AACtDO,MAAAA,IAAI,EAAE;AACJC,QAAAA,MAAM,EAAE,EADJ;AAEJC,QAAAA,IAAI,EAAE,EAFF;AAGJC,QAAAA,IAAI,EAAE,EAHF;AAIJC,QAAAA,QAAQ,EAAE,EAJN;AAKJC,QAAAA,aAAa,EAAE,EALX;AAMJC,QAAAA,OAAO,EAAE,EANL;AAOJC,QAAAA,IAAI,EAAE,EAPF;AAQJC,QAAAA,OAAO,EAAE;AARL;AADgD,KAAD,CAAzB,CAAnB;AAAA;AAFV,CAX8C,CAA1C;AA2BP,OAAO,IAAMK,gBAAgB,GAAG,SAAnBA,gBAAmB,GAAM;AAAA,uBACarB,aAAa,CAACO,qBAAD,CAD1B;AAAA,MACtBe,SADsB,kBAC7BC,KAD6B;AAAA,MACFC,WADE,kBACXC,OADW;;AAGpC,SAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACL,MAAC,WAAD;AACI,IAAA,KAAK,EAAE,OADX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADK,EAIL,MAAC,YAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,WAAD;AACI,IAAA,KAAK,EAAEnB,EAAE,CAAC,MAAD,CADb;AAEI,IAAA,IAAI,EAAE,UAFV;AAGI,IAAA,KAAK,EAAEgB,SAAS,CAACd,IAAV,CAAeC,MAH1B;AAII,IAAA,QAAQ,EAAE,kBAAAiB,KAAK;AAAA,aAAIF,WAAW,CAACnB,OAAZ,CAAoB,CAAC,QAAD,EAAWqB,KAAK,CAACC,MAAN,CAAaT,KAAxB,CAApB,CAAJ;AAAA,KAJnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CAJK,CAAP;AAaD,CAhBM","sourcesContent":["import React from 'react'\r\nimport {modelFactory} from '../../../../ModelAction/modelUtil'\r\nimport {useStoreModel} from '../../../../ModelAction/useStore'\r\nimport {fpMergePre} from '../../../../tools/utils'\r\nimport {SigninInput} from '../../../register'\r\nimport {FieldContain} from '../../myInfo/updatePassword'\r\nimport {HeaderTitle} from '../../../../components/HeaderTitle/HeaderTitle'\r\nimport {UserPayCard} from '../../../../graphqlTypes/types'\r\nimport {setForm} from '../../../../tools/commonAction'\r\nimport { ls } from '../../../../tools/dealKey'\r\n\r\nexport const myCreditCardEditModel = modelFactory('myCreditCardEditModel', {\r\n  form: {\r\n    number: '',\r\n    code: '',\r\n    name: '',\r\n    userName: '',\r\n    addressDetail: '',\r\n    zipCode: '',\r\n    city: '',\r\n    contact: '',\r\n  } as UserPayCard,\r\n}, {\r\n  setForm: setForm,\r\n  clearForm: (value, option) => option.setData(fpMergePre({\r\n    form: {\r\n      number: '',\r\n      code: '',\r\n      name: '',\r\n      userName: '',\r\n      addressDetail: '',\r\n      zipCode: '',\r\n      city: '',\r\n      contact: '',\r\n    },\r\n  }))\r\n})\r\n\r\nexport const MyCreditCardEdit = () => {\r\n  const {state: stateMCCE, actions: actionsMCCE} = useStoreModel(myCreditCardEditModel)\r\n\r\n  return <div>\r\n    <HeaderTitle\r\n        title={'编辑信用卡'}\r\n    />\r\n    <FieldContain>\r\n      <SigninInput\r\n          label={ls('信用卡号')}\r\n          type={'password'}\r\n          value={stateMCCE.form.number}\r\n          onChange={event => actionsMCCE.setForm(['number', event.target.value])}\r\n      />\r\n    </FieldContain>\r\n  </div>\r\n}\r\n"]},"metadata":{},"sourceType":"module"}