{"ast":null,"code":"var __jsx = React.createElement;\nimport { SigninInput } from '../../../register';\nimport { ll } from '../../../../../tools/dealKey';\nimport { dealLastNumber } from '../../../../../tools/utils';\nimport { FormControl, FormControlLabel, FormLabel, MenuItem, Radio, RadioGroup, TextField } from '@material-ui/core';\nimport { Space } from '../../../../../components/Box/Box';\nimport { DatePicker } from '@material-ui/pickers';\nimport React from 'react';\nimport { CreditAddressInputTypeEnum, ProvinceData } from '../../../../../ss_common/enum';\nimport { ButtonLoad } from '../../../../../components/ButtonLoad/ButtonLoad';\nimport { showMessage } from '../../../../../components/Message/Message';\nimport { FieldContain } from '../../myInfo/updatePassword';\nimport { useStoreModel } from '../../../../../ModelAction/useStore';\nimport { MyCreditCardEditModel } from './[id]';\nimport { styled } from '@material-ui/styles';\nimport { myAddressModel } from '../../myAddress/list';\nconst RadioGroupBox = styled(RadioGroup)({\n  display: 'flex',\n  flexDirection: 'row'\n});\nexport const CardFieldContain = ({\n  footerBox,\n  finallyAction = () => {},\n  variant = 'standard'\n}) => {\n  const {\n    state: stateMyCreditCardEditModel,\n    actions: actionsMyCreditCardEditModel\n  } = useStoreModel(MyCreditCardEditModel);\n  const {\n    state: stateMyAddressModel\n  } = useStoreModel(myAddressModel);\n  return __jsx(FieldContain, null, [['信用卡号', 'number', () => {\n    var _dealLastNumber;\n\n    return __jsx(SigninInput, {\n      key: `numberKey`,\n      variant: variant,\n      label: ll('信用卡号'),\n      value: stateMyCreditCardEditModel.isEditNumber ? stateMyCreditCardEditModel.form['number'] : (_dealLastNumber = dealLastNumber(stateMyCreditCardEditModel.form['number'])) !== null && _dealLastNumber !== void 0 ? _dealLastNumber : '',\n      onChange: event => actionsMyCreditCardEditModel.setForm(['number', event.target.value]),\n      onFocus: () => actionsMyCreditCardEditModel.numberFocus()\n    });\n  }], ['过期日', 'expirationTime', () => __jsx(DatePicker, {\n    key: `expirationTime`,\n    fullWidth: true,\n    label: ll('过期日'),\n    inputVariant: variant,\n    format: 'MM/yy',\n    value: stateMyCreditCardEditModel.form.expirationTime || null,\n    onChange: date => {\n      actionsMyCreditCardEditModel.setForm(['expirationTime', date]);\n    }\n  })], ['验证码', 'code', () => {\n    var _stateMyCreditCardEdi;\n\n    return __jsx(SigninInput, {\n      key: `codeKey`,\n      variant: variant,\n      type: \"password\",\n      label: ll('验证码'),\n      value: (_stateMyCreditCardEdi = stateMyCreditCardEditModel.form['code']) !== null && _stateMyCreditCardEdi !== void 0 ? _stateMyCreditCardEdi : '',\n      onChange: event => actionsMyCreditCardEditModel.setForm(['code', event.target.value])\n    });\n  }], ['持卡人姓名', 'userName'], ['详细地址', 'addressDetail', () => {\n    var _stateMyCreditCardEdi2;\n\n    return __jsx(React.Fragment, {\n      key: `addressDetail__box`\n    }, __jsx(FormControl, {\n      key: `addressDetail`,\n      fullWidth: true,\n      size: 'small',\n      variant: variant\n    }, __jsx(Space, {\n      h: 10\n    }), __jsx(FormLabel, {\n      style: {\n        fontSize: 'small'\n      }\n    }, ll('账单地址')), __jsx(RadioGroupBox, {\n      value: stateMyCreditCardEditModel.form.creditAddressInputType,\n      onChange: (event, value) => actionsMyCreditCardEditModel.setForm(['creditAddressInputType', value])\n    }, __jsx(FormControlLabel, {\n      label: ll('收货地址中选择'),\n      value: CreditAddressInputTypeEnum.Select,\n      control: __jsx(Radio, null)\n    }), __jsx(FormControlLabel, {\n      value: CreditAddressInputTypeEnum.Input,\n      label: ll('新地址手动输入'),\n      control: __jsx(Radio, null)\n    }))), stateMyCreditCardEditModel.form.creditAddressInputType === CreditAddressInputTypeEnum.Select && __jsx(TextField, {\n      key: 'creditAddressInputType_select',\n      variant: variant,\n      style: {\n        marginTop: '10px'\n      },\n      select: true,\n      fullWidth: true,\n      value: '##',\n      onChange: e => actionsMyCreditCardEditModel.changeSelectId(stateMyAddressModel.list.find(v => v.id === e.target.value))\n    }, __jsx(MenuItem, {\n      value: '##',\n      disabled: true\n    }, ll('选择地址')), stateMyAddressModel.list.map(item => __jsx(MenuItem, {\n      key: `addressSelect_${item.id}`,\n      value: `${item.id}`\n    }, item.name, \", \", item.address))), [['详细地址', 'address'], ['地区', 'district'], ['城市', 'city'], ['州', 'province', __jsx(TextField, {\n      key: 'myAddressEdit_province',\n      variant: variant,\n      style: {\n        marginTop: '10px'\n      },\n      select: true,\n      fullWidth: true,\n      label: '州',\n      value: (_stateMyCreditCardEdi2 = stateMyCreditCardEditModel.form.province) !== null && _stateMyCreditCardEdi2 !== void 0 ? _stateMyCreditCardEdi2 : '',\n      onChange: e => actionsMyCreditCardEditModel.setForm(['province', e.target.value]),\n      disabled: stateMyCreditCardEditModel.form.creditAddressInputType === CreditAddressInputTypeEnum.Select\n    }, ProvinceData.map(item => __jsx(MenuItem, {\n      key: `provinceData_${item[0]}`,\n      value: item[1]\n    }, item[1])))], ['邮政编码', 'zip']].map(v => {\n      var _stateMyCreditCardEdi3;\n\n      return v[2] && v[2] || __jsx(SigninInput, {\n        key: `myAddressEdit_${v[1]}`,\n        variant: variant,\n        label: ll(v[0]),\n        value: (_stateMyCreditCardEdi3 = stateMyCreditCardEditModel.form[v[1]]) !== null && _stateMyCreditCardEdi3 !== void 0 ? _stateMyCreditCardEdi3 : '',\n        onChange: event => actionsMyCreditCardEditModel.setForm([v[1], event.target.value]),\n        disabled: stateMyCreditCardEditModel.form.creditAddressInputType === CreditAddressInputTypeEnum.Select\n      });\n    }));\n  }], // ['邮政编码', 'zipCode'],\n  // ['城市', 'city'],\n  ['联系方式', 'contact']].map(v => {\n    var _stateMyCreditCardEdi4;\n\n    return v[2] && v[2]() || __jsx(SigninInput, {\n      key: `MyCreditCardEdit_${v[1]}`,\n      variant: variant,\n      label: ll(v[0]),\n      value: (_stateMyCreditCardEdi4 = stateMyCreditCardEditModel.form[v[1]]) !== null && _stateMyCreditCardEdi4 !== void 0 ? _stateMyCreditCardEdi4 : '',\n      onChange: event => actionsMyCreditCardEditModel.setForm([v[1], event.target.value]),\n      disabled: stateMyCreditCardEditModel.form.creditAddressInputType === CreditAddressInputTypeEnum.Select\n    });\n  }), footerBox && footerBox || __jsx(React.Fragment, null, __jsx(\"section\", {\n    style: {\n      width: '100%',\n      height: '20px'\n    }\n  }), __jsx(ButtonLoad, {\n    fullWidth: true,\n    variant: 'contained',\n    color: 'secondary',\n    onClick: async () => {\n      var _await$actionsMyCredi, _await$actionsMyCredi2;\n\n      if ((_await$actionsMyCredi = await actionsMyCreditCardEditModel.submit()) === null || _await$actionsMyCredi === void 0 ? void 0 : (_await$actionsMyCredi2 = _await$actionsMyCredi.saveUserPayCard) === null || _await$actionsMyCredi2 === void 0 ? void 0 : _await$actionsMyCredi2.id) {\n        showMessage('操作成功');\n        actionsMyCreditCardEditModel.clearForm();\n        finallyAction();\n      }\n    }\n  }, \"\\u4FDD\\u5B58\")));\n};","map":null,"metadata":{},"sourceType":"module"}