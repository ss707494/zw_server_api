{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\n\nvar _this = this,\n    _jsxFileName = \"D:\\\\code\\\\zw\\\\zw_client_web\\\\utils\\\\view\\\\cart\\\\index.tsx\",\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\nimport React, { useEffect } from 'react';\nimport { modelFactory } from '../../ModelAction/modelUtil';\nimport { doc } from '../../graphqlTypes/doc';\nimport { fpMergePre } from '../../tools/utils';\nimport { useStoreModel } from '../../ModelAction/useStore';\nexport var shopCartModel = modelFactory('shopCartModel', {\n  shopCartList: []\n}, {\n  getList: function () {\n    var _getList = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(value, option) {\n      var _res$shopCartList;\n\n      var res;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return option.query(doc.userShopCartList);\n\n            case 2:\n              res = _context.sent;\n              option.setData(fpMergePre({\n                shopCartList: (_res$shopCartList = res === null || res === void 0 ? void 0 : res.shopCartList) !== null && _res$shopCartList !== void 0 ? _res$shopCartList : []\n              }));\n\n            case 4:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    function getList(_x, _x2) {\n      return _getList.apply(this, arguments);\n    }\n\n    return getList;\n  }()\n});\nexport var ShopCartPage = function ShopCartPage() {\n  _s();\n\n  var _useStoreModel = useStoreModel(shopCartModel),\n      stateSCM = _useStoreModel.state,\n      actionsSCM = _useStoreModel.actions;\n\n  useEffect(function () {\n    actionsSCM.getList();\n  }, []);\n  console.log(stateSCM.shopCartList);\n  return __jsx(\"div\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 10\n    }\n  }, \"ShopCart\");\n};\n\n_s(ShopCartPage, \"lWHIWzHXZiOKiDnHY1bD/kI5D40=\", false, function () {\n  return [useStoreModel];\n});\n\n_c = ShopCartPage;\n\nvar _c;\n\n$RefreshReg$(_c, \"ShopCartPage\");","map":{"version":3,"sources":["D:/code/zw/zw_client_web/utils/view/cart/index.tsx"],"names":["React","useEffect","modelFactory","doc","fpMergePre","useStoreModel","shopCartModel","shopCartList","getList","value","option","query","userShopCartList","res","setData","ShopCartPage","stateSCM","state","actionsSCM","actions","console","log"],"mappings":";;;;;;;;AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,SAAQC,YAAR,QAA2B,6BAA3B;AAEA,SAAQC,GAAR,QAAkB,wBAAlB;AACA,SAAQC,UAAR,QAAyB,mBAAzB;AACA,SAAQC,aAAR,QAA4B,4BAA5B;AAEA,OAAO,IAAMC,aAAa,GAAGJ,YAAY,CAAC,eAAD,EAAkB;AACzDK,EAAAA,YAAY,EAAE;AAD2C,CAAlB,EAEtC;AACDC,EAAAA,OAAO;AAAA,4EAAE,iBAAOC,KAAP,EAAcC,MAAd;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBACWA,MAAM,CAACC,KAAP,CAAaR,GAAG,CAACS,gBAAjB,CADX;;AAAA;AACDC,cAAAA,GADC;AAEPH,cAAAA,MAAM,CAACI,OAAP,CAAeV,UAAU,CAAC;AACxBG,gBAAAA,YAAY,uBAAEM,GAAF,aAAEA,GAAF,uBAAEA,GAAG,CAAEN,YAAP,iEAAuB;AADX,eAAD,CAAzB;;AAFO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAF;;AAAA;AAAA;AAAA;;AAAA;AAAA;AADN,CAFsC,CAAlC;AAYP,OAAO,IAAMQ,YAAY,GAAG,SAAfA,YAAe,GAAM;AAAA;;AAAA,uBACeV,aAAa,CAACC,aAAD,CAD5B;AAAA,MAClBU,QADkB,kBACzBC,KADyB;AAAA,MACCC,UADD,kBACRC,OADQ;;AAEhClB,EAAAA,SAAS,CAAC,YAAM;AACdiB,IAAAA,UAAU,CAACV,OAAX;AACD,GAFQ,EAEN,EAFM,CAAT;AAGAY,EAAAA,OAAO,CAACC,GAAR,CAAYL,QAAQ,CAACT,YAArB;AAEA,SAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAAP;AAGD,CAVM;;GAAMQ,Y;UACoCV,a;;;KADpCU,Y","sourcesContent":["import React, {useEffect} from 'react'\r\nimport {modelFactory} from '../../ModelAction/modelUtil'\r\nimport {ShopCart} from '../../graphqlTypes/types'\r\nimport {doc} from '../../graphqlTypes/doc'\r\nimport {fpMergePre} from '../../tools/utils'\r\nimport {useStoreModel} from '../../ModelAction/useStore'\r\n\r\nexport const shopCartModel = modelFactory('shopCartModel', {\r\n  shopCartList: [] as ShopCart[],\r\n}, {\r\n  getList: async (value, option) => {\r\n    const res = await option.query(doc.userShopCartList)\r\n    option.setData(fpMergePre({\r\n      shopCartList: res?.shopCartList ?? [],\r\n    }))\r\n  },\r\n\r\n})\r\n\r\nexport const ShopCartPage = () => {\r\n  const {state: stateSCM, actions: actionsSCM} = useStoreModel(shopCartModel)\r\n  useEffect(() => {\r\n    actionsSCM.getList()\r\n  }, [])\r\n  console.log(stateSCM.shopCartList)\r\n\r\n  return <div>\r\n    ShopCart\r\n  </div>\r\n}\r\n"]},"metadata":{},"sourceType":"module"}