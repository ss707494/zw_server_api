{"ast":null,"code":"var _jsxFileName = \"D:\\\\code\\\\zw\\\\zw_client_web\\\\utils\\\\view\\\\cart\\\\index.tsx\";\nvar __jsx = React.createElement;\nimport React, { useEffect } from 'react';\nimport { modelFactory } from '../../ModelAction/modelUtil';\nimport { doc } from '../../graphqlTypes/doc';\nimport { fpMergePre } from '../../tools/utils';\nimport { useStoreModel } from '../../ModelAction/useStore';\nimport { ls } from '../../tools/dealKey';\nexport const shopCartModel = modelFactory('shopCartModel', {\n  shopCartList: []\n}, {\n  getList: async (value, option) => {\n    var _res$shopCartList;\n\n    const res = await option.query(doc.userShopCartList);\n    option.setData(fpMergePre({\n      shopCartList: (_res$shopCartList = res === null || res === void 0 ? void 0 : res.shopCartList) !== null && _res$shopCartList !== void 0 ? _res$shopCartList : []\n    }));\n  }\n});\nexport const ShopCartPage = () => {\n  const {\n    state: stateSCM,\n    actions: actionsSCM\n  } = useStoreModel(shopCartModel);\n  useEffect(() => {\n    actionsSCM.getList();\n  }, []);\n  console.log(stateSCM.shopCartList);\n  return __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 10\n    }\n  }, __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 5\n    }\n  }, stateSCM.shopCartList.reduce((pre, cur) => {\n    var _cur$number;\n\n    return pre + ((_cur$number = cur === null || cur === void 0 ? void 0 : cur.number) !== null && _cur$number !== void 0 ? _cur$number : 0);\n  }, 0), ls('件商品')), \"ShopCart\");\n};","map":{"version":3,"sources":["D:/code/zw/zw_client_web/utils/view/cart/index.tsx"],"names":["React","useEffect","modelFactory","doc","fpMergePre","useStoreModel","ls","shopCartModel","shopCartList","getList","value","option","res","query","userShopCartList","setData","ShopCartPage","state","stateSCM","actions","actionsSCM","console","log","reduce","pre","cur","number"],"mappings":";;AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,SAAQC,YAAR,QAA2B,6BAA3B;AAEA,SAAQC,GAAR,QAAkB,wBAAlB;AACA,SAAQC,UAAR,QAAyB,mBAAzB;AACA,SAAQC,aAAR,QAA4B,4BAA5B;AACA,SAASC,EAAT,QAAmB,qBAAnB;AAEA,OAAO,MAAMC,aAAa,GAAGL,YAAY,CAAC,eAAD,EAAkB;AACzDM,EAAAA,YAAY,EAAE;AAD2C,CAAlB,EAEtC;AACDC,EAAAA,OAAO,EAAE,OAAOC,KAAP,EAAcC,MAAd,KAAyB;AAAA;;AAChC,UAAMC,GAAG,GAAG,MAAMD,MAAM,CAACE,KAAP,CAAaV,GAAG,CAACW,gBAAjB,CAAlB;AACAH,IAAAA,MAAM,CAACI,OAAP,CAAeX,UAAU,CAAC;AACxBI,MAAAA,YAAY,uBAAEI,GAAF,aAAEA,GAAF,uBAAEA,GAAG,CAAEJ,YAAP,iEAAuB;AADX,KAAD,CAAzB;AAGD;AANA,CAFsC,CAAlC;AAYP,OAAO,MAAMQ,YAAY,GAAG,MAAM;AAChC,QAAM;AAACC,IAAAA,KAAK,EAAEC,QAAR;AAAkBC,IAAAA,OAAO,EAAEC;AAA3B,MAAyCf,aAAa,CAACE,aAAD,CAA5D;AACAN,EAAAA,SAAS,CAAC,MAAM;AACdmB,IAAAA,UAAU,CAACX,OAAX;AACD,GAFQ,EAEN,EAFM,CAAT;AAGAY,EAAAA,OAAO,CAACC,GAAR,CAAYJ,QAAQ,CAACV,YAArB;AAEA,SAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGU,QAAQ,CAACV,YAAT,CAAsBe,MAAtB,CAA6B,CAACC,GAAD,EAAMC,GAAN;AAAA;;AAAA,WAAcD,GAAG,mBAAIC,GAAJ,aAAIA,GAAJ,uBAAIA,GAAG,CAAEC,MAAT,qDAAmB,CAAnB,CAAjB;AAAA,GAA7B,EAAqE,CAArE,CADH,EAC4EpB,EAAE,CAAC,KAAD,CAD9E,CADK,aAAP;AAMD,CAbM","sourcesContent":["import React, {useEffect} from 'react'\r\nimport {modelFactory} from '../../ModelAction/modelUtil'\r\nimport {ShopCart} from '../../graphqlTypes/types'\r\nimport {doc} from '../../graphqlTypes/doc'\r\nimport {fpMergePre} from '../../tools/utils'\r\nimport {useStoreModel} from '../../ModelAction/useStore'\r\nimport { ls } from '../../tools/dealKey'\r\n\r\nexport const shopCartModel = modelFactory('shopCartModel', {\r\n  shopCartList: [] as ShopCart[],\r\n}, {\r\n  getList: async (value, option) => {\r\n    const res = await option.query(doc.userShopCartList)\r\n    option.setData(fpMergePre({\r\n      shopCartList: res?.shopCartList ?? [],\r\n    }))\r\n  },\r\n\r\n})\r\n\r\nexport const ShopCartPage = () => {\r\n  const {state: stateSCM, actions: actionsSCM} = useStoreModel(shopCartModel)\r\n  useEffect(() => {\r\n    actionsSCM.getList()\r\n  }, [])\r\n  console.log(stateSCM.shopCartList)\r\n\r\n  return <div>\r\n    <div>\r\n      {stateSCM.shopCartList.reduce((pre, cur) => pre + (cur?.number ?? 0), 0)}{ls('件商品')}\r\n    </div>\r\n    ShopCart\r\n  </div>\r\n}\r\n"]},"metadata":{},"sourceType":"module"}